{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/MachineSupplyEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nexport default class MachineSupplyEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      partyNamesFromApi: [],\n      itemNamesFromApi: [],\n      date: null,\n      selectedParty: \"\",\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    }; //Fetching Products from database\n\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-machineparty/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.partyNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n      fetch(\"http://127.0.0.1:8000/list-of-item/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.itemNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    this.state.fetchProduct(); // Check existence of party name\n\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    }; //Check Existance of Item Names\n\n\n    this.state.checkitem = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.itemNamesFromApi.forEach(showList);\n      } catch (err) {}\n    }; //Form Handler\n\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-machine-supply/\", {\n        party: this.state.selectedParty,\n        item: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity //remark: this.state.remark\n\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n      this.setState({\n        selectedParty: \"\",\n        selectedItem: \"\"\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Machine Supply Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      checkFromParent: this.state.checkparty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: this.state.itemNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedItem = dataFromChild;\n      },\n      placeholderfrom: \"Item name\",\n      checkFromParent: this.state.checkitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Quantity\",\n      callbackFromParent: dataFromChild => {\n        this.state.quantity = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/MachineSupplyEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputQuantityField","MachineSupplyEntry","Component","constructor","props","state","partyNamesFromApi","itemNamesFromApi","date","selectedParty","selectedItem","quantity","responseMessage","buttonStatus","visibility","fetchProduct","fetch","then","res","json","out","map","item","push","name","catch","err","checkparty","dataFromChild","setState","showList","index","toLowerCase","forEach","checkitem","onSubmit","e","post","party","data","error","alert","response","request","_response","target","reset","preventDefault","render","partyExistMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nexport default class MachineSupplyEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyNamesFromApi: [],\n      itemNamesFromApi: [],\n      date: null,\n      selectedParty: \"\",\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    };\n\n    //Fetching Products from database\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-machineparty/\")\n        .then(res => res.json())\n        .then(out => {\n          out.map(item => this.state.partyNamesFromApi.push(item.name));\n        })\n        .catch(err => {\n          throw err;\n        });\n\n      fetch(\"http://127.0.0.1:8000/list-of-item/\")\n        .then(res => res.json())\n        .then(out => {\n          out.map(item => this.state.itemNamesFromApi.push(item.name));\n        })\n        .catch(err => {\n          throw err;\n        });\n    };\n\n    this.state.fetchProduct();\n\n    // Check existence of party name\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    //Check Existance of Item Names\n    this.state.checkitem = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.itemNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    //Form Handler\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/enter-machine-supply/\", {\n          party: this.state.selectedParty,\n          item: this.state.selectedItem,\n          date: this.state.date,\n          quantity: this.state.quantity\n          //remark: this.state.remark\n        })\n        .then(res => {\n          this.setState({\n            responseMessage: res.data\n          });\n        })\n        .catch(error => {\n          alert(error.response.request._response);\n        });\n\n      e.target.reset();\n      e.preventDefault();\n      this.setState({\n        selectedParty: \"\",\n        selectedItem: \"\"\n      });\n    };\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Supply Entry</p>\n        <div className=\"pt-5\">\n          <Autocomplete\n            suggestions={this.state.partyNamesFromApi}\n            callbackFromParent={dataFromChild => {\n              this.state.selectedParty = dataFromChild;\n            }}\n            checkFromParent={this.state.checkparty}\n            placeholderfrom={\"Party name\"}\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br />\n\n          <Autocomplete\n            suggestions={this.state.itemNamesFromApi}\n            callbackFromParent={dataFromChild => {\n              this.state.selectedItem = dataFromChild;\n            }}\n            placeholderfrom={\"Item name\"}\n            checkFromParent={this.state.checkitem}\n          />\n\n          <br />\n          <br />\n\n          <InputDateField\n            callbackFromParent={dataFromChild => {\n              this.state.date = dataFromChild;\n            }}\n          />\n          <br />\n          <br />\n\n          <InputQuantityField\n            placeholder={\"Quantity\"}\n            callbackFromParent={dataFromChild => {\n              this.state.quantity = dataFromChild;\n            }}\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}