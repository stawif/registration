{"ast":null,"code":"var _jsxFileName = \"/home/snakode/registration/frontend/src/components/account/Debit.js\";\nimport React from 'react';\nimport './account.css';\n\nclass Debit extends React.Component {\n  // Fetch machine list from server\n  // Set final showing rows of table currentWork\n  // Return color for row\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      const responseDebitList = await fetch(\"http://127.0.0.1:8000/list-of-debit/\");\n      const jsonDebitDetail = await responseDebitList.json();\n\n      if (jsonDebitDetail.length != 0) {\n        this.setState({\n          minDate: jsonDebitDetail[0].date\n        });\n        this.setState({\n          maxDate: jsonDebitDetail.slice(-1)[0].date\n        });\n      }\n\n      this.setState({\n        debitDetail: jsonDebitDetail\n      });\n    };\n\n    this.setDateFilter = (item, index) => {\n      if (!this.state.minFilterDate) {\n        this.state.minFilterDate = this.state.minDate;\n      }\n\n      if (!this.state.maxFilterDate) {\n        this.state.maxFilterDate = this.state.maxDate;\n      }\n\n      if (this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate) {\n        this.state.currentDebit.push(item);\n      }\n    };\n\n    this.returnRowColor = category => {\n      if (category === \"part_debit\") {\n        return \"bg-primary\";\n      } else if (category === \"owner_debit\") {\n        return \"bg-success\";\n      } else if (category === \"purchase_debit\") {\n        return \"bg-warning\";\n      } else if (category === \"worker_debit\") {\n        return \"bg-info\";\n      } else if (category === \"daily_expense_debit\") {\n        return \"bg-danger\";\n      }\n    };\n\n    this.state = {\n      debitDetail: [],\n      minDate: null,\n      maxDate: null,\n      minFilterDate: null,\n      maxFilterDate: null,\n      currentDebit: []\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.setDateFilter = this.setDateFilter.bind(this);\n    this.returnRowColor = this.returnRowColor.bind(this);\n    this.fetchProduct();\n  }\n\n  render() {\n    //Clear currentDebit list\n    this.state.currentDebit = []; //Apply date filter\n\n    this.state.debitDetail.forEach(this.setDateFilter);\n    return React.createElement(\"div\", {\n      id: \"mainDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"dateFilter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fromDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          minFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"toDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          maxFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table table-borderd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Debit Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Remark\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.currentDebit.map(debit => React.createElement(\"tr\", {\n      className: this.returnRowColor(debit.category),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, debit.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, debit.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, debit.debit_amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, debit.remark))))));\n  }\n\n}\n\nexport default Debit;","map":{"version":3,"sources":["/home/snakode/registration/frontend/src/components/account/Debit.js"],"names":["React","Debit","Component","constructor","props","fetchProduct","responseDebitList","fetch","jsonDebitDetail","json","length","setState","minDate","date","maxDate","slice","debitDetail","setDateFilter","item","index","state","minFilterDate","maxFilterDate","currentDebit","push","returnRowColor","category","bind","render","forEach","e","target","value","map","debit","debit_amount","remark"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './account.css';\n\nclass Debit extends React.Component{\n    // Fetch machine list from server\n    fetchProduct = async () => {\n        const responseDebitList = await fetch(\"http://127.0.0.1:8000/list-of-debit/\" );\n        const jsonDebitDetail = await responseDebitList.json();\n\n        if(jsonDebitDetail.length!=0)\n        {\n            this.setState({\n                minDate: jsonDebitDetail[0].date\n            });\n            this.setState({\n                maxDate: jsonDebitDetail.slice(-1)[0].date    \n            });\n        } \n        this.setState({\n            debitDetail: jsonDebitDetail\n        });\n    };\n\n    // Set final showing rows of table currentWork\n    setDateFilter = (item, index) => {\n        if(!this.state.minFilterDate){\n            this.state.minFilterDate= this.state.minDate;\n        }\n        if(!this.state.maxFilterDate){\n            this.state.maxFilterDate= this.state.maxDate;\n        }\n        if(this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate){\n            this.state.currentDebit.push(item);\n        }\n    }\n\n    // Return color for row\n    returnRowColor = (category) =>{\n        if(category === \"part_debit\"){\n            return \"bg-primary\"\n        }\n        else if(category === \"owner_debit\"){\n            return \"bg-success\"\n        }\n        else if(category === \"purchase_debit\"){\n            return \"bg-warning\"\n        }\n        else if(category === \"worker_debit\"){\n            return \"bg-info\"\n        }\n        else if(category === \"daily_expense_debit\"){\n            return \"bg-danger\"\n        }\n    }\n    constructor(props){\n        super(props);\n        this.state= {\n            debitDetail: [],\n            minDate: null,\n            maxDate: null,\n            minFilterDate: null,\n            maxFilterDate: null,\n            currentDebit: []\n        }\n\n        this.fetchProduct= this.fetchProduct.bind(this);\n        this.setDateFilter= this.setDateFilter.bind(this);\n        this.returnRowColor= this.returnRowColor.bind(this);\n\n        this.fetchProduct();\n    }\n\n    render(){\n        //Clear currentDebit list\n        this.state.currentDebit= [];\n        \n        //Apply date filter\n        this.state.debitDetail.forEach(this.setDateFilter);\n        return(\n            <div id=\"mainDiv\">\n                <div class=\"dateFilter\">\n                    <div className=\"fromDate\">\n                        <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                            this.setState({\n                                minFilterDate: e.target.value\n                            });\n                        }}/>\n                    </div>\n                    <div className=\"toDate\">\n                        <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                            this.setState({\n                                maxFilterDate: e.target.value\n                            });\n                        }}/>\n                    </div>\n                </div>\n                <table className=\"table table-borderd\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>Category</th>\n                            <th>Date</th>\n                            <th>Debit Amount</th>\n                            <th>Remark</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.currentDebit.map((debit) => (\n                            <tr className={this.returnRowColor(debit.category)}>\n                                <td>{debit.category}</td>\n                                <td>{debit.date}</td>\n                                <td>{debit.debit_amount}</td>\n                                <td>{debit.remark}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>    \n        );\n    }\n}\n\nexport default Debit;"]},"metadata":{},"sourceType":"module"}