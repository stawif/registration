{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/MachineRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class MachineRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      machineName: \"\",\n      machineExistStatus: \"\",\n      machineList: {},\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    }; // Fetch machine list from server\n\n    this.state.fetchProduct = async () => {\n      const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n      const jsonMachineList = await responseMachineList.json();\n      this.state.machineList = jsonMachineList;\n    };\n\n    this.state.fetchProduct(); // Check existence of machine name\n\n    this.state.checkMachine = () => {\n      try {\n        this.setState({\n          machineExistStatus: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.machineName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              machineExistStatus: \"* This machine name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.machineList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/machine-registration/\", {\n        name: this.state.machineName\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    this.state.checkMachine();\n    console.log(\"mchnm\", this.state.machineName);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Machine Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"machineName\",\n      placeholder: \"Machine Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      value: this.state.machineName,\n      onChange: this.onChange.bind(this) // {e => {\n      //   //this.state.machineName = e.target.value;\n      //   this.setState({ [e.target.name]: e.target.value });\n      //   console.log(e.target.name,\"as\", e.target.value);\n      //   this.state.checkMachine();\n      // }}\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.machineExistStatus), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/MachineRegistration.js"],"names":["React","axios","MachineRegistration","Component","constructor","props","state","machineName","machineExistStatus","machineList","responseMessage","buttonStatus","visibility","fetchProduct","responseMachineList","fetch","jsonMachineList","json","checkMachine","setState","showList","item","index","toLowerCase","name","forEach","err","onSubmit","e","post","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","onChange","event","value","console","log","render","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class MachineRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      machineName: \"\",\n      machineExistStatus: \"\",\n      machineList: {},\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    };\n\n    // Fetch machine list from server\n    this.state.fetchProduct = async () => {\n      const responseMachineList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machines/\"\n      );\n      const jsonMachineList = await responseMachineList.json();\n      this.state.machineList = jsonMachineList;\n    };\n\n    this.state.fetchProduct();\n\n    // Check existence of machine name\n    this.state.checkMachine = () => {\n      try {\n        this.setState({\n          machineExistStatus: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n        const showList = (item, index) => {\n          if (\n            this.state.machineName.toLowerCase() === item.name.toLowerCase()\n          ) {\n            this.setState({\n              machineExistStatus: \"* This machine name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.machineList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/machine-registration/\", {\n          name: this.state.machineName\n        })\n        .then(res => {\n          this.state.fetchProduct();\n          this.setState({\n            responseMessage: res.data\n          });\n        })\n        .catch(error => {\n          alert(error.response.request._response);\n        });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n  onChange(event) {\n    this.setState({\n    [event.target.name]: event.target.value\n    });\n    this.state.checkMachine();\n    console.log(\"mchnm\", this.state.machineName);\n    \n    }\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Registration</p>\n        <div className=\"pt-5\">\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"machineName\"\n            placeholder=\"Machine Name\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            value={this.state.machineName}\n            onChange={this.onChange.bind(this)}\n            // {e => {\n            //   //this.state.machineName = e.target.value;\n            //   this.setState({ [e.target.name]: e.target.value });\n            //   console.log(e.target.name,\"as\", e.target.value);\n              \n            //   this.state.checkMachine();\n            // }}\n            required\n          />\n        </div>\n        <p>{this.state.machineExistStatus}</p>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}