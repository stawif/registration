{"ast":null,"code":"var _jsxFileName = \"E:\\\\registration\\\\frontend\\\\src\\\\components\\\\registration\\\\MachinePartyRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport InputPartyNameField from \"../modular/InputPartyNameField\";\nimport InputContactField from \"../modular/InputContactField\";\nimport InputPartyVillageField from \"../modular/InputPartyVillageField\";\nexport default class MachinePartyRegistration extends React.Component {\n  // Check existence of party name\n  //Form Handler\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n        const jsonMachineList = await responseMachineList.json();\n        this.state.machineList = jsonMachineList;\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkVillage = () => {\n      this.setState({\n        partyExistMessage: \"\",\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"visible\"\n        }\n      });\n    };\n\n    this.checkParty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/machine-party-registration/\", {\n        name: this.state.partyName,\n        contact: this.state.partyContact,\n        village: this.state.partyVillage\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {// alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      partyName: \"\",\n      partyContact: \"\",\n      partyVillage: \"\",\n      partyList: {},\n      partyExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.checkVillage = this.checkVillage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Machine Party Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(InputContactField, {\n      callbackFromParent: dataFromChild => {\n        this.state.partyContact = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"partyName\",\n      placeholder: \"Party Name\",\n      value: this.state.partyName,\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyName = e.target.value;\n        this.checkParty();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"partyVillage\",\n      placeholder: \"Party Village\",\n      value: this.state.partyVillage,\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyVillage = e.target.value;\n        this.checkVillage();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["E:/registration/frontend/src/components/registration/MachinePartyRegistration.js"],"names":["React","axios","InputPartyNameField","InputContactField","InputPartyVillageField","MachinePartyRegistration","Component","constructor","props","fetchProduct","responseMachineList","fetch","jsonMachineList","json","state","machineList","toggleLoadStatus","checkVillage","setState","partyExistMessage","responseMessage","buttonStatus","visibility","checkParty","showList","item","index","partyName","toLowerCase","name","partyList","forEach","err","onSubmit","e","post","contact","partyContact","village","partyVillage","then","res","data","catch","error","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render","dataFromChild","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport InputPartyNameField from \"../modular/InputPartyNameField\";\r\nimport InputContactField from \"../modular/InputContactField\";\r\nimport InputPartyVillageField from \"../modular/InputPartyVillageField\";\r\nexport default class MachinePartyRegistration extends React.Component {\r\n  fetchProduct = async () => {\r\n    try {\r\n      const responseMachineList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-machineparty/\"\r\n      );\r\n      const jsonMachineList = await responseMachineList.json();\r\n      this.state.machineList = jsonMachineList;\r\n    } catch {\r\n      this.toggleLoadStatus();\r\n    }\r\n  };\r\n\r\n  checkVillage = () => {\r\n    this.setState({\r\n      partyExistMessage: \"\",\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      }\r\n    });\r\n  };\r\n  // Check existence of party name\r\n  checkParty = () => {\r\n    try {\r\n      this.setState({\r\n        partyExistMessage: \"\",\r\n        responseMessage: \"\",\r\n        buttonStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n      const showList = (item, index) => {\r\n        if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\r\n          this.setState({\r\n            partyExistMessage: \"* This party name is already exist!!!\",\r\n            buttonStatus: {\r\n              visibility: \"hidden\"\r\n            }\r\n          });\r\n        } else {\r\n        }\r\n      };\r\n\r\n      this.state.partyList.forEach(showList);\r\n    } catch (err) {}\r\n  };\r\n\r\n  //Form Handler\r\n  onSubmit = e => {\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/machine-party-registration/\", {\r\n        name: this.state.partyName,\r\n        contact: this.state.partyContact,\r\n        village: this.state.partyVillage\r\n      })\r\n      .then(res => {\r\n        this.state.fetchProduct();\r\n        this.setState({\r\n          responseMessage: res.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        // alert(error.response.request._response);\r\n      });\r\n\r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  // toggle load status\r\n  toggleLoadStatus = async () => {\r\n    if (this.state.loadingStatus.visibility === \"visible\") {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"hidden\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"visible\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      partyName: \"\",\r\n      partyContact: \"\",\r\n      partyVillage: \"\",\r\n      partyList: {},\r\n      partyExistMessage: \"\",\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadingStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadedStatus: {\r\n        visibility: \"hidden\"\r\n      }\r\n    };\r\n    this.fetchProduct = this.fetchProduct.bind(this);\r\n    this.checkParty = this.checkParty.bind(this);\r\n    this.checkVillage = this.checkVillage.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\r\n    this.fetchProduct();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.toggleLoadStatus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.onSubmit(e)}\r\n      >\r\n        <p className=\"headingViewPart\">Machine Party Registration</p>\r\n        <div className=\"pt-5\">\r\n          \r\n          <InputContactField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.partyContact = dataFromChild;\r\n              }\r\n            }\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"mb-2\"\r\n            name=\"partyName\"\r\n            placeholder=\"Party Name\"\r\n            value={this.state.partyName}\r\n            autoComplete=\"off\"\r\n            maxLength=\"30\"\r\n            minLength=\"5\"\r\n            onChange={e => {\r\n              this.state.partyName = e.target.value;\r\n              this.checkParty();\r\n            }}\r\n            required\r\n          />\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"mb-2\"\r\n            name=\"partyVillage\"\r\n            placeholder=\"Party Village\"\r\n            value={this.state.partyVillage}\r\n            autoComplete=\"off\"\r\n            maxLength=\"30\"\r\n            minLength=\"5\"\r\n            onChange={e => {\r\n              this.state.partyVillage = e.target.value;\r\n              this.checkVillage();\r\n            }}\r\n            required\r\n          />\r\n          \r\n        </div>\r\n\r\n        <p>{this.state.responseMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-dark\"\r\n          style={this.state.buttonStatus}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}