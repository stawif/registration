{"ast":null,"code":"var _jsxFileName = \"/home/snakode/registration/frontend/src/components/entry/VehicleSupplyEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nexport default class VehicleSupplyEntry extends React.Component {\n  //Fetching Products from Database to use them in AutoSugestion and for Checking While Entered Value Exists in Database or Not\n  //Check Existence of item list\n  // Form Submit Handling\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseItemList = await fetch(\"http://127.0.0.1:8000/list-of-material/\");\n        const jsonItemList = await responseItemList.json();\n        jsonItemList.map(item => this.setState({\n          materialNamesFromApi: [...this.state.materialNamesFromApi, item.name]\n        }));\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkItem = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.materialNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-vehicle-supply/\", {\n        material: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      materialNamesFromApi: [],\n      date: null,\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkItem = this.checkItem.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Vehicle Supply Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.materialNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedItem = dataFromChild;\n      },\n      placeholderfrom: \"Material name\",\n      checkFromParent: this.checkItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Quantity\",\n      callbackFromParent: dataFromChild => {\n        this.state.quantity = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/home/snakode/registration/frontend/src/components/entry/VehicleSupplyEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputQuantityField","VehicleSupplyEntry","Component","constructor","props","fetchProduct","responseItemList","fetch","jsonItemList","json","map","item","setState","materialNamesFromApi","state","name","toggleLoadStatus","checkItem","dataFromChild","responseMessage","buttonStatus","visibility","showList","index","toLowerCase","forEach","err","onSubmit","e","post","material","selectedItem","date","quantity","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\n\nexport default class VehicleSupplyEntry extends React.Component {\n  //Fetching Products from Database to use them in AutoSugestion and for Checking While Entered Value Exists in Database or Not\n  fetchProduct = async () => {\n    try {\n      const responseItemList = await fetch(\n        \"http://127.0.0.1:8000/list-of-material/\"\n      );\n      const jsonItemList = await responseItemList.json();\n\n      jsonItemList.map(item => \n        this.setState({ \n          materialNamesFromApi: [...this.state.materialNamesFromApi, item.name] \n        })\n      );\n    } catch {\n      this.toggleLoadStatus();\n    }\n    \n  };\n\n\n  //Check Existence of item list\n  checkItem = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.materialNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  // Form Submit Handling\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/enter-vehicle-supply/\", {\n        material: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity\n      })\n      .then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        alert(error.response.request._response);\n      });\n  \n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.visibility === \"visible\") {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"hidden\"\n        },\n        loadedStatus: {\n          visibility: \"visible\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"visible\"\n        },\n        loadedStatus: {\n          visibility: \"hidden\"\n        }\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      materialNamesFromApi: [],\n\n      date: null,\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkItem = this.checkItem.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Vehicle Supply Entry</p>\n        <div className=\"pt-5\">\n          <Autocomplete\n            suggestions={this.state.materialNamesFromApi}\n            callbackFromParent={dataFromChild => {\n              this.state.selectedItem = dataFromChild;\n            }}\n            placeholderfrom={\"Material name\"}\n            checkFromParent={this.checkItem}\n          />\n\n          <br />\n          <br />\n\n          <InputDateField\n            callbackFromParent={dataFromChild => {\n              this.state.date = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n\n          <InputQuantityField\n            placeholder={\"Quantity\"}\n            callbackFromParent={dataFromChild => {\n              this.state.quantity = dataFromChild;\n            }}\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}