{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/VehicleSupplyEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nexport default class VehicleSupplyEntry extends React.Component {\n  //Fetching Products from Database to use them in AutoSugestion and for Checking While Entered Value Exists in Database or Not\n  // Check existence of party name\n  //Check Existence of item list\n  // Form Submit Handling\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\");\n        const jsonPartyList = await responsePartyList.json();\n        jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n        console.log(this.state.partyNamesFromApi);\n        const responseItemList = await fetch(\"http://127.0.0.1:8000/list-of-item/\");\n        const jsonItemList = await responseItemList.json();\n        jsonItemList.map(item => this.state.itemNamesFromApi.push(item.name));\n        console.log(this.state.itemNamesFromApi);\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkParty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.checkItem = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.itemNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-vehicle-supply/\", {\n        party: this.state.selectedParty,\n        item: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      itemNamesFromApi: [],\n      date: null,\n      selectedParty: \"\",\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Vehicle Supply Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      checkFromParent: this.checkParty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: this.state.itemNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedItem = dataFromChild;\n      },\n      placeholderfrom: \"Item name\",\n      checkFromParent: this.checkItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Quantity\",\n      callbackFromParent: dataFromChild => {\n        this.state.quantity = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/VehicleSupplyEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputQuantityField","VehicleSupplyEntry","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","map","item","state","partyNamesFromApi","push","name","console","log","responseItemList","jsonItemList","itemNamesFromApi","toggleLoadStatus","checkParty","dataFromChild","setState","responseMessage","buttonStatus","visibility","showList","index","toLowerCase","forEach","err","checkItem","onSubmit","e","post","party","selectedParty","selectedItem","date","quantity","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","loadingStatus","loadedStatus","componentDidMount","render","partyExistMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\n\nexport default class VehicleSupplyEntry extends React.Component {\n\n   //Fetching Products from Database to use them in AutoSugestion and for Checking While Entered Value Exists in Database or Not\n   fetchProduct = async () => {\n\n    try {\n      const responsePartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-vehicleparty/\"\n      );\n      const jsonPartyList = await responsePartyList.json();\n\n      jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n\n      console.log(this.state.partyNamesFromApi);\n      \n\n      const responseItemList = await fetch(\n        \"http://127.0.0.1:8000/list-of-item/\"\n      );\n      const jsonItemList = await responseItemList.json();\n\n      jsonItemList.map(item => this.state.itemNamesFromApi.push(item.name));\n\n      console.log(this.state.itemNamesFromApi);\n    } catch {\n      this.toggleLoadStatus();\n    }\n   \n  };\n\n\n  // Check existence of party name\n  checkParty = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.partyNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  //Check Existence of item list\n  checkItem = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.itemNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  // Form Submit Handling\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/enter-vehicle-supply/\", {\n        party: this.state.selectedParty,\n        item: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity\n      })\n      .then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        alert(error.response.request._response);\n      });\n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.visibility === \"visible\") {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"hidden\"\n        },\n        loadedStatus: {\n          visibility: \"visible\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"visible\"\n        },\n        loadedStatus: {\n          visibility: \"hidden\"\n        }\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyNamesFromApi: [],\n      itemNamesFromApi: [],\n\n      date: null,\n      selectedParty: \"\",\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n\n   \n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Vehicle Supply Entry</p>\n        <div className=\"pt-5\">\n          <Autocomplete\n            suggestions={this.state.partyNamesFromApi}\n            callbackFromParent={dataFromChild => {\n              this.state.selectedParty = dataFromChild;\n            }}\n            checkFromParent={this.checkParty}\n            placeholderfrom={\"Party name\"}\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br />\n\n          <Autocomplete\n            suggestions={this.state.itemNamesFromApi}\n            callbackFromParent={dataFromChild => {\n              this.state.selectedItem = dataFromChild;\n            }}\n            placeholderfrom={\"Item name\"}\n            checkFromParent={this.checkItem}\n          />\n\n          <br />\n          <br />\n\n          <InputDateField\n            callbackFromParent={dataFromChild => {\n              this.state.date = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n\n          <InputQuantityField\n          placeholder={\"Quantity\"}\n            callbackFromParent={dataFromChild => {\n              this.state.quantity = dataFromChild;\n            }}\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}