{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/PartyReg.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport useInput from './InputField';\nimport RadioButtons from \"./RadioButtons\";\nexport default function PartyReg() {\n  const [data, setData] = useState({});\n  const [partytype, setPartyType] = useState(\"\");\n  const [name, userName] = useInput({\n    type: \"text\",\n    placeholder: \"name\"\n  });\n  const [contact, userContact] = useInput({\n    type: \"text\",\n    placeholder: \"phone no\"\n  });\n  const [address, userAddress] = useInput({\n    type: \"text\",\n    placeholder: \"Address\"\n  });\n  useEffect(() => {\n    async function fetchProduct() {\n      const response = await fetch(\"http://127.0.0.1:8000/list-of-party/\");\n      const res = await response.json();\n      setData(res);\n    }\n\n    fetchProduct();\n    checkName();\n  }, [name]); // below function is used to check typed machine name is already in database or not\n\n  function checkName() {\n    try {\n      const showList = (item, index) => {\n        console.log(\"Name is = \" + item.name);\n\n        if (name === item.name) {\n          alert(\"Chng machine name\");\n        }\n      };\n\n      data.forEach(showList);\n    } catch (err) {\n      console.log(\"Still loading...\");\n    }\n  } // below function is used to submit the machine registration request\n\n\n  function handleClick() {\n    axios.post(\"http://127.0.0.1:8000/party-registration/\", {\n      name: name,\n      contact: contact,\n      village: address,\n      partytype: partytype\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n      setData(res);\n    });\n    console.log(name);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Party Registration\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, userName, userContact, userAddress, [\"machine_work\", \"vehicle_work\", \"daily_work\", \"purchase_party\"].map((option, i) => {\n    return React.createElement(\"label\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      checked: this.state.checked === i ? true : false,\n      key: i + 100,\n      onChange: this.onChange.bind(this, i),\n      value: option,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), option);\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Register\"))));\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/PartyReg.js"],"names":["React","useState","useEffect","axios","useInput","RadioButtons","PartyReg","data","setData","partytype","setPartyType","name","userName","type","placeholder","contact","userContact","address","userAddress","fetchProduct","response","fetch","res","json","checkName","showList","item","index","console","log","alert","forEach","err","handleClick","post","village","then","map","option","i","state","checked","onChange","bind"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport useInput from './InputField'\nimport RadioButtons from \"./RadioButtons\";\n\nexport default function PartyReg() {\n  const [data, setData] = useState({});\n   const [partytype, setPartyType] = useState(\"\")\n  const [name, userName] = useInput({ type: \"text\", placeholder: \"name\" });\n  const [contact, userContact] = useInput({ type: \"text\", placeholder: \"phone no\" });\n  const [address, userAddress] = useInput({ type: \"text\", placeholder: \"Address\" });\n\n  useEffect(() => {\n    async function fetchProduct() {\n      const response = await fetch(\n        \"http://127.0.0.1:8000/list-of-party/\"\n      );\n\n      const res = await response.json();\n      setData(res);\n    }\n\n    fetchProduct();\n    checkName();\n  }, [name]);\n\n  // below function is used to check typed machine name is already in database or not\n  function checkName() {\n    try {\n      const showList = (item, index) => {\n        console.log(\"Name is = \" + item.name);\n        if (name === item.name) {\n          alert(\"Chng machine name\");\n        }\n      };\n      data.forEach(showList);\n    } catch (err) {\n      console.log(\"Still loading...\");\n    }\n  }\n\n  // below function is used to submit the machine registration request\n  function handleClick() {\n    axios\n      .post(\"http://127.0.0.1:8000/party-registration/\", { name: name, contact: contact, village: address, partytype: partytype })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        setData(res);\n      });\n    console.log(name);\n  }\n  \n\n  return (\n    <div>\n      <center>\n        <h2>Party Registration</h2>\n      </center>\n      <hr />\n      <br />\n      <div className=\"\">\n        <form onSubmit={handleClick}>\n          {userName}\n          {userContact}\n          {userAddress}\n          \n          {[\"machine_work\", \"vehicle_work\", \"daily_work\", \"purchase_party\"].map(\n          (option, i) => {\n            return (\n              <label key={i}>\n                <input\n                  type=\"radio\"\n                  checked={this.state.checked === i ? true : false}\n                  key={i + 100}\n                  onChange={this.onChange.bind(this, i)}\n                  value={option}\n                  required\n                />\n                {option}\n              </label>\n            );\n          }\n        )}\n          \n          <button>Register</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}