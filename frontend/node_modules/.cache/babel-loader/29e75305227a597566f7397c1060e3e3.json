{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/registration/MachineRegistration.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from '../modular/InputField';\nexport default function MachineRegistration() {\n  const [machineName, userInput] = useState(\"\");\n\n  const fetchProduct = async () => {\n    console.log(\"Fetch calls\");\n    const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n    const jsonMachineList = await responseMachineList.json();\n    setMachineList(jsonMachineList);\n  };\n\n  fetchProduct();\n  useEffect(() => {\n    checkMachine();\n  }, [machineList]);\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    alert(\"machine registered successfully\" + machineName);\n    axios.post(`http://127.0.0.1:8000/machine-registration/`, {\n      name: machineName\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n      setMachineList(res);\n    });\n    e.target.reset();\n  };\n\n  console.log(errors);\n  return React.createElement(\"form\", {\n    className: \"form-container form-group\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"headingViewPart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Machine Registration\"), React.createElement(\"div\", {\n    className: \"pt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(InputField, {\n    type: \"text\",\n    name: \"machineName\",\n    placeholder: \"Machine name\",\n    onChange: e => userInput(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), errorMessage, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-outline-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Save\"));\n}\n/*\n                <input \n                    type=\"text\" \n                    className=\"mb-2\" \n                    name=\"machineName\" \n                    ref={register({\n                      required: true,\n                      maxLength: 30,\n                      minLength: { value: 5, message: \"Min length is 5\" }\n                    })}\n                    placeholder=\"Machine Name\" \n                    onChange={e => userInput(e.target.value)} \n                />\n*/","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/registration/MachineRegistration.js"],"names":["React","useState","useEffect","axios","useForm","InputField","MachineRegistration","machineName","userInput","fetchProduct","console","log","responseMachineList","fetch","jsonMachineList","json","setMachineList","checkMachine","machineList","register","errors","handleSubmit","reset","onSubmit","data","e","alert","post","name","then","res","target","value","errorMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAC5C,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BP,QAAQ,CAAC,EAAD,CAAzC;;AAEA,QAAMQ,YAAY,GAAG,YAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAMC,mBAAmB,GAAG,MAAMC,KAAK,CAAC,yCAAD,CAAvC;AACA,UAAMC,eAAe,GAAG,MAAMF,mBAAmB,CAACG,IAApB,EAA9B;AACAC,IAAAA,cAAc,CAACF,eAAD,CAAd;AACD,GALD;;AAOAL,EAAAA,YAAY;AAEZP,EAAAA,SAAS,CACP,MAAM;AACJe,IAAAA,YAAY;AACb,GAHM,EAIP,CAACC,WAAD,CAJO,CAAT;AAOA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA;AAAlC,MAA4ClB,OAAO,EAAzD;;AACA,QAAMmB,QAAQ,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5BC,IAAAA,KAAK,CAAC,oCAAkCnB,WAAnC,CAAL;AACAJ,IAAAA,KAAK,CACFwB,IADH,CACS,6CADT,EACuD;AACnDC,MAAAA,IAAI,EAAErB;AAD6C,KADvD,EAIGsB,IAJH,CAIQC,GAAG,IAAI;AACXpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAG,CAACN,IAAhB;AACAR,MAAAA,cAAc,CAACc,GAAD,CAAd;AACD,KARH;AASAL,IAAAA,CAAC,CAACM,MAAF,CAAST,KAAT;AACD,GAZD;;AAaAZ,EAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AAEA,SACK;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAA4C,IAAA,QAAQ,EAAEC,YAAY,CAACE,QAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAEA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACS,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,IAAI,EAAE,aAFR;AAGE,IAAA,WAAW,EAAE,cAHf;AAIE,IAAA,QAAQ,EAAKE,CAAC,IAAIjB,SAAS,CAACiB,CAAC,CAACM,MAAF,CAASC,KAAV,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,CAFA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,EAWSC,YAXT,EAYO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZP,EAaA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA,CADL;AAiBD;AAED","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from '../modular/InputField';\n\nexport default function MachineRegistration() {\n  const [machineName, userInput] = useState(\"\");\n\n  const fetchProduct = async () =>{\n    console.log(\"Fetch calls\");\n    const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n    const jsonMachineList = await responseMachineList.json();\n    setMachineList(jsonMachineList);\n  }\n\n  fetchProduct(); \n\n  useEffect(\n    () => {\n      checkMachine();\n    },\n    [machineList]\n  );\n  \n  const { register, errors, handleSubmit, reset } = useForm();\n  const onSubmit = (data, e) => {\n    alert(\"machine registered successfully\"+machineName);\n    axios\n      .post(`http://127.0.0.1:8000/machine-registration/`, {\n        name: machineName\n      })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        setMachineList(res);\n      });\n    e.target.reset();\n  };\n  console.log(errors);\n\n  return (\n\t\t\t\t\t\t\t<form className=\"form-container form-group\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t\t\t<p className=\"headingViewPart\">Machine Registration</p>\n\t\t\t\t\t\t\t<div className=\"pt-5\">\n                <InputField\n                  type={\"text\"}\n                  name={\"machineName\"} \n                  placeholder={\"Machine name\"}\n                  onChange = { e => userInput(e.target.value) } \n                />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<br/>\n              { errorMessage }\n              <br/>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-outline-dark\">Save</button>\n\t\t\t\t\t\t\t</form>      \n  );\n}\n\n/*\n                <input \n                    type=\"text\" \n                    className=\"mb-2\" \n                    name=\"machineName\" \n                    ref={register({\n                      required: true,\n                      maxLength: 30,\n                      minLength: { value: 5, message: \"Min length is 5\" }\n                    })}\n                    placeholder=\"Machine Name\" \n                    onChange={e => userInput(e.target.value)} \n                />\n*/"]},"metadata":{},"sourceType":"module"}