{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/MachineSupplyEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nexport default class MachineSupplyEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myCallbackForSelectedParty = dataFromChild => {\n      this.state.selectedParty = dataFromChild;\n    };\n\n    this.myCallbackForselectedItem = dataFromChild => {\n      this.state.selectedItem = dataFromChild;\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      itemNamesFromApi: [],\n      date: null,\n      selectedParty: \"\",\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    }; //Fetching Products from database\n\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-machineparty/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.partyNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n      fetch(\"http://127.0.0.1:8000/list-of-item/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.itemNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    this.state.fetchProduct(); // Check existence of party name\n\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    }; //Check Existance of Item Names\n\n\n    this.state.checkitem = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.itemNamesFromApi.forEach(showList);\n      } catch (err) {}\n    }; //Form Handler\n\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-machine-supply/\", {\n        party: this.state.selectedParty,\n        item: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n      this.setState({\n        selectedParty: \"\",\n        selectedItem: \"\"\n      });\n    }; //Getting Current Date\n\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n  } //Callback to set Selected Party to state\n\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Machine Supply Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedParty,\n      checkFromParent: this.state.checkparty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: this.state.itemNamesFromApi,\n      callbackFromParent: this.myCallbackForselectedItem,\n      placeholderfrom: \"Item name\",\n      checkFromParent: this.state.checkitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"quantity\",\n      placeholder: \"Quantity\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.setState({\n          quantity: parseInt(e.target.value)\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/MachineSupplyEntry.js"],"names":["React","axios","Autocomplete","InputDateField","MachineSupplyEntry","Component","constructor","props","myCallbackForSelectedParty","dataFromChild","state","selectedParty","myCallbackForselectedItem","selectedItem","partyNamesFromApi","itemNamesFromApi","date","quantity","responseMessage","buttonStatus","visibility","fetchProduct","fetch","then","res","json","out","map","item","push","name","catch","err","checkparty","setState","showList","index","toLowerCase","forEach","checkitem","onSubmit","e","post","party","remark","data","error","alert","response","request","_response","target","reset","preventDefault","getDate","curr","Date","setDate","toISOString","substr","render","partyExistMessage","parseInt","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\"\nexport default class MachineSupplyEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyNamesFromApi: [],\n      itemNamesFromApi: [],\n      date: null,\n      selectedParty: \"\",\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    };\n\n    //Fetching Products from database\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-machineparty/\")\n        .then(res => res.json())\n        .then(out => {\n          out.map(item => this.state.partyNamesFromApi.push(item.name));\n        })\n        .catch(err => {\n          throw err;\n        });\n\n      fetch(\"http://127.0.0.1:8000/list-of-item/\")\n        .then(res => res.json())\n        .then(out => {\n          out.map(item => this.state.itemNamesFromApi.push(item.name));\n        })\n        .catch(err => {\n          throw err;\n        });\n    };\n\n    this.state.fetchProduct();\n\n    // Check existence of party name\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    //Check Existance of Item Names\n    this.state.checkitem = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.itemNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    //Form Handler\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/enter-machine-supply/\", {\n          party: this.state.selectedParty,\n          item: this.state.selectedItem,\n          date: this.state.date,\n          quantity: this.state.quantity,\n          remark: this.state.remark\n        })\n        .then(res => {\n          this.setState({\n            responseMessage: res.data\n          });\n        })\n        .catch(error => {\n          alert(error.response.request._response);\n        });\n\n      e.target.reset();\n      e.preventDefault();\n      this.setState({\n        selectedParty: \"\",\n        selectedItem: \"\"\n      });\n    };\n\n    //Getting Current Date\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n  }\n\n  //Callback to set Selected Party to state\n  myCallbackForSelectedParty = dataFromChild => {\n    this.state.selectedParty = dataFromChild;\n  };\n\n  //Callback to set Selected item to state\n  myCallbackForselectedItem = dataFromChild => {\n    this.state.selectedItem = dataFromChild;\n  };\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Supply Entry</p>\n        <div className=\"pt-5\">\n          <Autocomplete\n            suggestions={this.state.partyNamesFromApi}\n            callbackFromParent={this.myCallbackForSelectedParty}\n            checkFromParent={this.state.checkparty}\n            placeholderfrom={\"Party name\"}\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br />\n\n          <Autocomplete\n            suggestions={this.state.itemNamesFromApi}\n            callbackFromParent={this.myCallbackForselectedItem}\n            placeholderfrom={\"Item name\"}\n            checkFromParent={this.state.checkitem}\n          />\n\n          <br />\n          <br />\n\n          <InputDateField\n            callbackFromParent={dataFromChild => {\n              this.state.date = dataFromChild;\n            }}\n          />\n          <br />\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"quantity\"\n            placeholder=\"Quantity\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.setState({\n                quantity: parseInt(e.target.value)\n              });\n            }}\n            required\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}