{"ast":null,"code":"var _jsxFileName = \"/home/snakode/registration/frontend/src/components/account/MachineCredit.js\";\nimport React from 'react';\nimport Autocomplete from \"../entry/AutoComplete\";\nimport './account.css';\n\nclass MachineCredit extends React.Component {\n  // Fetch machine list from server\n  //form Handler Submitting\n  // Set final showing rows of table currentWork\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n        const jsonPartyList = await responsePartyList.json();\n        jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n        this.state.partyList = jsonPartyList;\n      } catch {}\n    };\n\n    this.onSubmit = async () => {\n      const responsCreditDetail = await fetch('http://127.0.0.1:8000/machine-party-credit/', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"party\": this.state.selectedParty\n        })\n      });\n      const jsonCreditDetail = await responsCreditDetail.json();\n\n      if (jsonCreditDetail.credits.length != 0) {\n        this.setState({\n          minDate: jsonCreditDetail.credits[0].date\n        });\n        this.setState({\n          maxDate: jsonCreditDetail.credits.slice(-1)[0].date\n        });\n      }\n\n      this.setState({\n        creditDetail: jsonCreditDetail,\n        input: {\n          display: \"none\"\n        },\n        table: {\n          display: \"block\"\n        }\n      });\n    };\n\n    this.setDateFilter = (item, index) => {\n      if (!this.state.minFilterDate) {\n        this.state.minFilterDate = this.state.minDate;\n      }\n\n      if (!this.state.maxFilterDate) {\n        this.state.maxFilterDate = this.state.maxDate;\n      }\n\n      if (this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate) {\n        this.state.currentWork.push(item);\n      }\n    };\n\n    this.state = {\n      creditDetail: {\n        party: \"\",\n        contact: \"\",\n        village: \"\",\n        crasher: \"\",\n        credits: []\n      },\n      minDate: null,\n      maxDate: null,\n      minFilterDate: null,\n      maxFilterDate: null,\n      startDate: null,\n      endDate: null,\n      currentCredit: [],\n      partyList: {},\n      selectedParty: \"\",\n      partyNamesFromApi: [],\n      input: {\n        display: \"block\"\n      },\n      table: {\n        display: \"none\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.setDateFilter = this.setDateFilter.bind(this);\n    this.fetchProduct();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"mainDiv\",\n      className: \"d-flex justify-content-center align-items-center scrollingSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tableShow\",\n      style: this.state.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"upperHeader row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.creditDetail.party)))), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.creditDetail.contact))), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.creditDetail.village))), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          minFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table table-borderd tablePart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Credit Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Remark\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.creditDetail.credits.map(credit => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, credit.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, credit.credit_amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, credit.remark)))))), React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      style: this.state.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      onClick: e => this.onSubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default MachineCredit;","map":{"version":3,"sources":["/home/snakode/registration/frontend/src/components/account/MachineCredit.js"],"names":["React","Autocomplete","MachineCredit","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","map","item","state","partyNamesFromApi","push","name","partyList","onSubmit","responsCreditDetail","method","headers","body","JSON","stringify","selectedParty","jsonCreditDetail","credits","length","setState","minDate","date","maxDate","slice","creditDetail","input","display","table","setDateFilter","index","minFilterDate","maxFilterDate","currentWork","party","contact","village","crasher","startDate","endDate","currentCredit","bind","render","e","target","value","credit","credit_amount","remark","dataFromChild","buttonStatus"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Autocomplete from \"../entry/AutoComplete\";\nimport './account.css';\nclass MachineCredit extends React.Component{\n    // Fetch machine list from server\n    fetchProduct = async () => {\n        try {\n            const responsePartyList = await fetch(\n                \"http://127.0.0.1:8000/list-of-machineparty/\" \n            );\n            const jsonPartyList = await responsePartyList.json();\n            jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n            this.state.partyList = jsonPartyList;\n        }\n        catch {\n        }\n    };\n\n  //form Handler Submitting\n  onSubmit = async () => {\n    const responsCreditDetail = await fetch('http://127.0.0.1:8000/machine-party-credit/', {\n        method: 'post',\n        headers: {'Content-Type':'application/json'},\n        body: JSON.stringify({\n            \"party\": this.state.selectedParty\n        })\n    });        \n    const jsonCreditDetail = await responsCreditDetail.json();\n\n    if(jsonCreditDetail.credits.length!=0)\n    {\n        this.setState({\n            minDate: jsonCreditDetail.credits[0].date\n        });\n        this.setState({\n            maxDate: jsonCreditDetail.credits.slice(-1)[0].date    \n        });\n    } \n    this.setState({\n        creditDetail: jsonCreditDetail,\n        input:{\n            display: \"none\"\n        },\n        table:{\n            display: \"block\"\n        }\n    });\n  };\n\n  \n    // Set final showing rows of table currentWork\n    setDateFilter = (item, index) => {\n        if(!this.state.minFilterDate){\n            this.state.minFilterDate= this.state.minDate;\n        }\n        if(!this.state.maxFilterDate){\n            this.state.maxFilterDate= this.state.maxDate;\n        }\n        if(this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate){\n            this.state.currentWork.push(item);\n        }\n    }\n\n\n    constructor(props){\n        super(props);\n        this.state= {\n            creditDetail: {\n                party: \"\",\n                contact: \"\",\n                village: \"\",\n                crasher: \"\",\n                credits: []\n            },\n            minDate: null,\n            maxDate: null,\n            minFilterDate: null,\n            maxFilterDate: null,\n            startDate: null,\n            endDate: null,\n            currentCredit: [],\n            partyList: {},\n            selectedParty: \"\",\n            partyNamesFromApi: [],\n            input:{\n                display: \"block\"\n            },\n            table:{\n                display: \"none\"\n            }\n        }\n        \n        this.fetchProduct= this.fetchProduct.bind(this);\n        this.onSubmit= this.onSubmit.bind(this);\n        this.setDateFilter= this.setDateFilter.bind(this);\n        this.fetchProduct();\n    }\n    render(){\n        return(\n            <div id=\"mainDiv\" className=\"d-flex justify-content-center align-items-center scrollingSection\">\n                <div className=\"tableShow\" style={this.state.table}>\n                    <div className=\"upperHeader row\">\n                        <div className=\"col-sm-2\">\n                            <blockquote className=\"commonFont blockquote text-center\">\n\t\t\t\t\t\t\t\t<p className=\"mb-0\"><b>{this.state.creditDetail.party}</b></p>\n\t\t\t\t\t\t\t</blockquote>                        \n                        </div>\n                        <div className=\"col-sm-2\">\n                            <blockquote className=\"commonFont blockquote text-center\">\n\t\t\t\t\t\t\t\t<p className=\"mb-0\">{this.state.creditDetail.contact}</p>\n\t\t\t\t\t\t\t</blockquote>                        \n                        </div>\n                        <div className=\"col-sm-2\">\n                            <blockquote className=\"commonFont blockquote text-center\">\n\t\t\t\t\t\t\t\t<p className=\"mb-0\">{this.state.creditDetail.village}</p>\n\t\t\t\t\t\t\t</blockquote>                        \n                        </div>\n                        <div className=\"col-sm-3\">\n                            <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                                this.setState({\n                                    minFilterDate: e.target.value\n                                });\n                            }}/>\n                        </div>\n                        <div className=\"col-sm-3\">\n                            <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {}}/>\n                        </div>\n                    </div>\n                    <table className=\"table table-borderd tablePart\">\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th>Date</th>\n                                <th>Credit Amount</th>\n                                <th>Remark</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.creditDetail.credits.map((credit) => (\n                                <tr>\n                                    <td>{credit.date}</td>\n                                    <td>{credit.credit_amount}</td>\n                                    <td>{credit.remark}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <form\n                    className=\"form-container form-group\"\n                    style={this.state.input}\n                >\n                        <Autocomplete\n                            suggestions={this.state.partyNamesFromApi}\n                            callbackFromParent={dataFromChild => {\n                            this.state.selectedParty = dataFromChild;\n                            }}\n                            placeholderfrom={\"Party name\"}\n                        />\n                        <br />\n                        <br />\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-outline-dark\"\n                            style={this.state.buttonStatus}\n                            onClick={e => this.onSubmit()}>\n                        Save\n                        </button>\n                </form>\n            </div>    \n        );\n    }\n}\n\nexport default MachineCredit;"]},"metadata":{},"sourceType":"module"}