{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/VehicleWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nexport default class VehicleWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMultipleVehicle = async e => {\n      await this.setState({\n        selectedVehicle: Array.from(e.target.selectedOptions, item => item.value)\n      });\n    };\n\n    this.myCallbackForSelectedParty = dataFromChild => {\n      this.state.selectedParty = dataFromChild;\n    };\n\n    this.myCallbackForSelectedVehicle = dataFromChild => {\n      this.state.selectedVehicle = dataFromChild;\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      vehicleNamesFromApi: [],\n      date: null,\n      selectedVehicle: [],\n      selectedParty: \"\",\n      remark: \"\",\n      fiveFeet: 0,\n      twoHalfFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.partyNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n      fetch(\"http://127.0.0.1:8000/list-of-vehicles/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.vehicleNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    console.log(this.state.machineNamesFromApi);\n    console.log(this.state.partyNamesFromApi);\n    this.state.fetchProduct(); // Check existence of party name\n\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.checkvehicle = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.vehicleNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n        party: this.state.selectedParty,\n        vehicle: this.state.selectedVehicle,\n        date: this.state.date,\n        five_feet: this.state.fiveFeet,\n        two_half_feet: this.state.twoHalfFeet,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n    this.handleMultipleVehicle = this.handleMultipleVehicle.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Vehicle Work Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedParty,\n      checkFromParent: this.state.checkparty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"vehicles\",\n      onChange: e => this.handleMultipleVehicle(e),\n      multiple: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.vehicleNamesFromApi.map(item => React.createElement(\"input\", {\n      type: \"checkbox\",\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\" //data-date=\"\"\n      ,\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.state.date = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"remark\",\n      placeholder: \"Remark\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      onChange: e => {\n        this.state.remark = e.target.value;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"fiveFeet\",\n      placeholder: \"5 Feet\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.setState({\n          fiveFeet: e.target.value\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"twoHalfFeet\",\n      placeholder: \"2.5 Feet\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.setState({\n          twoHalfFeet: e.target.value\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/VehicleWorkEntry.js"],"names":["React","axios","Autocomplete","VehicleWorkEntry","Component","constructor","props","handleMultipleVehicle","e","setState","selectedVehicle","Array","from","target","selectedOptions","item","value","myCallbackForSelectedParty","dataFromChild","state","selectedParty","myCallbackForSelectedVehicle","partyNamesFromApi","vehicleNamesFromApi","date","remark","fiveFeet","twoHalfFeet","responseMessage","buttonStatus","visibility","radioButtonStyle","float","fetchProduct","fetch","then","res","json","out","map","push","name","catch","err","console","log","machineNamesFromApi","checkparty","showList","index","toLowerCase","forEach","checkvehicle","onSubmit","post","party","vehicle","five_feet","two_half_feet","data","error","alert","response","request","_response","reset","preventDefault","getDate","curr","Date","setDate","toISOString","substr","bind","render","partyExistMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\n\nexport default class VehicleWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      partyNamesFromApi : [],\nvehicleNamesFromApi : [],\n      date: null,\n      selectedVehicle: [],\n      selectedParty: \"\",\n      remark: \"\",\n      fiveFeet: 0,\n      twoHalfFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\")\n        .then(res => res.json())\n        .then(out => {\n          out.map(item => this.state.partyNamesFromApi.push(item.name));\n        })\n        .catch(err => {\n          throw err;\n        });\n\n      fetch(\"http://127.0.0.1:8000/list-of-vehicles/\")\n        .then(res => res.json())\n        .then(out => {\n          out.map(item => this.state.vehicleNamesFromApi.push(item.name));\n        })\n        .catch(err => {\n          throw err;\n        });\n    };\n\n    console.log(this.state.machineNamesFromApi);\n    console.log(this.state.partyNamesFromApi);\n    this.state.fetchProduct();\n    // Check existence of party name\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.checkvehicle = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.vehicleNamesFromApi.forEach(showList);\n      } \n      catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n         axios\n           .post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n             party: this.state.selectedParty,\n             vehicle: this.state.selectedVehicle,\n             date: this.state.date,\n             five_feet: this.state.fiveFeet,\n             two_half_feet: this.state.twoHalfFeet,\n             remark: this.state.remark\n           })\n           .then(res => {\n             this.setState({\n               responseMessage: res.data\n             });\n           })\n           .catch(error => {\n             alert(error.response.request._response);\n          });      \n\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n\n    this.handleMultipleVehicle = this.handleMultipleVehicle.bind(this);\n  }\n\n  handleMultipleVehicle = async e => {\n    await this.setState({\n      selectedVehicle: Array.from(e.target.selectedOptions, (item) => item.value)\n    });\n};\n\n  myCallbackForSelectedParty = dataFromChild => {\n    this.state.selectedParty = dataFromChild;\n  };\n  myCallbackForSelectedVehicle = dataFromChild => {\n    this.state.selectedVehicle = dataFromChild;\n  };\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Vehicle Work Entry</p>\n      <div className=\"pt-5\">\n          \n          <Autocomplete\n            suggestions={this.state.partyNamesFromApi}\n            callbackFromParent={this.myCallbackForSelectedParty}\n            checkFromParent={this.state.checkparty}\n            placeholderfrom={\"Party name\"}\n          />\n          <p>{this.state.partyExistMessage}</p>\n\n          {<select className=\"form-control\" name=\"vehicles\" \n            onChange={e => this.handleMultipleVehicle(e)}\n            multiple\n            required>\n            { this.state.vehicleNamesFromApi.map(item => (\n              <input type=\"checkbox\" key={item} value={item}/>\n            )) }\n          </select>}\n\n          <br/>\n\n          <input\n            type=\"date\"\n            //data-date=\"\"\n            data-date-format=\"YYYY-MM-DD\"\n            defaultValue={this.state.date}\n            name=\"date\"\n            onChange={e => {\n              this.state.date = e.target.value;\n            }}\n            required\n          />\n\n          <br/>\n          <br/>\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"remark\"\n            placeholder=\"Remark\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            onChange={e => {\n              this.state.remark = e.target.value;\n            }}\n          />\n\n          <br/>\n          <br/>\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"fiveFeet\"\n            placeholder=\"5 Feet\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.setState({\n                fiveFeet: e.target.value\n              });\n            }}\n            required\n          />\n\n          <br/>\n          <br/>\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"twoHalfFeet\"\n            placeholder=\"2.5 Feet\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.setState({\n                twoHalfFeet: e.target.value\n              });\n            }}\n            required\n          />\n        </div>\n          <p>{ this.state.responseMessage }</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}