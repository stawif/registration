{"ast":null,"code":"var _jsxFileName = \"E:\\\\registration\\\\frontend\\\\src\\\\components\\\\tableDisplay\\\\MachineWorkTable.js\";\nimport React from 'react';\nimport '../../tableDisplayCss.css';\n\nclass MachineWorkTable extends React.Component {\n  //setDateRestriction \n  // Fetch data of machine work from party name came with props\n  //Push paid and unpaid work objects in different arrays \n  // Set final showing rows of table currentWork\n  //Handle selection of radio buttons and set paidStatus\n  //Set paidStatus to null so that tables show both paid and unpaid\n  //Prepare data for payment\n  constructor(props) {\n    super(props);\n\n    this.setDateRestriction = (item, index) => {\n      if (item.paid == false) {\n        this.state.paymentData.minToDate = item.date;\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.fetchProduct = async partyName => {\n      const responsWorkDetail = await fetch('http://127.0.0.1:8000/machine-work-detail/', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"party\": partyName\n        })\n      });\n      const jsonWorkDetail = await responsWorkDetail.json();\n      this.setState({\n        workDetail: jsonWorkDetail\n      });\n      this.setState({\n        minFilterDate: jsonWorkDetail.work[0].date\n      });\n      this.setState({\n        maxFilterDate: jsonWorkDetail.work.slice(-1)[0].date\n      }); //Set paymentData minToDate\n\n      jsonWorkDetail.work.every(this.setDateRestriction); //Set paymentData maxToDate\n\n      this.state.paymentData.maxToDate = jsonWorkDetail.work.slice(-1)[0].date;\n    };\n\n    this.paidFilter = (item, index) => {\n      if (item.paid == true) {\n        this.state.paidWork.push(item);\n      } else {\n        this.state.unPaidWork.push(item);\n      }\n    };\n\n    this.setDateFilter = (item, index) => {\n      if (this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate) {\n        this.state.currentWork.push(item);\n      }\n    };\n\n    this.setPaidStatus = status => {\n      if (status === \"paid\") {\n        this.setState({\n          paidStatus: \"paid\"\n        });\n      } else if (status === \"unpaid\") {\n        this.setState({\n          paidStatus: \"unpaid\"\n        });\n      } else {\n        this.setState({\n          paidStatus: null\n        });\n      }\n    };\n\n    this.setPaidStatusNull = () => {\n      this.setState({\n        paidStatus: null\n      });\n    };\n\n    this.preparePaymentData = (item, index) => {\n      this.state.drillingFeet = this.state.drillingFeet + item.drilling_feet;\n      this.state.dieselAmount = this.state.dieselAmount + item.diesel_amount;\n      this.state.payment = this.state.payment + item.payment;\n    };\n\n    this.state = {\n      workDetail: {\n        name: \"\",\n        contact: \"\",\n        village: \"\",\n        crasher: \"\",\n        work: []\n      },\n      paidWork: [],\n      unPaidWork: [],\n      paidStatus: null,\n      minDate: null,\n      maxDate: null,\n      minFilterDate: null,\n      maxFilterDate: null,\n      currentWork: [],\n      drillingFeet: 0,\n      dieselAmount: 0,\n      payment: 0,\n      paymentData: {\n        fromDate: null,\n        minToDate: null,\n        maxToDate: null,\n        drillingFeet: 0,\n        dieselAmount: 0,\n        payment: 0\n      }\n    };\n    this.state.currentWork = null;\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.paidFilter = this.paidFilter.bind(this);\n    this.setPaidStatus = this.setPaidStatus.bind(this);\n    this.setDateFilter = this.setDateFilter.bind(this);\n    this.setPaidStatusNull = this.setPaidStatusNull.bind(this);\n    this.preparePaymentData = this.preparePaymentData.bind(this);\n    this.setDateRestriction = this.setDateRestriction.bind(this);\n    this.fetchProduct(this.props.partyName);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.partyName != nextProps.partyName) {\n      this.fetchProduct(nextProps.partyName);\n    }\n  }\n\n  render() {\n    // Reset all list so that next time it don't carry same values\n    this.state.paidWork = [];\n    this.state.unPaidWork = [];\n    this.state.currentWork = []; //Reset total values of lower strip\n\n    this.state.drillingFeet = 0;\n    this.state.dieselAmount = 0;\n    this.state.payment = 0; //Fill different lists\n\n    this.state.workDetail.work.forEach(this.paidFilter); //Set current work according to radio button choices\n\n    if (this.state.paidStatus === \"paid\") {\n      this.currentWorkFromRadio = this.state.paidWork;\n      this.state.minDate = Object(this.state.paidWork[0]).date;\n      this.state.maxDate = Object(this.state.paidWork.slice(-1)[0]).date;\n    } else if (this.state.paidStatus === \"unpaid\") {\n      this.currentWorkFromRadio = this.state.unPaidWork;\n      this.state.minDate = Object(this.state.unPaidWork[0]).date;\n      this.state.maxDate = Object(this.state.unPaidWork.slice(-1)[0]).date;\n    } else {\n      this.currentWorkFromRadio = this.state.workDetail.work;\n      this.state.minDate = Object(this.state.workDetail.work[0]).date;\n      this.state.maxDate = Object(this.state.workDetail.work.slice(-1)[0]).date;\n    } //Fill final list for show(Applying date filter)\n\n\n    this.currentWorkFromRadio.forEach(this.setDateFilter); //Prepare payment data\n\n    this.state.currentWork.forEach(this.preparePaymentData);\n    return React.createElement(\"div\", {\n      id: \"tableComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row upperTable bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      onClick: e => this.setPaidStatusNull(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.props.partyName)))), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.state.workDetail.contact))), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"paidStatus\",\n      value: \"paid\",\n      onChange: e => {\n        this.setPaidStatus(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), \"paid\")), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"paidStatus\",\n      value: \"unpaid\",\n      onChange: e => {\n        this.setPaidStatus(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), \"Unpaid\")), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          minFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          maxFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"topTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"col-6 bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Party\"), React.createElement(\"button\", {\n      className: \"col-6 bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Payment\"))), React.createElement(\"div\", {\n      className: \"midTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \" table table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Paid\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Drilling Feet\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Holes\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Diesel Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Machine\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Payment\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Remark\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, this.state.currentWork.map(work => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: work.paid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, work.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, work.drilling_feet), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, work.holes), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, work.diesel_amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, work.machine), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, work.payment), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, work.remark)))))), React.createElement(\"div\", {\n      className: \"row lowerTable text-center bg-primary commonFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Drilling Feet =\")), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, this.state.drillingFeet)), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Diesel =\")), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, this.state.dieselAmount)), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Payment =\")), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, this.state.payment)), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Payment\"))));\n  }\n\n}\n\nexport default MachineWorkTable;","map":{"version":3,"sources":["E:/registration/frontend/src/components/tableDisplay/MachineWorkTable.js"],"names":["React","MachineWorkTable","Component","constructor","props","setDateRestriction","item","index","paid","state","paymentData","minToDate","date","fetchProduct","partyName","responsWorkDetail","fetch","method","headers","body","JSON","stringify","jsonWorkDetail","json","setState","workDetail","minFilterDate","work","maxFilterDate","slice","every","maxToDate","paidFilter","paidWork","push","unPaidWork","setDateFilter","currentWork","setPaidStatus","status","paidStatus","setPaidStatusNull","preparePaymentData","drillingFeet","drilling_feet","dieselAmount","diesel_amount","payment","name","contact","village","crasher","minDate","maxDate","fromDate","bind","componentWillReceiveProps","nextProps","render","forEach","currentWorkFromRadio","Object","e","target","value","map","holes","machine","remark","buttonStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../tableDisplayCss.css';\r\n\r\nclass MachineWorkTable extends React.Component{\r\n    //setDateRestriction \r\n    setDateRestriction = (item, index) =>{\r\n        if(item.paid == false){\r\n            this.state.paymentData.minToDate = item.date;\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n    // Fetch data of machine work from party name came with props\r\n    fetchProduct = async (partyName) =>{\r\n        const responsWorkDetail = await fetch('http://127.0.0.1:8000/machine-work-detail/', {\r\n                method: 'post',\r\n                headers: {'Content-Type':'application/json'},\r\n                body: JSON.stringify({\r\n                \"party\": partyName\r\n                })\r\n            });        \r\n        const jsonWorkDetail = await responsWorkDetail.json();\r\n        this.setState({\r\n            workDetail: jsonWorkDetail\r\n        });    \r\n        this.setState({\r\n            minFilterDate: jsonWorkDetail.work[0].date\r\n        });\r\n        this.setState({\r\n            maxFilterDate: jsonWorkDetail.work.slice(-1)[0].date    \r\n        });\r\n\r\n        //Set paymentData minToDate\r\n        jsonWorkDetail.work.every(this.setDateRestriction);\r\n\r\n        //Set paymentData maxToDate\r\n        this.state.paymentData.maxToDate = jsonWorkDetail.work.slice(-1)[0].date;\r\n    }\r\n\r\n    //Push paid and unpaid work objects in different arrays \r\n    paidFilter = (item, index) =>{\r\n        if(item.paid == true){\r\n            this.state.paidWork.push(item);\r\n        }\r\n        else{\r\n            this.state.unPaidWork.push(item);\r\n        }\r\n    }\r\n\r\n    // Set final showing rows of table currentWork\r\n    setDateFilter = (item, index) => {\r\n        if(this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate){\r\n            this.state.currentWork.push(item);\r\n        }\r\n    }\r\n\r\n    //Handle selection of radio buttons and set paidStatus\r\n    setPaidStatus = (status) =>{\r\n        if(status===\"paid\"){\r\n            this.setState({\r\n                paidStatus: \"paid\"\r\n            });\r\n        }\r\n        else if(status===\"unpaid\"){\r\n            this.setState({\r\n                paidStatus: \"unpaid\"\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                paidStatus: null\r\n            }); \r\n        }\r\n    }\r\n\r\n    //Set paidStatus to null so that tables show both paid and unpaid\r\n    setPaidStatusNull = () =>{\r\n        this.setState({\r\n            paidStatus: null\r\n        }); \r\n    }\r\n\r\n    //Prepare data for payment\r\n    preparePaymentData = (item, index) =>{\r\n        this.state.drillingFeet= this.state.drillingFeet + item.drilling_feet;\r\n        this.state.dieselAmount= this.state.dieselAmount + item.diesel_amount;\r\n        this.state.payment= this.state.payment + item.payment;\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            workDetail: {\r\n                name: \"\",\r\n                contact: \"\",\r\n                village: \"\",\r\n                crasher: \"\",\r\n                work: []\r\n            },\r\n            paidWork: [],\r\n            unPaidWork: [],\r\n            paidStatus: null,\r\n            minDate: null,\r\n            maxDate: null,\r\n            minFilterDate: null,\r\n            maxFilterDate: null,\r\n            currentWork: [],\r\n            drillingFeet: 0,\r\n            dieselAmount: 0,\r\n            payment: 0,\r\n            paymentData:{\r\n                fromDate: null,\r\n                minToDate: null,\r\n                maxToDate: null,\r\n                drillingFeet: 0,\r\n                dieselAmount: 0,\r\n                payment: 0\r\n            }\r\n        }\r\n        this.state.currentWork= null;\r\n        this.fetchProduct = this.fetchProduct.bind(this);\r\n        this.paidFilter = this.paidFilter.bind(this);\r\n        this.setPaidStatus = this.setPaidStatus.bind(this);\r\n        this.setDateFilter = this.setDateFilter.bind(this);\r\n        this.setPaidStatusNull = this.setPaidStatusNull.bind(this);\r\n        this.preparePaymentData = this.preparePaymentData.bind(this);\r\n        this.setDateRestriction = this.setDateRestriction.bind(this);\r\n        this.fetchProduct(this.props.partyName);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(this.props.partyName != nextProps.partyName){\r\n            this.fetchProduct(nextProps.partyName);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        // Reset all list so that next time it don't carry same values\r\n        this.state.paidWork=[];\r\n        this.state.unPaidWork=[];\r\n        this.state.currentWork=[];\r\n\r\n        //Reset total values of lower strip\r\n        this.state.drillingFeet= 0;\r\n        this.state.dieselAmount= 0;\r\n        this.state.payment= 0;\r\n\r\n        //Fill different lists\r\n        this.state.workDetail.work.forEach(this.paidFilter);\r\n\r\n        //Set current work according to radio button choices\r\n        if(this.state.paidStatus===\"paid\"){\r\n            this.currentWorkFromRadio= this.state.paidWork;\r\n            this.state.minDate = Object(this.state.paidWork[0]).date;\r\n            this.state.maxDate = Object(this.state.paidWork.slice(-1)[0]).date;\r\n        }\r\n        else if(this.state.paidStatus===\"unpaid\"){\r\n            this.currentWorkFromRadio= this.state.unPaidWork;\r\n            this.state.minDate = Object(this.state.unPaidWork[0]).date;\r\n            this.state.maxDate = Object(this.state.unPaidWork.slice(-1)[0]).date;\r\n        }\r\n        else{\r\n            this.currentWorkFromRadio= this.state.workDetail.work;\r\n            this.state.minDate = Object(this.state.workDetail.work[0]).date;\r\n            this.state.maxDate = Object(this.state.workDetail.work.slice(-1)[0]).date;\r\n        }\r\n\r\n        //Fill final list for show(Applying date filter)\r\n        this.currentWorkFromRadio.forEach(this.setDateFilter);\r\n\r\n        //Prepare payment data\r\n        this.state.currentWork.forEach(this.preparePaymentData);\r\n\r\n        return(\r\n            <div id=\"tableComponent\">\r\n\t\t\t\r\n                <div className=\"row upperTable bg-primary\">\r\n                  \r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<blockquote className=\"commonFont blockquote text-center\">\r\n\t\t\t\t\t\t\t\t<p className=\"mb-0\" onClick={e => this.setPaidStatusNull()}><b>{this.props.partyName}</b></p>\r\n\t\t\t\t\t\t\t</blockquote>                        \r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<blockquote className=\"commonFont blockquote text-center\">\r\n\t\t\t\t\t\t\t\t<p className=\"mb-0\">{this.state.workDetail.contact}</p>\r\n\t\t\t\t\t\t\t\t{/*<footer className=\"blockquote-footer\"> 7742879818</footer>*/}\r\n\t\t\t\t\t\t\t</blockquote>                        \r\n\t\t\t\t\t\t</div>\r\n                    \r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<blockquote className=\"commonFont blockquote text-center\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"paidStatus\" value=\"paid\" onChange={ e => {this.setPaidStatus(e.target.value)}}/>paid\r\n\t\t\t\t\t\t\t</blockquote>                        \r\n\t\t\t\t\t\t</div>\r\n                    \r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<blockquote className=\"commonFont blockquote text-center\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"paidStatus\" value=\"unpaid\" onChange={ e => {this.setPaidStatus(e.target.value)}} />Unpaid\r\n\t\t\t\t\t\t\t</blockquote>                        \r\n\t\t\t\t\t\t</div>\r\n                    \r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tminFilterDate: e.target.value\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\t<input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tmaxFilterDate: e.target.value\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"topTable\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<button className=\"col-6 bg-primary\">Party</button>\r\n\t\t\t\t\t\t<button className=\"col-6 bg-primary\">Payment</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"midTable\">\r\n                    <table className=\" table table-bordered\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th>Paid</th>\r\n                                <th>Date</th>\r\n                                <th>Drilling Feet</th>\r\n                                <th>Holes</th>\r\n                                <th>Diesel Amount</th>\r\n                                <th>Machine</th>\r\n                                <th>Payment</th>\r\n                                <th>Remark</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.currentWork.map((work) => (\r\n                                <tr>\r\n                                    <td>{<input type=\"checkbox\" checked={work.paid}></input>}</td>\r\n                                    <td>{work.date}</td>\r\n                                    <td>{work.drilling_feet}</td>\r\n                                    <td>{work.holes}</td>\r\n                                    <td>{work.diesel_amount}</td>\r\n                                    <td>{work.machine}</td>\r\n                                    <td>{work.payment}</td>\r\n                                    <td>{work.remark}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"row lowerTable text-center bg-primary commonFont\">\r\n                    <div className=\"col-sm-2\">\r\n\t\t\t\t\t\t<p>Drilling Feet =</p>\r\n                    </div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"col-sm-1\">\r\n\t\t\t\t\t\t<p>{this.state.drillingFeet}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t<p>Diesel =</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"col-sm-1\">\r\n                        <p>{this.state.dieselAmount}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t<p>Payment =</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"col-sm-1\">\r\n\t\t\t\t\t\t<p>{this.state.payment}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"col-sm-3\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-dark\"\r\n\t\t\t\t\t\t\tstyle={this.state.buttonStatus}\r\n\t\t\t\t\t\t\t>\r\n                            Payment\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MachineWorkTable;"]},"metadata":{},"sourceType":"module"}