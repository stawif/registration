{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/registration/VehicleRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class VehicleRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vehicleName: \"\",\n      vehicleExistStatus: \"\",\n      vehicleList: {},\n      buttonStatus: {\n        visibility: 'visible'\n      }\n    }; // Fetch vehicle list from server\n\n    this.state.fetchProduct = async () => {\n      const responsevehicleList = await fetch(\"http://127.0.0.1:8000/list-of-vehicles/\");\n      const jsonvehicleList = await responsevehicleList.json();\n      this.state.vehicleList = jsonvehicleList;\n    };\n\n    this.state.fetchProduct(); // Check existence of vehicle name \n\n    this.state.checkvehicle = () => {\n      try {\n        this.setState({\n          vehicleExistStatus: \"\",\n          buttonStatus: {\n            visibility: 'visible'\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.vehicleName === item.name) {\n            this.setState({\n              vehicleExistStatus: \"* This vehicle name is already exist!!!\",\n              buttonStatus: {\n                visibility: 'hidden'\n              }\n            });\n          } else {}\n        };\n\n        this.state.vehicleList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post('http://127.0.0.1:8000/vehicle-registration/', {\n        name: this.state.vehicleName\n      }).then(res => {\n        this.state.fetchProduct();\n      }).catch(error => {//alert( error.response.request._response )\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"vehicle Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"vehicleName\",\n      placeholder: \"vehicle Name\",\n      autocomplete: \"off\",\n      maxlength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.vehicleName = e.target.value;\n        this.state.checkvehicle();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.vehicleExistStatus), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/registration/VehicleRegistration.js"],"names":["React","axios","VehicleRegistration","Component","constructor","props","state","vehicleName","vehicleExistStatus","vehicleList","buttonStatus","visibility","fetchProduct","responsevehicleList","fetch","jsonvehicleList","json","checkvehicle","setState","showList","item","index","name","forEach","err","onSubmit","e","post","then","res","catch","error","target","reset","preventDefault","render","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class VehicleRegistration extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n      vehicleName: \"\",\n      vehicleExistStatus: \"\",\n      vehicleList: {},\n      buttonStatus: {\n        visibility: 'visible'\n      }\n    }\n\n    // Fetch vehicle list from server\n    this.state.fetchProduct = async () =>{\n      const responsevehicleList = await fetch(\"http://127.0.0.1:8000/list-of-vehicles/\");\n      const jsonvehicleList = await responsevehicleList.json();\n      this.state.vehicleList = jsonvehicleList;\n    }\n    \n    this.state.fetchProduct(); \n\n    // Check existence of vehicle name \n    this.state.checkvehicle = () => {\n      try {\n        this.setState({\n             vehicleExistStatus :\"\",\n             buttonStatus: {\n              visibility: 'visible'           \n             }\n            });\n        const showList = (item, index) => {\n            if (this.state.vehicleName === item.name){\n              this.setState({\n                 vehicleExistStatus :\"* This vehicle name is already exist!!!\",\n                 buttonStatus: {\n                  visibility: 'hidden'                 \n                 }\n              });\n            }\n            else{}\n        };\n        this.state.vehicleList.forEach(showList);\n      } \n      catch (err) {}\n    }\n\n    this.state.onSubmit =(e) => {\n        axios.post('http://127.0.0.1:8000/vehicle-registration/', \n        {\n          name: this.state.vehicleName\n        }\n        ).then(res => {\n          this.state.fetchProduct();\n        }\n        ).catch(error => {\n          //alert( error.response.request._response )\n        });\n      e.target.reset();\n      e.preventDefault();\n    };\n  \n  }\n \n  render(){\n    return (\n\t\t<form className=\"form-container form-group\" onSubmit={ e => this.state.onSubmit(e) }>\n    <p className=\"headingViewPart\">vehicle Registration</p>\n\t\t<div className=\"pt-5\">\n        <input \n        type=\"text\" \n        className=\"mb-2\" \n        name=\"vehicleName\" \n        placeholder=\"vehicle Name\" \n        autocomplete=\"off\"\n        maxlength = \"30\"\n        minLength = \"5\"\n        onChange={\n          e => {\n          this.state.vehicleName = e.target.value;\n          this.state.checkvehicle();\n        }\n        } \n        required\n        />\n    </div>    \n    <p>{this.state.vehicleExistStatus}</p>     \n    <button type=\"submit\" className=\"btn btn-outline-dark\" style={this.state.buttonStatus} >Save</button>\n    </form>  \n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}