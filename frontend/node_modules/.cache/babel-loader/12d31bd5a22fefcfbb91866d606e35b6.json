{"ast":null,"code":"var _jsxFileName = \"E:\\\\registration\\\\frontend\\\\src\\\\components\\\\registration\\\\WorkerRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class WorkerRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      date: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    }; // Fetch worker list from server\n\n    this.state.fetchProduct = async () => {\n      const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\n      const jsonWorkerList = await responseWorkerList.json();\n      this.state.workerList = jsonWorkerList;\n    };\n\n    this.state.fetchProduct(); // Check existence of worker name\n\n    this.state.checkworker = () => {\n      try {\n        this.setState({\n          workerExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              workerExistMessage: \"* This worker name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.workerList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/worker-registration/\", {\n        name: this.state.workerName,\n        contact: this.state.workerContact,\n        village: this.state.workerVillage,\n        salary: this.state.workerSalary,\n        advance: this.state.advance,\n        date: this.state.date\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        console.log(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n      console.log(this.state.date);\n    };\n\n    this.state.getDate();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Machine Worker Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerName\",\n      placeholder: \"Worker Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"3\",\n      onChange: e => {\n        this.state.workerName = e.target.value;\n        this.state.checkworker();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.workerExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"tel\",\n      className: \"mb-2\",\n      name: \"workerContact\",\n      placeholder: \"Enter 10 digit Phone no\",\n      autoComplete: \"off\",\n      pattern: \"^\\\\d{10}$\" // maxLength=\"10\"\n      // minLength=\"10\"\n      ,\n      onChange: e => {\n        this.state.workerContact = parseInt(e.target.value); //this.state.validatePhone();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerVillage\",\n      placeholder: \"Worker Village\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.workerVillage = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerSalary\",\n      placeholder: \"Worker Salary\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.workerSalary = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\",\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.state.date = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerAdvance\",\n      placeholder: \"Worker Advance\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.advance = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["E:/registration/frontend/src/components/registration/WorkerRegistration.js"],"names":["React","axios","WorkerRegistration","Component","constructor","props","state","workerName","workerContact","workerVillage","workerSalary","advance","date","workerList","workerExistMessage","responseMessage","buttonStatus","visibility","fetchProduct","responseWorkerList","fetch","jsonWorkerList","json","checkworker","setState","showList","item","index","toLowerCase","name","forEach","err","onSubmit","e","post","contact","village","salary","then","res","data","catch","error","console","log","response","request","_response","target","reset","preventDefault","getDate","curr","Date","setDate","toISOString","substr","render","value","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class WorkerRegistration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      workerName: \"\",\r\n      workerContact: \"\",\r\n      workerVillage: \"\",\r\n      workerSalary: 0,\r\n      advance: 0,\r\n      date: null,\r\n      workerList: {},\r\n      workerExistMessage: \"\",\r\n\r\n      responseMessage: \"\",\r\n\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      }\r\n    };\r\n\r\n    // Fetch worker list from server\r\n    this.state.fetchProduct = async () => {\r\n      const responseWorkerList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-worker/\"\r\n      );\r\n      const jsonWorkerList = await responseWorkerList.json();\r\n      this.state.workerList = jsonWorkerList;\r\n    };\r\n\r\n    this.state.fetchProduct();\r\n\r\n    // Check existence of worker name\r\n    this.state.checkworker = () => {\r\n      try {\r\n        this.setState({\r\n          workerExistMessage: \"\",\r\n          responseMessage: \"\",\r\n          buttonStatus: {\r\n            visibility: \"visible\"\r\n          }\r\n        });\r\n        const showList = (item, index) => {\r\n          if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\r\n            this.setState({\r\n              workerExistMessage: \"* This worker name is already exist!!!\",\r\n              buttonStatus: {\r\n                visibility: \"hidden\"\r\n              }\r\n            });\r\n          } else {\r\n          }\r\n        };\r\n        this.state.workerList.forEach(showList);\r\n      } catch (err) {}\r\n    };\r\n\r\n    this.state.onSubmit = e => {\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/worker-registration/\", {\r\n          name: this.state.workerName,\r\n          contact: this.state.workerContact,\r\n          village: this.state.workerVillage,\r\n          salary: this.state.workerSalary,\r\n          advance: this.state.advance,\r\n          date: this.state.date\r\n        })\r\n        .then(res => {\r\n          this.state.fetchProduct();\r\n          this.setState({\r\n            responseMessage: res.data\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.request._response);\r\n        });\r\n\r\n      e.target.reset();\r\n      e.preventDefault();\r\n    };\r\n    this.state.getDate = () => {\r\n      var curr = new Date();\r\n      curr.setDate(curr.getDate());\r\n      var date = curr.toISOString().substr(0, 10);\r\n      this.state.date = date;\r\n      console.log(this.state.date);\r\n    };\r\n\r\n    this.state.getDate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.state.onSubmit(e)}\r\n      >\r\n        <p className=\"headingViewPart\">Machine Worker Registration</p>\r\n        <div className=\"pt-5\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"mb-2\"\r\n            name=\"workerName\"\r\n            placeholder=\"Worker Name\"\r\n            autoComplete=\"off\"\r\n            maxLength=\"30\"\r\n            minLength=\"3\"\r\n            onChange={e => {\r\n              this.state.workerName = e.target.value;\r\n\r\n              this.state.checkworker();\r\n            }}\r\n            required\r\n          />\r\n\r\n          <p>{this.state.workerExistMessage}</p>\r\n          <br />\r\n\r\n          <input\r\n            type=\"tel\"\r\n            className=\"mb-2\"\r\n            name=\"workerContact\"\r\n            placeholder=\"Enter 10 digit Phone no\"\r\n            autoComplete=\"off\"\r\n            pattern=\"^\\d{10}$\"\r\n            // maxLength=\"10\"\r\n            // minLength=\"10\"\r\n            onChange={e => {\r\n              this.state.workerContact = parseInt(e.target.value);\r\n              //this.state.validatePhone();\r\n            }}\r\n            required\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"mb-2\"\r\n            name=\"workerVillage\"\r\n            placeholder=\"Worker Village\"\r\n            autoComplete=\"off\"\r\n            maxLength=\"30\"\r\n            minLength=\"5\"\r\n            onChange={e => {\r\n              this.state.workerVillage = e.target.value;\r\n            }}\r\n            required\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <input\r\n            type=\"number\"\r\n            className=\"mb-2\"\r\n            name=\"workerSalary\"\r\n            placeholder=\"Worker Salary\"\r\n            autoComplete=\"off\"\r\n            onChange={e => {\r\n              this.state.workerSalary = parseInt(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <input\r\n            type=\"date\"\r\n            data-date-format=\"YYYY-MM-DD\"\r\n            defaultValue={this.state.date}\r\n            name=\"date\"\r\n            onChange={e => {\r\n              this.state.date = e.target.value;\r\n            }}\r\n            required\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <input\r\n            type=\"number\"\r\n            className=\"mb-2\"\r\n            name=\"workerAdvance\"\r\n            placeholder=\"Worker Advance\"\r\n            autoComplete=\"off\"\r\n            onChange={e => {\r\n              this.state.advance = parseInt(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n        <p>{this.state.responseMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-dark\"\r\n          style={this.state.buttonStatus}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}