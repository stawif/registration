{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/modular/InputField.js\";\nimport React from 'react';\n\nclass InputField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkExistList = () => {\n      try {\n        this.setState({\n          machineExistStatus: \"\"\n        });\n\n        const showList = (item, index) => {\n          if (this.state.machineName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              machineExistStatus: \"* This machine name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.machineList.forEach(showList);\n      } catch (err) {}\n\n      console.log(this.state.machineName);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: this.props.type,\n      placeholder: this.props.placeholder,\n      className: this.props.className,\n      autoComplete: this.props.autoComplete,\n      minLength: this.props.minLength,\n      maxLength: this.props.maxLength,\n      onChange: e => {\n        this.props.callBackFunction(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default InputField;","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/modular/InputField.js"],"names":["React","InputField","Component","constructor","props","checkExistList","setState","machineExistStatus","showList","item","index","state","machineName","toLowerCase","name","buttonStatus","visibility","machineList","forEach","err","console","log","render","type","placeholder","className","autoComplete","minLength","maxLength","e","callBackFunction","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAIlBC,cAJkB,GAID,MAAM;AACnB,UAAI;AACF,aAAKC,QAAL,CAAc;AACZC,UAAAA,kBAAkB,EAAE;AADR,SAAd;;AAGA,cAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,cACE,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,WAAvB,OAAyCJ,IAAI,CAACK,IAAL,CAAUD,WAAV,EAD3C,EAEE;AACA,iBAAKP,QAAL,CAAc;AACZC,cAAAA,kBAAkB,EAAE,yCADR;AAEZQ,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AAFF,aAAd;AAMD,WATD,MASO,CACN;AACF,SAZD;;AAaA,aAAKL,KAAL,CAAWM,WAAX,CAAuBC,OAAvB,CAA+BV,QAA/B;AACD,OAlBD,CAkBE,OAAOW,GAAP,EAAY,CAAE;;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,WAAvB;AAED,KA1Be;AAEjB;;AA0BDU,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAG,KAAKlB,KAAL,CAAWmB,IADtB;AAEI,MAAA,WAAW,EAAG,KAAKnB,KAAL,CAAWoB,WAF7B;AAGI,MAAA,SAAS,EAAG,KAAKpB,KAAL,CAAWqB,SAH3B;AAII,MAAA,YAAY,EAAG,KAAKrB,KAAL,CAAWsB,YAJ9B;AAKI,MAAA,SAAS,EAAG,KAAKtB,KAAL,CAAWuB,SAL3B;AAMI,MAAA,SAAS,EAAG,KAAKvB,KAAL,CAAWwB,SAN3B;AAOI,MAAA,QAAQ,EAAIC,CAAC,IAAI;AACb,aAAKzB,KAAL,CAAW0B,gBAAX,CAA4BD,CAAC,CAACE,MAAF,CAASC,KAArC;AACH,OATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAeH;;AA7CmC;;AAgDxC,eAAe/B,UAAf","sourcesContent":["import React from 'react';\n\nclass InputField extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    checkExistList = () => {\n        try {\n          this.setState({\n            machineExistStatus: \"\",\n          });\n          const showList = (item, index) => {\n            if (\n              this.state.machineName.toLowerCase() === item.name.toLowerCase()\n            ) {\n              this.setState({\n                machineExistStatus: \"* This machine name is already exist!!!\",\n                buttonStatus: {\n                  visibility: \"hidden\"\n                }\n              });\n            } else {\n            }\n          };\n          this.state.machineList.forEach(showList);\n        } catch (err) {}\n        console.log(this.state.machineName);\n        \n      };\n  \n    render(){\n        return(\n            <div>\n                <input \n                    type= {this.props.type}\n                    placeholder= {this.props.placeholder}\n                    className= {this.props.className}\n                    autoComplete= {this.props.autoComplete}\n                    minLength= {this.props.minLength}\n                    maxLength= {this.props.maxLength}\n                    onChange= { e => {\n                        this.props.callBackFunction(e.target.value)\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default InputField;"]},"metadata":{},"sourceType":"module"}