{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deadpool\\\\Desktop\\\\final\\\\registration\\\\frontend\\\\src\\\\components\\\\entry\\\\PurchaseEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nimport InputRateField from \"../modular/InputRateField.js\";\nexport default class PurchaseEntry extends React.Component {\n  //Fetching products from DataBase\n  // Check existence of party name\n  // Check existence of Item name\n  //From Submit Handler\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-purchaseparty/\");\n        const jsonPartyList = await responsePartyList.json();\n        jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n        const responseItemList = await fetch(\"http://127.0.0.1:8000/list-of-item/\");\n        const jsonItemList = await responseItemList.json();\n        jsonItemList.map(item => this.state.itemNamesFromApi.push(item.name));\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkParty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.checkItem = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.itemNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-purchase-detail/\", {\n        party: this.state.selectedParty,\n        item: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity,\n        rate: this.state.rate,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      console.log(\"quantity : \" + this.state.quantity);\n      console.log(\"rate : \" + this.state.rate);\n      console.log(\"quantity : \" + typeof this.state.quantity);\n      console.log(\"rate : \" + typeof this.state.rate);\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      itemNamesFromApi: [],\n      date: null,\n      selectedItem: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      quantity: 0,\n      rate: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.checkItem = this.checkItem.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Purchase Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      checkFromParent: this.checkParty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: this.state.itemNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedItem = dataFromChild;\n      },\n      placeholderfrom: \"Item name\",\n      checkFromParent: this.checkItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(InputRemarkField, {\n      callbackFromParent: dataFromChild => {\n        this.state.remark = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Quantity\",\n      callbackFromParent: dataFromChild => {\n        this.state.quantity = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Rate\",\n      callbackFromParent: dataFromChild => {\n        this.state.rate = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/deadpool/Desktop/final/registration/frontend/src/components/entry/PurchaseEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputRemarkField","InputQuantityField","InputRateField","PurchaseEntry","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","map","item","state","partyNamesFromApi","push","name","responseItemList","jsonItemList","itemNamesFromApi","toggleLoadStatus","checkParty","dataFromChild","setState","responseMessage","buttonStatus","visibility","showList","index","toLowerCase","forEach","err","checkItem","onSubmit","e","post","party","selectedParty","selectedItem","date","quantity","rate","remark","then","res","data","catch","error","alert","response","request","_response","console","log","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render","partyExistMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Autocomplete from \"./AutoComplete.jsx\";\r\nimport InputDateField from \"../modular/InputDateField\";\r\nimport InputRemarkField from \"../modular/InputRemarkField\";\r\nimport InputQuantityField from \"../modular/InputQuantityField\";\r\nimport InputRateField from \"../modular/InputRateField.js\";\r\n\r\nexport default class PurchaseEntry extends React.Component {\r\n  //Fetching products from DataBase\r\n  fetchProduct = async () => {\r\n    try {\r\n      const responsePartyList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-purchaseparty/\"\r\n      );\r\n      const jsonPartyList = await responsePartyList.json();\r\n\r\n      jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\r\n\r\n      const responseItemList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-item/\"\r\n      );\r\n      const jsonItemList = await responseItemList.json();\r\n\r\n      jsonItemList.map(item => this.state.itemNamesFromApi.push(item.name));\r\n    } catch {\r\n      this.toggleLoadStatus();\r\n    }\r\n  };\r\n\r\n  // Check existence of party name\r\n  checkParty = dataFromChild => {\r\n    try {\r\n      this.setState({\r\n        responseMessage: \"\",\r\n        buttonStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n      const showList = (item, index) => {\r\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n          this.setState({\r\n            buttonStatus: {\r\n              visibility: \"visible\"\r\n            }\r\n          });\r\n        } else {\r\n        }\r\n      };\r\n      this.state.partyNamesFromApi.forEach(showList);\r\n    } catch (err) {}\r\n  };\r\n\r\n  // Check existence of Item name\r\n  checkItem = dataFromChild => {\r\n    try {\r\n      this.setState({\r\n        responseMessage: \"\",\r\n        buttonStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n      const showList = (item, index) => {\r\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n          this.setState({\r\n            buttonStatus: {\r\n              visibility: \"visible\"\r\n            }\r\n          });\r\n        } else {\r\n        }\r\n      };\r\n      this.state.itemNamesFromApi.forEach(showList);\r\n    } catch (err) {}\r\n  };\r\n\r\n  //From Submit Handler\r\n  onSubmit = e => {\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/enter-purchase-detail/\", {\r\n        party: this.state.selectedParty,\r\n        item: this.state.selectedItem,\r\n        date: this.state.date,\r\n        quantity: this.state.quantity,\r\n        rate: this.state.rate,\r\n        remark: this.state.remark\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          responseMessage: res.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        alert(error.response.request._response);\r\n      });\r\n    console.log(\"quantity : \"+this.state.quantity);  \r\n    console.log(\"rate : \"+this.state.rate);  \r\n\r\n    console.log(\"quantity : \"+typeof this.state.quantity);  \r\n    console.log(\"rate : \"+typeof this.state.rate);  \r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  // toggle load status\r\n  toggleLoadStatus = async () => {\r\n    if (this.state.loadingStatus.visibility === \"visible\") {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"hidden\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"visible\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      partyNamesFromApi: [],\r\n      itemNamesFromApi: [],\r\n      date: null,\r\n      selectedItem: \"\",\r\n      selectedParty: \"\",\r\n      remark: \"\",\r\n      quantity: 0,\r\n      rate: 0,\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadingStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadedStatus: {\r\n        visibility: \"hidden\"\r\n      }\r\n    };\r\n    this.fetchProduct = this.fetchProduct.bind(this);\r\n    this.checkParty = this.checkParty.bind(this);\r\n    this.checkItem = this.checkItem.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\r\n    this.fetchProduct();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.toggleLoadStatus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.onSubmit(e)}\r\n      >\r\n        <p className=\"headingViewPart\">Purchase Entry</p>\r\n        <div className=\"pt-5\">\r\n          <Autocomplete\r\n            suggestions={this.state.partyNamesFromApi}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.selectedParty = dataFromChild;\r\n            }}\r\n            checkFromParent={this.checkParty}\r\n            placeholderfrom={\"Party name\"}\r\n          />\r\n\r\n          <p>{this.state.partyExistMessage}</p>\r\n          <br />\r\n\r\n          <Autocomplete\r\n            suggestions={this.state.itemNamesFromApi}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.selectedItem = dataFromChild;\r\n            }}\r\n            placeholderfrom={\"Item name\"}\r\n            checkFromParent={this.checkItem}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <InputDateField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.date = dataFromChild;\r\n            }}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <InputRemarkField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.remark = dataFromChild;\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <InputQuantityField\r\n            placeholder={\"Quantity\"}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.quantity = dataFromChild;\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <InputRateField\r\n            placeholderParent={\"Rate\"}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.rate = dataFromChild;\r\n            }}\r\n          />\r\n        </div>\r\n        <p>{this.state.responseMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-dark\"\r\n          style={this.state.buttonStatus}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}