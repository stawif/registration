{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deadpool\\\\Desktop\\\\final\\\\registration\\\\frontend\\\\src\\\\components\\\\entry\\\\VehicleWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputRateField from \"../modular/InputRateField.js\";\nexport default class VehicleWorkEntry extends React.Component {\n  //fetching VehicleParty and Vehicles from database\n  // Check existence of party name\n  //Form Handler Function\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\");\n        const jsonPartyList = await responsePartyList.json();\n        jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n        const responseVehicleList = await fetch(\"http://127.0.0.1:8000/list-of-vehicles/\");\n        const jsonVehicleList = await responseVehicleList.json();\n        jsonVehicleList.map(item => this.state.vehicleNamesFromApi.push(item.name));\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkParty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n        party: this.state.selectedParty,\n        vehicle: this.state.selectedVehicle,\n        date: this.state.date,\n        five_feet: this.state.fiveFeet,\n        two_half_feet: this.state.twoHalfFeet,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.handleMultipleVehicle = async e => {\n      await this.setState({\n        selectedVehicle: Array.from(e.target.selectedOptions, item => item.value)\n      });\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      vehicleNamesFromApi: [],\n      date: null,\n      selectedVehicle: [],\n      selectedParty: \"\",\n      remark: \"\",\n      fiveFeet: 0,\n      twoHalfFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n    this.handleMultipleVehicle = this.handleMultipleVehicle.bind(this);\n  } //This Function Handles multiple vehicle to push them in an array to Pass to DataBase\n\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Vehicle Work Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      checkFromParent: this.checkParty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"vehicles\",\n      onChange: e => this.handleMultipleVehicle(e),\n      multiple: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.vehicleNamesFromApi.map(item => React.createElement(\"option\", {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, item))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(InputRemarkField, {\n      callbackFromParent: dataFromChild => {\n        this.state.remark = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.fiveFeet = dataFromChild;\n      },\n      placeholderParent: \"5 Feet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.twoHalfFeet = dataFromChild;\n      },\n      placeholderParent: \"2.5 Feet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/deadpool/Desktop/final/registration/frontend/src/components/entry/VehicleWorkEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputRemarkField","InputRateField","VehicleWorkEntry","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","map","item","state","partyNamesFromApi","push","name","responseVehicleList","jsonVehicleList","vehicleNamesFromApi","toggleLoadStatus","checkParty","dataFromChild","setState","responseMessage","buttonStatus","visibility","showList","index","toLowerCase","forEach","err","onSubmit","e","post","party","selectedParty","vehicle","selectedVehicle","date","five_feet","fiveFeet","two_half_feet","twoHalfFeet","remark","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","loadingStatus","loadedStatus","handleMultipleVehicle","Array","from","selectedOptions","value","radioButtonStyle","float","bind","componentDidMount","render","partyExistMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,eAAe,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAC5D;AAuBA;AAuBA;AAwBA;AAuBAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA5FnBC,YA4FmB,GA5FJ,YAAY;AACzB,UAAI;AACF,cAAMC,iBAAiB,GAAG,MAAMC,KAAK,CACnC,6CADmC,CAArC;AAGA,cAAMC,aAAa,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,EAA5B;AAEAD,QAAAA,aAAa,CAACE,GAAd,CAAkBC,IAAI,IAAI,KAAKC,KAAL,CAAWC,iBAAX,CAA6BC,IAA7B,CAAkCH,IAAI,CAACI,IAAvC,CAA1B;AAEA,cAAMC,mBAAmB,GAAG,MAAMT,KAAK,CACrC,yCADqC,CAAvC;AAGA,cAAMU,eAAe,GAAG,MAAMD,mBAAmB,CAACP,IAApB,EAA9B;AAEAQ,QAAAA,eAAe,CAACP,GAAhB,CAAoBC,IAAI,IACtB,KAAKC,KAAL,CAAWM,mBAAX,CAA+BJ,IAA/B,CAAoCH,IAAI,CAACI,IAAzC,CADF;AAGD,OAhBD,CAgBE,MAAM;AACN,aAAKI,gBAAL;AACD;AACF,KAwEkB;;AAAA,SArEnBC,UAqEmB,GArENC,aAAa,IAAI;AAC5B,UAAI;AACF,aAAKC,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAE,EADL;AAEZC,UAAAA,YAAY,EAAE;AACZC,YAAAA,UAAU,EAAE;AADA;AAFF,SAAd;;AAMA,cAAMC,QAAQ,GAAG,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AAChC,cAAIN,aAAa,CAACO,WAAd,OAAgCjB,IAAI,CAACiB,WAAL,EAApC,EAAwD;AACtD,iBAAKN,QAAL,CAAc;AACZE,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AADF,aAAd;AAKD,WAND,MAMO,CACN;AACF,SATD;;AAUA,aAAKb,KAAL,CAAWC,iBAAX,CAA6BgB,OAA7B,CAAqCH,QAArC;AACD,OAlBD,CAkBE,OAAOI,GAAP,EAAY,CAAE;AACjB,KAiDkB;;AAAA,SA9CnBC,QA8CmB,GA9CRC,CAAC,IAAI;AACdpC,MAAAA,KAAK,CACFqC,IADH,CACQ,gDADR,EAC0D;AACtDC,QAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWuB,aADoC;AAEtDC,QAAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWyB,eAFkC;AAGtDC,QAAAA,IAAI,EAAE,KAAK1B,KAAL,CAAW0B,IAHqC;AAItDC,QAAAA,SAAS,EAAE,KAAK3B,KAAL,CAAW4B,QAJgC;AAKtDC,QAAAA,aAAa,EAAE,KAAK7B,KAAL,CAAW8B,WAL4B;AAMtDC,QAAAA,MAAM,EAAE,KAAK/B,KAAL,CAAW+B;AANmC,OAD1D,EASGC,IATH,CASQC,GAAG,IAAI;AACX,aAAKvB,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAEsB,GAAG,CAACC;AADT,SAAd;AAGD,OAbH,EAcGC,KAdH,CAcSC,KAAK,IAAI;AACdC,QAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,SAAxB,CAAL;AACD,OAhBH;AAkBApB,MAAAA,CAAC,CAACqB,MAAF,CAASC,KAAT;AACAtB,MAAAA,CAAC,CAACuB,cAAF;AACD,KAyBkB;;AAAA,SAtBnBpC,gBAsBmB,GAtBA,YAAY;AAC7B,UAAI,KAAKP,KAAL,CAAW4C,aAAX,CAAyB/B,UAAzB,KAAwC,SAA5C,EAAuD;AACrD,cAAM,KAAKH,QAAL,CAAc;AAClBkC,UAAAA,aAAa,EAAE;AACb/B,YAAAA,UAAU,EAAE;AADC,WADG;AAIlBgC,UAAAA,YAAY,EAAE;AACZhC,YAAAA,UAAU,EAAE;AADA;AAJI,SAAd,CAAN;AAQD,OATD,MASO;AACL,cAAM,KAAKH,QAAL,CAAc;AAClBkC,UAAAA,aAAa,EAAE;AACb/B,YAAAA,UAAU,EAAE;AADC,WADG;AAIlBgC,UAAAA,YAAY,EAAE;AACZhC,YAAAA,UAAU,EAAE;AADA;AAJI,SAAd,CAAN;AAQD;AACF,KAEkB;;AAAA,SAqCnBiC,qBArCmB,GAqCK,MAAM1B,CAAN,IAAW;AACjC,YAAM,KAAKV,QAAL,CAAc;AAClBe,QAAAA,eAAe,EAAEsB,KAAK,CAACC,IAAN,CAAW5B,CAAC,CAACqB,MAAF,CAASQ,eAApB,EAAqClD,IAAI,IAAIA,IAAI,CAACmD,KAAlD;AADC,OAAd,CAAN;AAGD,KAzCkB;;AAGjB,SAAKlD,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,EADR;AAEXK,MAAAA,mBAAmB,EAAE,EAFV;AAGXoB,MAAAA,IAAI,EAAE,IAHK;AAIXD,MAAAA,eAAe,EAAE,EAJN;AAKXF,MAAAA,aAAa,EAAE,EALJ;AAMXQ,MAAAA,MAAM,EAAE,EANG;AAOXH,MAAAA,QAAQ,EAAE,CAPC;AAQXE,MAAAA,WAAW,EAAE,CARF;AASXnB,MAAAA,eAAe,EAAE,EATN;AAUXC,MAAAA,YAAY,EAAE;AACZC,QAAAA,UAAU,EAAE;AADA,OAVH;AAaXsC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,KAAK,EAAE;AADS,OAbP;AAgBXR,MAAAA,aAAa,EAAE;AACb/B,QAAAA,UAAU,EAAE;AADC,OAhBJ;AAmBXgC,MAAAA,YAAY,EAAE;AACZhC,QAAAA,UAAU,EAAE;AADA;AAnBH,KAAb;AAwBA,SAAKpB,YAAL,GAAoB,KAAKA,YAAL,CAAkB4D,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK7C,UAAL,GAAkB,KAAKA,UAAL,CAAgB6C,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKlC,QAAL,GAAgB,KAAKA,QAAL,CAAckC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAK9C,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB8C,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAK5D,YAAL;AACA,SAAKqD,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BO,IAA3B,CAAgC,IAAhC,CAA7B;AACD,GAhI2D,CAkI5D;;;AAMAC,EAAAA,iBAAiB,GAAG;AAClB,SAAK/C,gBAAL;AACD;;AACDgD,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,QAAQ,EAAEnC,CAAC,IAAI,KAAKD,QAAL,CAAcC,CAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,EAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,KAAKpB,KAAL,CAAWC,iBAD1B;AAEE,MAAA,kBAAkB,EAAEQ,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAWuB,aAAX,GAA2Bd,aAA3B;AACD,OAJH;AAKE,MAAA,eAAe,EAAE,KAAKD,UALxB;AAME,MAAA,eAAe,EAAE,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKR,KAAL,CAAWwD,iBAAf,CATF,EAYI;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAEpC,CAAC,IAAI,KAAK0B,qBAAL,CAA2B1B,CAA3B,CAHjB;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKpB,KAAL,CAAWM,mBAAX,CAA+BR,GAA/B,CAAmCC,IAAI,IACtC;AAAQ,MAAA,GAAG,EAAEA,IAAb;AAAmB,MAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IADH,CADD,CAPH,CAZJ,EA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EA6BE,oBAAC,cAAD;AACE,MAAA,kBAAkB,EAAEU,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW0B,IAAX,GAAkBjB,aAAlB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,EAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,EAsCE,oBAAC,gBAAD;AACE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW+B,MAAX,GAAoBtB,aAApB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CF,EA6CE,oBAAC,cAAD;AACE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW4B,QAAX,GAAsBnB,aAAtB;AACD,OAHH;AAIE,MAAA,iBAAiB,EAAE,QAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CF,EAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApDF,EAqDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArDF,EAsDE,oBAAC,cAAD;AACE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW8B,WAAX,GAAyBrB,aAAzB;AACD,OAHH;AAIE,MAAA,iBAAiB,EAAE,UAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtDF,CALF,EAkEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWW,eAAf,CAlEF,EAmEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnEF,CADF;AA6ED;;AAzN2D","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Autocomplete from \"./AutoComplete.jsx\";\r\nimport InputDateField from \"../modular/InputDateField\";\r\nimport InputRemarkField from \"../modular/InputRemarkField\";\r\nimport InputRateField from \"../modular/InputRateField.js\";\r\n\r\nexport default class VehicleWorkEntry extends React.Component {\r\n  //fetching VehicleParty and Vehicles from database\r\n  fetchProduct = async () => {\r\n    try {\r\n      const responsePartyList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-vehicleparty/\"\r\n      );\r\n      const jsonPartyList = await responsePartyList.json();\r\n\r\n      jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\r\n\r\n      const responseVehicleList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-vehicles/\"\r\n      );\r\n      const jsonVehicleList = await responseVehicleList.json();\r\n\r\n      jsonVehicleList.map(item =>\r\n        this.state.vehicleNamesFromApi.push(item.name)\r\n      );\r\n    } catch {\r\n      this.toggleLoadStatus();\r\n    }\r\n  };\r\n\r\n  // Check existence of party name\r\n  checkParty = dataFromChild => {\r\n    try {\r\n      this.setState({\r\n        responseMessage: \"\",\r\n        buttonStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n      const showList = (item, index) => {\r\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n          this.setState({\r\n            buttonStatus: {\r\n              visibility: \"visible\"\r\n            }\r\n          });\r\n        } else {\r\n        }\r\n      };\r\n      this.state.partyNamesFromApi.forEach(showList);\r\n    } catch (err) {}\r\n  };\r\n\r\n  //Form Handler Function\r\n  onSubmit = e => {\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\r\n        party: this.state.selectedParty,\r\n        vehicle: this.state.selectedVehicle,\r\n        date: this.state.date,\r\n        five_feet: this.state.fiveFeet,\r\n        two_half_feet: this.state.twoHalfFeet,\r\n        remark: this.state.remark\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          responseMessage: res.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        alert(error.response.request._response);\r\n      });\r\n\r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  // toggle load status\r\n  toggleLoadStatus = async () => {\r\n    if (this.state.loadingStatus.visibility === \"visible\") {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"hidden\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"visible\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      partyNamesFromApi: [],\r\n      vehicleNamesFromApi: [],\r\n      date: null,\r\n      selectedVehicle: [],\r\n      selectedParty: \"\",\r\n      remark: \"\",\r\n      fiveFeet: 0,\r\n      twoHalfFeet: 0,\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      radioButtonStyle: {\r\n        float: \"left\"\r\n      },\r\n      loadingStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadedStatus: {\r\n        visibility: \"hidden\"\r\n      }\r\n    };\r\n\r\n    this.fetchProduct = this.fetchProduct.bind(this);\r\n    this.checkParty = this.checkParty.bind(this);\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\r\n    this.fetchProduct();\r\n    this.handleMultipleVehicle = this.handleMultipleVehicle.bind(this);\r\n  }\r\n\r\n  //This Function Handles multiple vehicle to push them in an array to Pass to DataBase\r\n  handleMultipleVehicle = async e => {\r\n    await this.setState({\r\n      selectedVehicle: Array.from(e.target.selectedOptions, item => item.value)\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.toggleLoadStatus();\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.onSubmit(e)}\r\n      >\r\n        <p className=\"headingViewPart\">Vehicle Work Entry</p>\r\n        <div className=\"pt-5\">\r\n          <Autocomplete\r\n            suggestions={this.state.partyNamesFromApi}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.selectedParty = dataFromChild;\r\n            }}\r\n            checkFromParent={this.checkParty}\r\n            placeholderfrom={\"Party name\"}\r\n          />\r\n          <p>{this.state.partyExistMessage}</p>\r\n\r\n          {\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"vehicles\"\r\n              onChange={e => this.handleMultipleVehicle(e)}\r\n              multiple\r\n              required\r\n            >\r\n              {this.state.vehicleNamesFromApi.map(item => (\r\n                <option key={item} value={item}>\r\n                  {item}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          }\r\n\r\n          <br />\r\n\r\n          <InputDateField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.date = dataFromChild;\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <InputRemarkField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.remark = dataFromChild;\r\n            }}\r\n          />\r\n          <br />\r\n          <br />\r\n          <InputRateField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.fiveFeet = dataFromChild;\r\n            }}\r\n            placeholderParent={\"5 Feet\"}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n          <InputRateField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.twoHalfFeet = dataFromChild;\r\n            }}\r\n            placeholderParent={\"2.5 Feet\"}\r\n          />\r\n        </div>\r\n        <p>{this.state.responseMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-dark\"\r\n          style={this.state.buttonStatus}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}