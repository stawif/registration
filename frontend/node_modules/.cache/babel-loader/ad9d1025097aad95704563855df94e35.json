{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class MachinePartyRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //date: null,\n      partyList: [],\n      machineList: [],\n      selectedMachine: null,\n      selectedParty: null,\n      remark: null,\n      dieselamount: null,\n      drillingFeet: null,\n      partyExistMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    }; // Fetch party list from server\n\n    this.state.fetchProduct = async () => {\n      const responsepartyList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n      const jsonpartyList = await responsepartyList.json();\n      this.state.partyList = jsonpartyList;\n      const responsemachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n      const jsonmachineList = await responsemachineList.json();\n      this.state.machineList = jsonmachineList;\n    };\n\n    this.state.fetchProduct(); // Check existence of party name\n\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      //   axios\n      //     .post(\"\", {\n      //       name: this.state.partyName,\n      //       contact: this.state.partyContact,\n      //       village: this.state.partyVillage\n      //     })\n      //     .then(res => {\n      //       this.state.fetchProduct();\n      //     })\n      //     .catch(error => {\n      //       alert(error.response.request._response);\n      //     });\n      console.log(this.state.date);\n      console.log(this.state.dieselamount);\n      console.log(this.state.drillingFeet);\n      console.log(this.state.remark);\n      console.log(this.state.selectedParty);\n      console.log(this.state.selectedMachine);\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    var curr = new Date();\n    curr.setDate(curr.getDate() + 3);\n    var date = curr.toISOString().substr(0, 10);\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Machine Party Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"partyName\",\n      placeholder: \"Party Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyName = e.target.value;\n        this.state.checkparty();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: e => {\n        this.state.selectedMachine = e.target.value;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"select\"), this.state.machineList.map(v => React.createElement(\"option\", {\n      key: v.name,\n      value: v.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, v.name))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: e => {\n        this.state.selectedParty = e.target.value;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"select\"), this.state.partyList.map(v => React.createElement(\"option\", {\n      key: v.name,\n      value: v.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, v.name))), React.createElement(\"input\", {\n      type: \"date\" //data-date=\"\"\n      ,\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: date,\n      name: \"date\",\n      value: this.state.date = date,\n      onChange: e => {\n        this.state.date = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"remark\",\n      placeholder: \"Remark\",\n      autoComplete: \"off\",\n      maxLength: \"30\" //minLength=\"5\"\n      ,\n      onChange: e => {\n        this.state.remark = e.target.value; //this.state.checkparty();\n      } //required\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"dieselAmount\",\n      placeholder: \"Diesel Amount\",\n      autoComplete: \"off\" // maxLength=\"30\"\n      // minLength=\"5\"\n      ,\n      onChange: e => {\n        this.state.dieselamount = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"drillingFeet\",\n      placeholder: \"Drilling Feet\",\n      autoComplete: \"off\" // maxLength=\"30\"\n      // minLength=\"5\"\n      ,\n      onChange: e => {\n        this.state.drillingFeet = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","axios","MachinePartyRegistration","Component","constructor","props","state","partyList","machineList","selectedMachine","selectedParty","remark","dieselamount","drillingFeet","partyExistMessage","buttonStatus","visibility","radioButtonStyle","float","fetchProduct","responsepartyList","fetch","jsonpartyList","json","responsemachineList","jsonmachineList","checkparty","setState","showList","item","index","partyName","toLowerCase","name","forEach","err","onSubmit","e","console","log","date","target","reset","preventDefault","render","curr","Date","setDate","getDate","toISOString","substr","value","map","v"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class MachinePartyRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //date: null,\n\n      partyList: [],\n      machineList: [],\n\n      selectedMachine: null,\n      selectedParty: null,\n\n      remark: null,\n      dieselamount: null,\n      drillingFeet: null,\n\n      partyExistMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n    // Fetch party list from server\n    this.state.fetchProduct = async () => {\n      const responsepartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machineparty/\"\n      );\n      const jsonpartyList = await responsepartyList.json();\n      this.state.partyList = jsonpartyList;\n\n      const responsemachineList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machines/\"\n      );\n      const jsonmachineList = await responsemachineList.json();\n      this.state.machineList = jsonmachineList;\n    };\n\n    this.state.fetchProduct();\n\n    // Check existence of party name\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n        const showList = (item, index) => {\n          if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n    //   axios\n    //     .post(\"\", {\n    //       name: this.state.partyName,\n    //       contact: this.state.partyContact,\n    //       village: this.state.partyVillage\n    //     })\n    //     .then(res => {\n    //       this.state.fetchProduct();\n    //     })\n    //     .catch(error => {\n    //       alert(error.response.request._response);\n    //     });\n    console.log(this.state.date)\n    console.log(this.state.dieselamount)\n    console.log(this.state.drillingFeet)\n    console.log(this.state.remark)\n    console.log(this.state.selectedParty)\n    console.log(this.state.selectedMachine)\n\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    var curr = new Date();\n    curr.setDate(curr.getDate() + 3);\n    var date = curr.toISOString().substr(0, 10);\n\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Party Registration</p>\n        <div className=\"pt-5\">\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"partyName\"\n            placeholder=\"Party Name\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.partyName = e.target.value;\n              this.state.checkparty();\n            }}\n            required\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br />\n\n          <select onChange={e => {this.state.selectedMachine= e.target.value}}>\n          <option>select</option>\n            {this.state.machineList.map(v => (\n              <option key={v.name} value={v.name}>\n                {v.name}\n              </option>\n            ))}\n          </select>\n\n          <br />\n          <br />\n          <select onChange={e => {this.state.selectedParty= e.target.value}}>\n          <option>select</option>\n            {this.state.partyList.map(v => (\n              <option key={v.name} value={v.name}>\n                {v.name}\n              </option>\n            ))}\n          </select>\n\n          <input\n            type=\"date\"\n            //data-date=\"\"\n            data-date-format=\"YYYY-MM-DD\"\n            defaultValue={date}\n            name=\"date\"\n            value={this.state.date= date}\n            onChange={e => {this.state.date= e.target.value}}\n            required\n          ></input>\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"remark\"\n            placeholder=\"Remark\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            //minLength=\"5\"\n            onChange={e => {\n              this.state.remark = e.target.value;\n              //this.state.checkparty();\n            }}\n            //required\n          />\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"dieselAmount\"\n            placeholder=\"Diesel Amount\"\n            autoComplete=\"off\"\n            // maxLength=\"30\"\n            // minLength=\"5\"\n            onChange={e => {\n              this.state.dieselamount = e.target.value;\n            }}\n            required\n          />\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"drillingFeet\"\n            placeholder=\"Drilling Feet\"\n            autoComplete=\"off\"\n            // maxLength=\"30\"\n            // minLength=\"5\"\n            onChange={e => {\n              this.state.drillingFeet = e.target.value;\n            }}\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}