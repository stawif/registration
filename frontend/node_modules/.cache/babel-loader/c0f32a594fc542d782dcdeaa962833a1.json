{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/entry/MachineWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nconst partyNamesFromApi = [];\nconst machineNamesFromApi = [];\nfetch(\"http://127.0.0.1:8000/list-of-machineparty/\").then(res => res.json()).then(out => {\n  partyListFunction(out);\n}).catch(err => {\n  throw err;\n});\nfetch(\"http://127.0.0.1:8000/list-of-machines/\").then(res => res.json()).then(out => {\n  machineListFunction(out);\n}).catch(err => {\n  throw err;\n}); //below function is used to store api data in a array\n\nfunction partyListFunction(data) {\n  data.map(item => partyNamesFromApi.push(item.name));\n  console.log(\"partyNameFromApi\", partyNamesFromApi);\n}\n\nfunction machineListFunction(data) {\n  data.map(item => machineNamesFromApi.push(item.name));\n  console.log(\"machineNameFromApi\", machineNamesFromApi);\n}\n\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myCallbackForSelectedParty = dataFromChild => {\n      this.state.selectedParty = dataFromChild;\n    };\n\n    this.myCallbackForSelectedMachine = dataFromChild => {\n      this.state.selectedMachine = dataFromChild;\n    };\n\n    this.state = {\n      date: null,\n      selectedMachine: null,\n      selectedParty: null,\n      remark: null,\n      dieselamount: null,\n      drillingFeet: null,\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    }; // Check existence of party name\n\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.checkmachine = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        machineNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\n        party: this.state.selectedParty,\n        machine: this.state.selectedMachine,\n        date: this.state.date,\n        drilling_feet: this.state.drillingFeet,\n        diesel_amount: this.state.dieselamount,\n        remark: this.state.remark\n      }).then(res => {}).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Machine Party Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: partyNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedParty,\n      checkFromParent: this.state.checkparty,\n      placeholderfrom: \"enter Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: machineNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedMachine,\n      placeholderfrom: \"enter Machine name\",\n      checkFromParent: this.state.checkmachine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\" //data-date=\"\"\n      ,\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.state.date = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"remark\",\n      placeholder: \"Remark\",\n      autoComplete: \"off\",\n      maxLength: \"30\" //minLength=\"5\"\n      ,\n      onChange: e => {\n        this.state.remark = e.target.value;\n      } //required\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"dieselAmount\",\n      placeholder: \"Diesel Amount\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.dieselamount = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"drillingFeet\",\n      placeholder: \"Drilling Feet\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.drillingFeet = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","axios","Autocomplete","partyNamesFromApi","machineNamesFromApi","fetch","then","res","json","out","partyListFunction","catch","err","machineListFunction","data","map","item","push","name","console","log","MachineWorkEntry","Component","constructor","props","myCallbackForSelectedParty","dataFromChild","state","selectedParty","myCallbackForSelectedMachine","selectedMachine","date","remark","dieselamount","drillingFeet","buttonStatus","visibility","radioButtonStyle","float","checkparty","setState","showList","index","toLowerCase","forEach","checkmachine","onSubmit","e","post","party","machine","drilling_feet","diesel_amount","error","alert","response","request","_response","target","reset","preventDefault","getDate","curr","Date","setDate","toISOString","substr","render","partyExistMessage","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\n\nconst partyNamesFromApi = [];\nconst machineNamesFromApi = [];\n\nfetch(\"http://127.0.0.1:8000/list-of-machineparty/\")\n  .then(res => res.json())\n  .then(out => {\n    partyListFunction(out);\n  })\n  .catch(err => {\n    throw err;\n  });\n\nfetch(\"http://127.0.0.1:8000/list-of-machines/\")\n  .then(res => res.json())\n  .then(out => {\n    machineListFunction(out);\n  })\n  .catch(err => {\n    throw err;\n  });\n//below function is used to store api data in a array\nfunction partyListFunction(data) {\n  data.map(item => partyNamesFromApi.push(item.name));\n  console.log(\"partyNameFromApi\", partyNamesFromApi);\n}\nfunction machineListFunction(data) {\n  data.map(item => machineNamesFromApi.push(item.name));\n  console.log(\"machineNameFromApi\", machineNamesFromApi);\n}\n\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: null,\n\n      selectedMachine: null,\n      selectedParty: null,\n\n      remark: null,\n      dieselamount: null,\n      drillingFeet: null,\n\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n    // Check existence of party name\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        partyNamesFromApi.forEach(showList);\n      } \n      catch (err) {}\n    };\n\n    this.state.checkmachine = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        machineNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n          axios.post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\n             party: this.state.selectedParty,\n             machine: this.state.selectedMachine,\n             date: this.state.date,\n             drilling_feet: this.state.drillingFeet,\n             diesel_amount: this.state.dieselamount,\n             remark: this.state.remark          \n            })\n           .then(res => {\n           })\n           .catch(error => {\n             alert(error.response.request._response);\n           });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n  }\n\n  myCallbackForSelectedParty = dataFromChild => {\n    this.state.selectedParty = dataFromChild;\n  };\n  myCallbackForSelectedMachine = dataFromChild => {\n    this.state.selectedMachine = dataFromChild;\n  };\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Party Registration</p>\n        <div className=\"pt-5\">\n          <Autocomplete\n            suggestions={partyNamesFromApi}\n            callbackFromParent={this.myCallbackForSelectedParty}\n            checkFromParent={this.state.checkparty}\n            placeholderfrom={\"enter Party name\"}\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br/>\n\n          <Autocomplete\n            suggestions={machineNamesFromApi}\n            callbackFromParent={this.myCallbackForSelectedMachine}\n            placeholderfrom={\"enter Machine name\"}\n            checkFromParent={this.state.checkmachine}\n          />\n\n          <br/>\n          <br/>\n\n          <input\n            type=\"date\"\n            //data-date=\"\"\n            data-date-format=\"YYYY-MM-DD\"\n            defaultValue={this.state.date}\n            name=\"date\"\n            onChange={e => {\n              this.state.date = e.target.value;\n            }}\n            required\n          />\n\n          <br/>\n          <br/>\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"remark\"\n            placeholder=\"Remark\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            //minLength=\"5\"\n            onChange={e => {\n              this.state.remark = e.target.value;\n            }}\n            //required\n          />\n\n          <br/>\n          <br/>\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"dieselAmount\"\n            placeholder=\"Diesel Amount\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.dieselamount = e.target.value;\n            }}\n            required\n          />\n\n          <br/>\n          <br/>\n\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"drillingFeet\"\n            placeholder=\"Drilling Feet\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.drillingFeet = e.target.value;\n            }}\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}