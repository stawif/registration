{"ast":null,"code":"var _jsxFileName = \"E:\\\\registration\\\\frontend\\\\src\\\\components\\\\registration\\\\MachineRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport InputCommonName from \"../modular/InputCommonName\";\nexport default class MachineRegistration extends React.Component {\n  // Fetch machine list from server\n  // Check existence of machine name\n  //Form Handler\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n        const jsonMachineList = await responseMachineList.json();\n        this.state.machineList = jsonMachineList;\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkMachine = () => {\n      try {\n        this.setState({\n          machineExistStatus: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.machineName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              machineExistStatus: \"* This machine name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.machineList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/machine-registration/\", {\n        name: this.state.machineName\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {});\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      machineName: \"\",\n      machineExistStatus: \"\",\n      machineList: {},\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkMachine = this.checkMachine.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: this.state.loadingStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Loading...\"), React.createElement(\"div\", {\n      style: this.state.loadedStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Machine Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(InputCommonName, {\n      minLengthh: \"5\",\n      placeholderParent: \"Machine Name\",\n      callbackFromParent: dataFromChild => {\n        this.state.machineName = dataFromChild;\n        this.checkMachine();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.machineExistStatus), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["E:/registration/frontend/src/components/registration/MachineRegistration.js"],"names":["React","axios","InputCommonName","MachineRegistration","Component","constructor","props","fetchProduct","responseMachineList","fetch","jsonMachineList","json","state","machineList","toggleLoadStatus","checkMachine","setState","machineExistStatus","responseMessage","buttonStatus","visibility","showList","item","index","machineName","toLowerCase","name","forEach","err","onSubmit","e","post","then","res","data","catch","error","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render","dataFromChild"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport InputCommonName from \"../modular/InputCommonName\";\r\n\r\nexport default class MachineRegistration extends React.Component {\r\n  // Fetch machine list from server\r\n  fetchProduct = async () => {\r\n    try {\r\n      const responseMachineList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-machines/\"\r\n      );\r\n      const jsonMachineList = await responseMachineList.json();\r\n      this.state.machineList = jsonMachineList;\r\n    } catch {\r\n      this.toggleLoadStatus();\r\n    }\r\n  };\r\n\r\n  // Check existence of machine name\r\n  checkMachine = () => {\r\n    try {\r\n      this.setState({\r\n        machineExistStatus: \"\",\r\n        responseMessage: \"\",\r\n        buttonStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n      const showList = (item, index) => {\r\n        if (this.state.machineName.toLowerCase() === item.name.toLowerCase()) {\r\n          this.setState({\r\n            machineExistStatus: \"* This machine name is already exist!!!\",\r\n            buttonStatus: {\r\n              visibility: \"hidden\"\r\n            }\r\n          });\r\n        } else {\r\n        }\r\n      };\r\n      this.state.machineList.forEach(showList);\r\n    } catch (err) {}\r\n  };\r\n\r\n  //Form Handler\r\n  onSubmit = e => {\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/machine-registration/\", {\r\n        name: this.state.machineName\r\n      })\r\n      .then(res => {\r\n        this.fetchProduct();\r\n        this.setState({\r\n          responseMessage: res.data\r\n        });\r\n      })\r\n      .catch(error => {});\r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  // toggle load status\r\n  toggleLoadStatus = async () => {\r\n    if (this.state.loadingStatus.visibility === \"visible\") {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"hidden\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"visible\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      machineName: \"\",\r\n      machineExistStatus: \"\",\r\n      machineList: {},\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadingStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadedStatus: {\r\n        visibility: \"hidden\"\r\n      }\r\n    };\r\n    this.fetchProduct = this.fetchProduct.bind(this);\r\n    this.checkMachine = this.checkMachine.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\r\n    this.fetchProduct();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.toggleLoadStatus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.onSubmit(e)}\r\n      >\r\n        <h3 style={this.state.loadingStatus}>Loading...</h3>\r\n        <div style={this.state.loadedStatus}>\r\n          <p className=\"headingViewPart\">Machine Registration</p>\r\n          <div className=\"pt-5\">\r\n            <InputCommonName\r\n              minLengthh={\"5\"}\r\n              placeholderParent={\"Machine Name\"}\r\n              callbackFromParent={dataFromChild => {\r\n                this.state.machineName = dataFromChild;\r\n                this.checkMachine();\r\n              }}\r\n            />\r\n          </div>\r\n          <p>{this.state.machineExistStatus}</p>\r\n          <p>{this.state.responseMessage}</p>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-dark\"\r\n            style={this.state.buttonStatus}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}