{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class MachinePartyRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: null,\n      partyList: [],\n      machineList: [],\n      selectedMachine: null,\n      selectedParty: null,\n      remark: null,\n      dieselamount: null,\n      drillingFeet: null,\n      partyExistMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    }; // Fetch party list from server\n\n    this.state.fetchProduct = async () => {\n      const responsepartyList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n      const jsonpartyList = await responsepartyList.json();\n      this.state.partyList = jsonpartyList;\n      const responsemachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n      const jsonmachineList = await responsemachineList.json();\n      this.state.machineList = jsonmachineList;\n    };\n\n    this.state.fetchProduct(); // Check existence of party name\n\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: [],\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (item.name.toLowerCase().startsWith(this.state.partyName.toLowerCase())) {\n            var newArr = this.state.partyExistMessage.concat([this.state.partyExistMessage]);\n            newArr.push(item.name.toLowerCase());\n            this.setState({\n              partyExistMessage: newArr,\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      //   axios\n      //     .post(\"\", {\n      //       name: this.state.partyName,\n      //       contact: this.state.partyContact,\n      //       village: this.state.partyVillage\n      //     })\n      //     .then(res => {\n      //       this.state.fetchProduct();\n      //     })\n      //     .catch(error => {\n      //       alert(error.response.request._response);\n      //     });\n      console.log(this.state.date);\n      console.log(this.state.dieselamount);\n      console.log(this.state.drillingFeet);\n      console.log(this.state.remark);\n      console.log(this.state.selectedParty);\n      console.log(this.state.selectedMachine);\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      // var date = { currentTime: new Date().toLocaleString() }\n      var curr = new Date();\n      curr.setDate(curr.getDate() + 3);\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Machine Party Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"partyName\",\n      placeholder: \"Party Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyName = e.target.value;\n        this.state.checkparty();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), partyExistMessage.map(v => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, v.name)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\" //data-date=\"\"\n      ,\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.state.date = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"remark\",\n      placeholder: \"Remark\",\n      autoComplete: \"off\",\n      maxLength: \"30\" //minLength=\"5\"\n      ,\n      onChange: e => {\n        this.state.remark = e.target.value;\n      } //required\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"dieselAmount\",\n      placeholder: \"Diesel Amount\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.dieselamount = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"drillingFeet\",\n      placeholder: \"Drilling Feet\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.drillingFeet = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","axios","MachinePartyRegistration","Component","constructor","props","state","date","partyList","machineList","selectedMachine","selectedParty","remark","dieselamount","drillingFeet","partyExistMessage","buttonStatus","visibility","radioButtonStyle","float","fetchProduct","responsepartyList","fetch","jsonpartyList","json","responsemachineList","jsonmachineList","checkparty","setState","showList","item","index","name","toLowerCase","startsWith","partyName","newArr","concat","push","forEach","err","onSubmit","e","console","log","target","reset","preventDefault","getDate","curr","Date","setDate","toISOString","substr","render","value","map","v"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class MachinePartyRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: null,\n\n      partyList: [],\n      machineList: [],\n\n      selectedMachine: null,\n      selectedParty: null,\n\n      remark: null,\n      dieselamount: null,\n      drillingFeet: null,\n\n      partyExistMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n    // Fetch party list from server\n    this.state.fetchProduct = async () => {\n      const responsepartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machineparty/\"\n      );\n      const jsonpartyList = await responsepartyList.json();\n      this.state.partyList = jsonpartyList;\n\n      const responsemachineList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machines/\"\n      );\n      const jsonmachineList = await responsemachineList.json();\n      this.state.machineList = jsonmachineList;\n    };\n\n    this.state.fetchProduct();\n\n    // Check existence of party name\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: [],\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n        const showList = (item, index) => {\n          if (\n            item.name\n              .toLowerCase()\n              .startsWith(this.state.partyName.toLowerCase())\n          ) {\n            var newArr =this.state.partyExistMessage.concat([this.state.partyExistMessage]);\n            newArr.push(item.name.toLowerCase());\n            this.setState({\n              partyExistMessage: newArr,\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      //   axios\n      //     .post(\"\", {\n      //       name: this.state.partyName,\n      //       contact: this.state.partyContact,\n      //       village: this.state.partyVillage\n      //     })\n      //     .then(res => {\n      //       this.state.fetchProduct();\n      //     })\n      //     .catch(error => {\n      //       alert(error.response.request._response);\n      //     });\n      console.log(this.state.date);\n      console.log(this.state.dieselamount);\n      console.log(this.state.drillingFeet);\n      console.log(this.state.remark);\n      console.log(this.state.selectedParty);\n      console.log(this.state.selectedMachine);\n\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      // var date = { currentTime: new Date().toLocaleString() }\n      var curr = new Date();\n      curr.setDate(curr.getDate() + 3);\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Party Registration</p>\n        <div className=\"pt-5\">\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"partyName\"\n            placeholder=\"Party Name\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.partyName = e.target.value;\n              this.state.checkparty();\n            }}\n            required\n          />\n\n          {/* <p>{this.state.partyExistMessage}</p> */}\n\n          {partyExistMessage.map(v => (\n            <p>{v.name}</p>\n          ))}\n\n          <br />\n\n          <input\n            type=\"date\"\n            //data-date=\"\"\n            data-date-format=\"YYYY-MM-DD\"\n            defaultValue={this.state.date}\n            name=\"date\"\n            onChange={e => {\n              this.state.date = e.target.value;\n            }}\n            required\n          ></input>\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"remark\"\n            placeholder=\"Remark\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            //minLength=\"5\"\n            onChange={e => {\n              this.state.remark = e.target.value;\n            }}\n            //required\n          />\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"dieselAmount\"\n            placeholder=\"Diesel Amount\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.dieselamount = e.target.value;\n            }}\n            required\n          />\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"drillingFeet\"\n            placeholder=\"Drilling Feet\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.drillingFeet = e.target.value;\n            }}\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}