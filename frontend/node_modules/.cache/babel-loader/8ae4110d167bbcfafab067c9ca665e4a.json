{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/registration/PartyRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class PartyRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      partyName: \"\",\n      partyContact: \"\",\n      partyVillage: \"\",\n      partyList: {},\n      partyExistMessage: \"\",\n      partyExistStatus: {\n        visibility: 'hidden'\n      },\n      buttonStatus: {\n        visibility: 'visible'\n      },\n      radioButtonStyle: {\n        float: 'left'\n      }\n    }; // Fetch party list from server\n\n    this.state.fetchProduct = async () => {\n      const responsepartyList = await fetch(\"http://127.0.0.1:8000/list-of-party/\");\n      const jsonpartyList = await responsepartyList.json();\n      this.state.partyList = jsonpartyList;\n    };\n\n    this.state.fetchProduct(); // Check existence of party name \n\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          buttonStatus: {\n            visibility: 'visible'\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.partyName.localeCompare(item.name) == 0) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: 'hidden'\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post('http://127.0.0.1:8000/party-registration/', {\n        name: this.state.partyName\n      }).then(res => {\n        this.state.fetchProduct();\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"party Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"partyName\",\n      placeholder: \"Party Name\",\n      autocomplete: \"off\",\n      maxlength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyName = e.target.value;\n        this.state.checkparty();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"partyContact\",\n      placeholder: \"Party Contact\",\n      autocomplete: \"off\",\n      maxlength: \"10\",\n      minLength: \"10\",\n      onChange: e => {\n        this.state.partyContact = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"partyVillage\",\n      placeholder: \"Party Village\",\n      autocomplete: \"off\",\n      maxlength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyVillage = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: this.state.radioButtonStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"optradio\",\n      value: \"Machine_work\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), \"Machine Party\")), React.createElement(\"div\", {\n      class: \"radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"optradio\",\n      value: \"Vehicle_work\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \"Vehicle Party\")), React.createElement(\"div\", {\n      class: \"radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"optradio\",\n      value: \"Daily_work\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), \"Daily Party\")), React.createElement(\"div\", {\n      class: \"radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"optradio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), \"Purchase Party\")))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/registration/PartyRegistration.js"],"names":["React","axios","PartyRegistration","Component","constructor","props","state","partyName","partyContact","partyVillage","partyList","partyExistMessage","partyExistStatus","visibility","buttonStatus","radioButtonStyle","float","fetchProduct","responsepartyList","fetch","jsonpartyList","json","checkparty","setState","showList","item","index","localeCompare","name","forEach","err","onSubmit","e","post","then","res","catch","error","alert","response","request","_response","target","reset","preventDefault","render","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class PartyRegistration extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n      partyName: \"\",\n      partyContact: \"\",\n      partyVillage: \"\",\n      partyList: {},\n      partyExistMessage: \"\",\n      partyExistStatus: {\n          visibility: 'hidden'\n      },\n      buttonStatus: {\n          visibility: 'visible'\n      },\n      radioButtonStyle: {\n          float: 'left'\n      }\n    }\n\n    // Fetch party list from server\n    this.state.fetchProduct = async () =>{\n      const responsepartyList = await fetch(\"http://127.0.0.1:8000/list-of-party/\");\n      const jsonpartyList = await responsepartyList.json();\n      this.state.partyList = jsonpartyList;\n    }\n    \n    this.state.fetchProduct(); \n\n    // Check existence of party name \n    this.state.checkparty = () => {\n      try {\n        this.setState({\n             partyExistMessage :\"\",\n             buttonStatus: {\n                 visibility: 'visible'           \n             }\n            });\n        const showList = (item, index) => {\n            if (this.state.partyName.localeCompare(item.name) == 0){\n              this.setState({\n                 partyExistMessage :\"* This party name is already exist!!!\",\n                    buttonStatus: {\n                  visibility: 'hidden'                 \n                 }\n              });\n            }\n            else{}\n        };\n        this.state.partyList.forEach(showList);\n      } \n      catch (err) {}\n    }\n\n    this.state.onSubmit =(e) => {\n        axios.post('http://127.0.0.1:8000/party-registration/', \n        {\n          name: this.state.partyName\n        }\n        ).then(res => {\n          this.state.fetchProduct();\n        }\n        ).catch(error => {\n          alert( error.response.request._response )\n        });\n      e.target.reset();\n      e.preventDefault();\n    };\n  \n  }\n \n  render(){\n    return (\n\t\t<form className=\"form-container form-group\" onSubmit={ e => this.state.onSubmit(e) }>\n         <p className=\"headingViewPart\">party Registration</p>\n\t\t<div className=\"pt-5\">\n\n        <input \n            type=\"text\" \n            className=\"mb-2\" \n            name=\"partyName\" \n            placeholder=\"Party Name\" \n            autocomplete=\"off\"\n            maxlength = \"30\"\n            minLength = \"5\"\n            onChange={\n                e => {\n                    this.state.partyName = e.target.value;\n                    this.state.checkparty();\n                }\n            } \n            required\n        />\n        \n        <p>{this.state.partyExistMessage}</p>\n        <br/>  \n\n        <input \n            type=\"number\" \n            className=\"mb-2\" \n            name=\"partyContact\" \n            placeholder=\"Party Contact\" \n            autocomplete=\"off\"\n            maxlength = \"10\"\n            minLength = \"10\"\n            onChange={\n                e => {\n                    this.state.partyContact = e.target.value;\n                }\n            } \n            required\n        />\n\n        <br/>\n        <br/>\n\n        <input \n            type=\"text\" \n            className=\"mb-2\" \n            name=\"partyVillage\" \n            placeholder=\"Party Village\" \n            autocomplete=\"off\"\n            maxlength = \"30\"\n            minLength = \"5\"\n            onChange={\n                e => {\n                    this.state.partyVillage = e.target.value;\n                }\n            } \n            required\n        />\n\n        <hr/>\n\n        <div style={this.state.radioButtonStyle}>    \n            <div class=\"radio\">\n                <label><input type=\"radio\" name=\"optradio\" value=\"Machine_work\" required/>Machine Party</label>\n            </div>\n            <div class=\"radio\">\n                <label><input type=\"radio\" name=\"optradio\" value=\"Vehicle_work\"/>Vehicle Party</label>\n            </div>\n            <div class=\"radio\">\n                <label><input type=\"radio\" name=\"optradio\" value=\"Daily_work\"/>Daily Party</label>\n            </div>        \n            <div class=\"radio\">\n                <label><input type=\"radio\" name=\"optradio\" />Purchase Party</label>\n            </div>        \n        </div>    \n\n    \n\n    </div>    \n    <button type=\"submit\" className=\"btn btn-outline-dark\" style={this.state.buttonStatus} >Save</button>\n    </form>  \n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}