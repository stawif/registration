{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputRateField from \"../modular/InputRateField.js\";\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myCallbackForSelectedParty = dataFromChild => {\n      this.state.selectedParty = dataFromChild;\n    };\n\n    this.myCallbackForSelectedMachine = dataFromChild => {\n      this.state.selectedMachine = dataFromChild;\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      machineNamesFromApi: [],\n      date: null,\n      selectedMachine: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      dieselAmount: 0,\n      drillingFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    }; //Fetching Machines And Machine Parties from DataBase\n\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-machineparty/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.partyNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n      fetch(\"http://127.0.0.1:8000/list-of-machines/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.machineNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    this.state.fetchProduct(); // Check existence of party name\n\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = item => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    }; //Check Existance for MAchine name\n\n\n    this.state.checkmachine = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = item => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.machineNamesFromApi.forEach(showList);\n      } catch (err) {}\n    }; //form Handler Submitting\n\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\n        party: this.state.selectedParty,\n        machine: this.state.selectedMachine,\n        date: this.state.date,\n        drilling_feet: this.state.drillingFeet,\n        diesel_amount: this.state.dieselAmount,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n  } //Selected Party = Selected From AutoSuggestion\n\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Machine Work Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedParty,\n      checkFromParent: this.state.checkparty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: this.state.machineNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedMachine,\n      placeholderfrom: \"Machine name\",\n      checkFromParent: this.state.checkmachine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(InputRemarkField, {\n      callbackFromParent: dataFromChild => {\n        this.state.remark = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.dieselAmount = dataFromChild;\n      },\n      placeholderParent: \"Diesel Amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.drillingFeet = dataFromChild;\n      },\n      placeholderParent: \"Drilling Feet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputRemarkField","InputRateField","MachineWorkEntry","Component","constructor","props","myCallbackForSelectedParty","dataFromChild","state","selectedParty","myCallbackForSelectedMachine","selectedMachine","partyNamesFromApi","machineNamesFromApi","date","remark","dieselAmount","drillingFeet","responseMessage","buttonStatus","visibility","radioButtonStyle","float","fetchProduct","fetch","then","res","json","out","map","item","push","name","catch","err","checkparty","setState","showList","toLowerCase","forEach","checkmachine","onSubmit","e","post","party","machine","drilling_feet","diesel_amount","data","error","alert","response","request","_response","target","reset","preventDefault","render","partyExistMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputRateField from \"../modular/InputRateField.js\";\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyNamesFromApi: [],\n      machineNamesFromApi: [],\n\n      date: null,\n      selectedMachine: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      dieselAmount: 0,\n      drillingFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n    //Fetching Machines And Machine Parties from DataBase\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-machineparty/\")\n        .then(res => res.json())\n        .then(out => {\n          out.map(item => this.state.partyNamesFromApi.push(item.name));\n        })\n        .catch(err => {\n          throw err;\n        });\n\n      fetch(\"http://127.0.0.1:8000/list-of-machines/\")\n        .then(res => res.json())\n        .then(out => {\n          out.map(item => this.state.machineNamesFromApi.push(item.name));\n        })\n        .catch(err => {\n          throw err;\n        });\n    };\n\n    this.state.fetchProduct();\n\n    // Check existence of party name\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = item => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    //Check Existance for MAchine name\n    this.state.checkmachine = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = item => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.machineNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    //form Handler Submitting\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\n          party: this.state.selectedParty,\n          machine: this.state.selectedMachine,\n          date: this.state.date,\n          drilling_feet: this.state.drillingFeet,\n          diesel_amount: this.state.dieselAmount,\n          remark: this.state.remark\n        })\n        .then(res => {\n          this.setState({\n            responseMessage: res.data\n          });\n        })\n        .catch(error => {\n          alert(error.response.request._response);\n        });\n\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  //Selected Party = Selected From AutoSuggestion\n  myCallbackForSelectedParty = dataFromChild => {\n    this.state.selectedParty = dataFromChild;\n  };\n\n  //Selected Machine = Selected From AutoSuggestion\n  myCallbackForSelectedMachine = dataFromChild => {\n    this.state.selectedMachine = dataFromChild;\n  };\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Work Entry</p>\n        <div className=\"pt-5\">\n          <Autocomplete\n            suggestions={this.state.partyNamesFromApi}\n            callbackFromParent={this.myCallbackForSelectedParty}\n            checkFromParent={this.state.checkparty}\n            placeholderfrom={\"Party name\"}\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br />\n\n          <Autocomplete\n            suggestions={this.state.machineNamesFromApi}\n            callbackFromParent={this.myCallbackForSelectedMachine}\n            placeholderfrom={\"Machine name\"}\n            checkFromParent={this.state.checkmachine}\n          />\n\n          <br />\n          <br />\n\n          <InputDateField\n            callbackFromParent={dataFromChild => {\n              this.state.date = dataFromChild;\n            }}\n          />\n          <br />\n          <br />\n\n          <InputRemarkField\n            callbackFromParent={dataFromChild => {\n              this.state.remark = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n          <InputRateField\n            callbackFromParent={dataFromChild => {\n              this.state.dieselAmount = dataFromChild;\n            }}\n            placeholderParent={\"Diesel Amount\"}\n          />\n\n          <br />\n          <br />\n\n          <InputRateField\n            callbackFromParent={dataFromChild => {\n              this.state.drillingFeet = dataFromChild;\n            }}\n            placeholderParent={\"Drilling Feet\"}\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}