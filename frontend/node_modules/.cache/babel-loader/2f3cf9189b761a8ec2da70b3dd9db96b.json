{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/registration/MachineRegistration.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from '../modular/InputField';\nexport default class MachineRegistration extends React.Component {\n  constructor() {\n    this.state = {\n      machienName: \"\",\n      machineList: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"machineName\",\n      placeholder: \"Machine Name\",\n      onChange: e => {\n        setMachineName(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction MachineRegistrati() {\n  const [machineName, setMachineName] = useState(\"\");\n  const [machineList, setMachineList] = useState({});\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const fetchProduct = async () => {\n    console.log(\"Fetch calls\");\n    const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n    const jsonMachineList = await responseMachineList.json();\n    setMachineList(jsonMachineList);\n  };\n\n  fetchProduct();\n\n  function checkMachine() {\n    try {\n      //errors.firstName.message();\n      setErrorMessage(\"\");\n\n      const showList = (item, index) => {\n        if (machineName === item.name) {\n          setErrorMessage(\"* This machine name is already exist!!!\");\n        } else {}\n      };\n\n      machineList.forEach(showList);\n    } catch (err) {}\n  }\n\n  useEffect(() => {\n    checkMachine();\n  }, [machineList]);\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    alert(\"machine registered successfully\" + machineName);\n    axios.post(`http://127.0.0.1:8000/machine-registration/`, {\n      name: machineName\n    }).then(res => {\n      console.log(res);\n      console.log(res.data); //setMachineList(res);\n    });\n    e.target.reset();\n  };\n\n  console.log(errors);\n  return React.createElement(\"form\", {\n    className: \"form-container form-group\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"headingViewPart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Machine Registration\"), React.createElement(\"div\", {\n    className: \"pt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"mb-2\",\n    name: \"machineName\",\n    ref: register({\n      required: true,\n      maxLength: 30,\n      minLength: {\n        value: 5,\n        message: \"Min length is 5\"\n      }\n    }),\n    placeholder: \"Machine Name\",\n    onChange: e => setMachineName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-outline-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Save\"));\n}\n/*\n                <input \n                    type=\"text\" \n                    className=\"mb-2\" \n                    name=\"machineName\" \n                    ref={register({\n                      required: true,\n                      maxLength: 30,\n                      minLength: { value: 5, message: \"Min length is 5\" }\n                    })}\n                    placeholder=\"Machine Name\" \n                    onChange={e => userInput(e.target.value)} \n                />\n*/","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/registration/MachineRegistration.js"],"names":["React","useState","useEffect","axios","useForm","InputField","MachineRegistration","Component","constructor","state","machienName","machineList","render","e","setMachineName","target","value","MachineRegistrati","machineName","setMachineList","errorMessage","setErrorMessage","fetchProduct","console","log","responseMachineList","fetch","jsonMachineList","json","checkMachine","showList","item","index","name","forEach","err","register","errors","handleSubmit","reset","onSubmit","data","alert","post","then","res","required","maxLength","minLength","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,eAAe,MAAMC,mBAAN,SAAkCN,KAAK,CAACO,SAAxC,CAAiD;AAC9DC,EAAAA,WAAW,GAAE;AACX,SAAKC,KAAL,GAAW;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAX;AAID;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,SAAS,EAAC,MAFV;AAGA,MAAA,IAAI,EAAC,aAHL;AAIA,MAAA,WAAW,EAAC,cAJZ;AAKA,MAAA,QAAQ,EACNC,CAAC,IAAI;AACLC,QAAAA,cAAc,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd;AACD,OARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD;;AAtB6D;;AA0BhE,SAASC,iBAAT,GAA6B;AAC3B,QAAM,CAACC,WAAD,EAAcJ,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,WAAD,EAAcQ,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMqB,YAAY,GAAG,YAAW;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAMC,mBAAmB,GAAG,MAAMC,KAAK,CAAC,yCAAD,CAAvC;AACA,UAAMC,eAAe,GAAG,MAAMF,mBAAmB,CAACG,IAApB,EAA9B;AACAT,IAAAA,cAAc,CAACQ,eAAD,CAAd;AACD,GALH;;AAOEL,EAAAA,YAAY;;AAEZ,WAASO,YAAT,GAAwB;AACtB,QAAI;AACF;AACAR,MAAAA,eAAe,CAAC,EAAD,CAAf;;AACA,YAAMS,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,YAAId,WAAW,KAAKa,IAAI,CAACE,IAAzB,EAA+B;AAC7BZ,UAAAA,eAAe,CAAC,yCAAD,CAAf;AACD,SAFD,MAGI,CAAE;AACP,OALD;;AAMAV,MAAAA,WAAW,CAACuB,OAAZ,CAAoBJ,QAApB;AACD,KAVD,CAWA,OAAOK,GAAP,EAAY,CAAE;AACf;;AAEDjC,EAAAA,SAAS,CACP,MAAM;AACJ2B,IAAAA,YAAY;AACb,GAHM,EAIP,CAAClB,WAAD,CAJO,CAAT;AAOF,QAAM;AAAEyB,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA;AAAlC,MAA4CnC,OAAO,EAAzD;;AAEA,QAAMoC,QAAQ,GAAG,CAACC,IAAD,EAAO5B,CAAP,KAAa;AAC5B6B,IAAAA,KAAK,CAAC,oCAAkCxB,WAAnC,CAAL;AACAf,IAAAA,KAAK,CAACwC,IAAN,CAAY,6CAAZ,EAA0D;AACtDV,MAAAA,IAAI,EAAEf;AADgD,KAA1D,EAGG0B,IAHH,CAGQC,GAAG,IAAI;AACXtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAZ;AACAtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAG,CAACJ,IAAhB,EAFW,CAGX;AACD,KAPH;AAQA5B,IAAAA,CAAC,CAACE,MAAF,CAASwB,KAAT;AACD,GAXD;;AAYAhB,EAAAA,OAAO,CAACC,GAAR,CAAYa,MAAZ;AAEA,SACK;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAA4C,IAAA,QAAQ,EAAEC,YAAY,CAACE,QAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAEA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACO;AACM,IAAA,IAAI,EAAC,MADX;AAEM,IAAA,SAAS,EAAC,MAFhB;AAGM,IAAA,IAAI,EAAC,aAHX;AAIM,IAAA,GAAG,EAAEJ,QAAQ,CAAC;AACZU,MAAAA,QAAQ,EAAE,IADE;AAEZC,MAAAA,SAAS,EAAE,EAFC;AAGZC,MAAAA,SAAS,EAAE;AAAEhC,QAAAA,KAAK,EAAE,CAAT;AAAYiC,QAAAA,OAAO,EAAE;AAArB;AAHC,KAAD,CAJnB;AASM,IAAA,WAAW,EAAC,cATlB;AAUM,IAAA,QAAQ,EAAEpC,CAAC,IAAIC,cAAc,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAVnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,CAFA,EAgBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBP,EAiBA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBA,CADL;AAqBD;AAED","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from '../modular/InputField';\n\nexport default class MachineRegistration extends React.Component{\n  constructor(){\n    this.state={\n      machienName: \"\",\n      machineList: {}\n    }\n  }\n  \n  render(){\n    return (\n      <input \n      type=\"text\" \n      className=\"mb-2\" \n      name=\"machineName\" \n      placeholder=\"Machine Name\" \n      onChange={\n        e => {\n        setMachineName(e.target.value)\n      }\n      } \n    />      \n    );\n  }\n}\n\n\nfunction MachineRegistrati() {\n  const [machineName, setMachineName] = useState(\"\");\n  const [machineList, setMachineList] = useState({});\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const fetchProduct = async () =>{\n      console.log(\"Fetch calls\");\n      const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n      const jsonMachineList = await responseMachineList.json();\n      setMachineList(jsonMachineList);\n    }\n  \n    fetchProduct(); \n\n    function checkMachine() {\n      try {\n        //errors.firstName.message();\n        setErrorMessage(\"\");\n        const showList = (item, index) => {\n          if (machineName === item.name) {\n            setErrorMessage(\"* This machine name is already exist!!!\");\n          }\n          else{}\n        };\n        machineList.forEach(showList);\n      } \n      catch (err) {}\n    }\n\n    useEffect(\n      () => {\n        checkMachine();\n      },\n      [machineList]\n    );\n\n  const { register, errors, handleSubmit, reset } = useForm();\n  \n  const onSubmit = (data, e) => {\n    alert(\"machine registered successfully\"+machineName);\n    axios.post(`http://127.0.0.1:8000/machine-registration/`, {\n        name: machineName\n      })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        //setMachineList(res);\n      });\n    e.target.reset();\n  };\n  console.log(errors);\n\n  return (\n\t\t\t\t\t\t\t<form className=\"form-container form-group\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t\t\t<p className=\"headingViewPart\">Machine Registration</p>\n\t\t\t\t\t\t\t<div className=\"pt-5\">\n              <input \n                    type=\"text\" \n                    className=\"mb-2\" \n                    name=\"machineName\" \n                    ref={register({\n                      required: true,\n                      maxLength: 30,\n                      minLength: { value: 5, message: \"Min length is 5\" }\n                    })}\n                    placeholder=\"Machine Name\" \n                    onChange={e => setMachineName(e.target.value)} \n              />\n\t\t\t\t\t\t\t</div>\n              <br/>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-outline-dark\">Save</button>\n\t\t\t\t\t\t\t</form>      \n  );\n}\n\n/*\n                <input \n                    type=\"text\" \n                    className=\"mb-2\" \n                    name=\"machineName\" \n                    ref={register({\n                      required: true,\n                      maxLength: 30,\n                      minLength: { value: 5, message: \"Min length is 5\" }\n                    })}\n                    placeholder=\"Machine Name\" \n                    onChange={e => userInput(e.target.value)} \n                />\n*/"]},"metadata":{},"sourceType":"module"}