{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.state.tech = event.target.value; //this.props.onSelectChange(this.state.tech);\n\n      console.log(this.state.tech);\n    };\n\n    this.state = {\n      partyName: \"\",\n      //partyContact: \"\",\n      //partyVillage: \"\",\n      remark: \"\",\n      workDate: 0,\n      //partyId: 0,\n      drillingFt: 0,\n      dieselAmount: 0,\n      tech: \"\",\n      partyList: [],\n      machineList: [],\n      partyExistMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    }; // Fetch party list from server\n    // \n\n    componentDidMount();\n    {\n      fetch('http://127.0.0.1:8000/list-of-machineparty/').then(response => response.json()).then(findresponse => {\n        this.setState({\n          partyList: findresponse\n        });\n      });\n    }\n    ; // this.state.fetchProduct();\n    // Check existence of party name\n\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/machine-party-registration/\", {\n        name: this.state.partyName,\n        contact: this.state.partyContact,\n        village: this.state.partyVillage\n      }).then(res => {\n        this.state.fetchProduct();\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Machine Work Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"machineName\",\n      placeholder: \"Machine Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyName = e.target.value;\n        this.state.checkparty();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.machineList.map(v => React.createElement(\"option\", {\n      key: v.name,\n      value: v.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, v.name))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","axios","MachineWorkEntry","Component","constructor","props","handleChange","event","state","tech","target","value","console","log","partyName","remark","workDate","drillingFt","dieselAmount","partyList","machineList","partyExistMessage","buttonStatus","visibility","radioButtonStyle","float","componentDidMount","fetch","then","response","json","findresponse","setState","checkparty","showList","item","index","toLowerCase","name","forEach","err","onSubmit","e","post","contact","partyContact","village","partyVillage","res","fetchProduct","catch","error","alert","request","_response","reset","preventDefault","render","map","v"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyName: \"\",\n      //partyContact: \"\",\n      //partyVillage: \"\",\n      remark: \"\",\n      workDate: 0,\n      //partyId: 0,\n      drillingFt: 0,\n      dieselAmount: 0,\n\n      tech : \"\",\n      partyList: [],\n      machineList: [],\n\n      partyExistMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n    // Fetch party list from server\n    // \n    componentDidMount()\n    {\n      fetch('http://127.0.0.1:8000/list-of-machineparty/')\n.then((response) => response.json())\n.then((findresponse)=> {\n  this.setState({\n    partyList:findresponse\n  })\n})\n     \n\n      \n    };\n\n    // this.state.fetchProduct();\n    \n    \n\n    // Check existence of party name\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n        const showList = (item, index) => {\n          if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/machine-party-registration/\", {\n          name: this.state.partyName,\n          contact: this.state.partyContact,\n          village: this.state.partyVillage\n        })\n        .then(res => {\n          this.state.fetchProduct();\n        })\n        .catch(error => {\n          alert(error.response.request._response);\n        });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  handleChange = event => {\n    this.state.tech = event.target.value;\n    //this.props.onSelectChange(this.state.tech);\n    console.log(this.state.tech);\n  };\n\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Work Registration</p>\n        <div className=\"pt-5\">\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"machineName\"\n            placeholder=\"Machine Name\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.partyName = e.target.value;\n              this.state.checkparty();\n            }}\n            required\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br />\n\n          <select onChange={this.handleChange}>\n            {this.state.machineList.map(v => (\n              <option key={v.name} value={v.name}>\n                {v.name}\n              </option>\n            ))}\n          </select>\n          <br />\n          <br />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}