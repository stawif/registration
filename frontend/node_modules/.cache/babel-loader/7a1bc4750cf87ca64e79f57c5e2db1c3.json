{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/registration/MachineRegistration.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport qs from 'qs'; //import { useForm } from \"react-hook-form\";\n//import InputField from '../modular/InputField';\n\nexport default class MachineRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      machienName: \"\",\n      errorMessage: \"\",\n      machineList: {}\n    };\n\n    this.state.fetchProduct = async () => {\n      console.log(\"Fetch calls\");\n      const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n      const jsonMachineList = await responseMachineList.json();\n      this.state.machineList = jsonMachineList;\n    };\n\n    this.state.fetchProduct();\n\n    this.state.checkMachine = () => {\n      console.log(\"Come in check\");\n\n      try {\n        this.setState({\n          errorMessage: \"\"\n        });\n\n        const showList = (item, index) => {\n          if (this.state.machienName.localeCompare(item.name) == 0) {\n            this.setState({\n              errorMessage: \"* This machine name is already exist!!!\"\n            });\n          } else {}\n        };\n\n        this.state.machineList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post('http://127.0.0.1:8000/machine-registration/', {\n        name: this.state.machienName\n      }).then(res => {\n        this.state.fetchProduct();\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Machine Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"machineName\",\n      placeholder: \"Machine Name\",\n      autocomplete: \"off\",\n      maxlength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.machienName = e.target.value;\n        this.state.checkMachine();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.errorMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/registration/MachineRegistration.js"],"names":["React","useState","useEffect","axios","qs","MachineRegistration","Component","constructor","props","state","machienName","errorMessage","machineList","fetchProduct","console","log","responseMachineList","fetch","jsonMachineList","json","checkMachine","setState","showList","item","index","localeCompare","name","forEach","err","onSubmit","e","post","then","res","catch","error","alert","response","request","_response","target","reset","preventDefault","render","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport qs from 'qs';\n//import { useForm } from \"react-hook-form\";\n//import InputField from '../modular/InputField';\n\n\nexport default class MachineRegistration extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n      machienName: \"\",\n      errorMessage: \"\",\n      machineList: {}\n    }\n\n    this.state.fetchProduct = async () =>{\n      console.log(\"Fetch calls\");\n      const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n      const jsonMachineList = await responseMachineList.json();\n      this.state.machineList = jsonMachineList;\n    }\n    this.state.fetchProduct(); \n\n    this.state.checkMachine = () => {\n      console.log(\"Come in check\");\n      try {\n        this.setState({\n          errorMessage :\"\"\n        });\n        const showList = (item, index) => {\n            if (this.state.machienName.localeCompare(item.name) == 0){\n              this.setState({\n               errorMessage :\"* This machine name is already exist!!!\"\n             });\n            }\n            else{}\n        };\n        this.state.machineList.forEach(showList);\n      } \n      catch (err) {}\n    }\n\n    this.state.onSubmit =(e) => {\n        axios.post('http://127.0.0.1:8000/machine-registration/', \n        {\n          name: this.state.machienName\n        }\n        ).then(res => {\n          this.state.fetchProduct();\n        }\n        ).catch(error => {\n          alert( error.response.request._response )\n        });\n      e.target.reset();\n      e.preventDefault();\n    };\n  \n  }\n \n  render(){\n    return (\n\t\t<form className=\"form-container form-group\" onSubmit={ e => this.state.onSubmit(e) }>\n    <p className=\"headingViewPart\">Machine Registration</p>\n\t\t<div className=\"pt-5\">\n        <input \n        type=\"text\" \n        className=\"mb-2\" \n        name=\"machineName\" \n        placeholder=\"Machine Name\" \n        autocomplete=\"off\"\n        maxlength = \"30\"\n        minLength = \"5\"\n        onChange={\n          e => {\n          this.state.machienName = e.target.value;\n          this.state.checkMachine();\n        }\n        } \n        />\n    </div>    \n    <p>{this.state.errorMessage}</p>     \n    <button type=\"submit\" className=\"btn btn-outline-dark\">Save</button>\n    </form>  \n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}