{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/VehicleRegistration.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nexport default function VehicleRegistration() {\n  const [data, setData] = useState({});\n  const [vehiclename, userInput] = useState(\"\");\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n\n  async function fetchProduct() {\n    const response = await fetch(\"http://127.0.0.1:8000/list-of-vehicle/\");\n    const res = await response.json();\n    setData(res);\n  }\n\n  useEffect(() => {\n    fetchProduct();\n    checkVehicle();\n  }, [vehiclename]); // below function is used to check typed vehicle name is already in database or not\n\n  function checkVehicle() {\n    try {\n      const showList = (item, index) => {\n        if (vehiclename === item.name) {\n          alert(\"already exists, please enter different vehicle name\");\n        }\n      };\n\n      data.forEach(showList);\n    } catch (err) {}\n  }\n\n  const onSubmit = data => {\n    alert(\"vehicle registered successfully \" + vehiclename);\n    axios.post(`http://127.0.0.1:8000/vehicle-registration/`, {\n      name: vehiclename\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n      setData(res);\n    });\n    window.location.reload(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Vehicle Registration\")), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"vehicleName\",\n    ref: register({\n      required: true,\n      maxLength: 30,\n      minLength: {\n        value: 5,\n        message: \"Min length is 5\"\n      }\n    }),\n    onChange: e => userInput(e.target.value),\n    placeholder: \"Enter Vehicle Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, Object.keys(errors).length > 0 && errors.vehicleName.message)), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/VehicleRegistration.js"],"names":["React","useState","useEffect","axios","useForm","VehicleRegistration","data","setData","vehiclename","userInput","register","errors","handleSubmit","fetchProduct","response","fetch","res","json","checkVehicle","showList","item","index","name","alert","forEach","err","onSubmit","post","then","console","log","window","location","reload","required","maxLength","minLength","value","message","e","target","color","Object","keys","length","vehicleName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function VehicleRegistration() {\n  const [data, setData] = useState({});\n  const [vehiclename, userInput] = useState(\"\");\n\n  const { register, errors, handleSubmit } = useForm();\n\n  async function fetchProduct() {\n    const response = await fetch(\"http://127.0.0.1:8000/list-of-vehicle/\");\n\n    const res = await response.json();\n    setData(res);\n  }\n\n  useEffect(() => {\n    fetchProduct();\n    checkVehicle();\n  }, [vehiclename]);\n\n  // below function is used to check typed vehicle name is already in database or not\n  function checkVehicle() {\n    try {\n      const showList = (item, index) => {\n        if (vehiclename === item.name) {\n          alert(\"already exists, please enter different vehicle name\");\n        }\n      };\n      data.forEach(showList);\n    } catch (err) {}\n  }\n\n  const onSubmit = data => {\n    alert(\"vehicle registered successfully \" + vehiclename);\n    axios\n      .post(`http://127.0.0.1:8000/vehicle-registration/`, {\n        name: vehiclename\n      })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        setData(res);\n      });\n    window.location.reload(false);\n  };\n\n  return (\n    <div>\n      <center>\n        <h2>Vehicle Registration</h2>\n      </center>\n      <div className=\"\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <input\n              type=\"text\"\n              name=\"vehicleName\"\n              ref={register({\n                required: true,\n                maxLength: 30,\n                minLength: { value: 5, message: \"Min length is 5\" }\n              })}\n              onChange={e => userInput(e.target.value)}\n              placeholder=\"Enter Vehicle Name\"\n            />\n\n            <div style={{ color: \"red\" }}>\n              {Object.keys(errors).length > 0 && errors.vehicleName.message}\n            </div>\n          </div>\n\n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}