{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      let selectedValue = event.target.value;\n      this.props.onSelectChange(selectedValue);\n    };\n\n    this.state = {\n      partyName: \"\",\n      //partyContact: \"\",\n      //partyVillage: \"\",\n      remark: \"\",\n      workDate: 0,\n      //partyId: 0,\n      drillingFt: 0,\n      dieselAmount: 0,\n      tech: \"select\",\n      partyList: {},\n      machineList: {},\n      partyExistMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n    let options = this.machineList.map(data => React.createElement(\"option\", {\n      key: data.id,\n      value: data.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, data.name)); // Fetch party list from server\n\n    this.state.fetchProduct = async () => {\n      const responsepartyList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n      const jsonpartyList = await responsepartyList.json();\n      this.state.partyList = jsonpartyList;\n      const responsemachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n      const jsonmachineList = await responsemachineList.json();\n      this.state.machineList = jsonmachineList;\n    };\n\n    this.state.fetchProduct();\n    console.log(this.state.machineList);\n    console.log(this.state.partyList);\n    console.log(this.state.tech); // Check existence of party name\n\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/machine-party-registration/\", {\n        name: this.state.partyName,\n        contact: this.state.partyContact,\n        village: this.state.partyVillage\n      }).then(res => {\n        this.state.fetchProduct();\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      tech: e.target.value\n    });\n    this.state.tech = e.target.value;\n    console.log(this.state.tech);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Machine Work Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"machineName\",\n      placeholder: \"Machine Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyName = e.target.value;\n        this.state.checkparty();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"partyContact\",\n      placeholder: \"Party Contact\",\n      autoComplete: \"off\",\n      maxLength: \"10\",\n      minLength: \"10\",\n      onChange: e => {\n        this.state.partyContact = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"customSearch\",\n      className: \"custom-search-select\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Select Item\"), this.options), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"partyVillage\",\n      placeholder: \"Party Village\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyVillage = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","axios","MachineWorkEntry","Component","constructor","props","handleChange","event","selectedValue","target","value","onSelectChange","state","partyName","remark","workDate","drillingFt","dieselAmount","tech","partyList","machineList","partyExistMessage","buttonStatus","visibility","radioButtonStyle","float","options","map","data","id","name","fetchProduct","responsepartyList","fetch","jsonpartyList","json","responsemachineList","jsonmachineList","console","log","checkparty","setState","showList","item","index","toLowerCase","forEach","err","onSubmit","e","post","contact","partyContact","village","partyVillage","then","res","catch","error","alert","response","request","_response","reset","preventDefault","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyName: \"\",\n      //partyContact: \"\",\n      //partyVillage: \"\",\n      remark: \"\",\n      workDate: 0,\n      //partyId: 0,\n      drillingFt: 0,\n      dieselAmount: 0,\n      tech: \"select\",\n\n      partyList: {},\n      machineList: {},\n\n      partyExistMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n       let options = this.machineList.map((data) =>\n        <option\n            key={data.id}\n            value={data.id}\n        >\n            {data.name}\n        </option>\n    );\n    // Fetch party list from server\n    this.state.fetchProduct = async () => {\n      const responsepartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machineparty/\"\n      );\n      const jsonpartyList = await responsepartyList.json();\n      this.state.partyList = jsonpartyList;\n\n      const responsemachineList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machines/\"\n      );\n      const jsonmachineList = await responsemachineList.json();\n      this.state.machineList = jsonmachineList;\n    };\n\n    this.state.fetchProduct();\n\n    console.log(this.state.machineList);\n    console.log(this.state.partyList );\n    console.log(this.state.tech);\n    // Check existence of party name\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n        const showList = (item, index) => {\n          if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/machine-party-registration/\", {\n          name: this.state.partyName,\n          contact: this.state.partyContact,\n          village: this.state.partyVillage\n        })\n        .then(res => {\n          this.state.fetchProduct();\n        })\n        .catch(error => {\n          alert(error.response.request._response);\n        });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      tech: e.target.value\n    });\n    this.state.tech = e.target.value;\n    console.log(this.state.tech);\n  }\n  handleChange = (event) =>\n      {\n          let selectedValue = event.target.value;\n          this.props.onSelectChange(selectedValue);\n      }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Work Registration</p>\n        <div className=\"pt-5\">\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"machineName\"\n            placeholder=\"Machine Name\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.partyName = e.target.value;\n              this.state.checkparty();\n            }}\n            required\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"partyContact\"\n            placeholder=\"Party Contact\"\n            autoComplete=\"off\"\n            maxLength=\"10\"\n            minLength=\"10\"\n            onChange={e => {\n              this.state.partyContact = e.target.value;\n            }}\n            required\n          />\n\n          {/* <select\n            onChange={this.handleChange.bind(this)}\n            value={this.state.tech}\n          >\n            <option value=\"select\">Select a technology</option>\n            <option value=\"Angular\">Angular</option>\n            <option value=\"Bootstrap\">Bootstrap</option>\n            <option value=\"React\">React</option>\n          </select> */}\n          <select name=\"customSearch\" className=\"custom-search-select\" onChange={this.handleChange}>\n                <option>Select Item</option>\n                {this.options}\n           </select>\n          <br />\n          <br />\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"partyVillage\"\n            placeholder=\"Party Village\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.partyVillage = e.target.value;\n            }}\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}