{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/tableDisplay/MachineWorkTable.js\";\nimport React from 'react';\nimport '../../tableDisplayCss.css';\nimport Popup from \"reactjs-popup\";\n\nclass MachineWorkTable extends React.Component {\n  //setDateRestriction \n  // Fetch data of machine work from party name came with props\n  //Push paid and unpaid work objects in different arrays \n  // Set final showing rows of table currentWork\n  //Handle selection of radio buttons and set paidStatus\n  //Set paidStatus to null so that tables show both paid and unpaid\n  //Prepare data for payment\n  constructor(props) {\n    super(props);\n\n    this.setDateRestriction = (item, index) => {\n      if (item.paid == false) {\n        this.setState({\n          paymentData: {\n            minToDate: item.date,\n            maxToDate: null,\n            drillingFeet: 0,\n            dieselQuantity: 0,\n            payment: 0\n          }\n        });\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.fetchProduct = async partyName => {\n      const responsWorkDetail = await fetch('http://127.0.0.1:8000/machine-work-detail/', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"party\": partyName\n        })\n      });\n      const jsonWorkDetail = await responsWorkDetail.json();\n      this.setState({\n        workDetail: jsonWorkDetail\n      });\n      this.setState({\n        minFilterDate: jsonWorkDetail.work[0].date\n      });\n      this.setState({\n        maxFilterDate: jsonWorkDetail.work.slice(-1)[0].date\n      }); //Set paymentData minToDate\n\n      jsonWorkDetail.work.every(this.setDateRestriction); //Set paymentData maxToDate\n\n      this.setState({\n        paymentData: {\n          maxToDate: jsonWorkDetail.work.slice(-1)[0].date\n        }\n      }); //this.state.paymentData.maxToDate = jsonWorkDetail.work.slice(-1)[0].date;\n    };\n\n    this.paidFilter = (item, index) => {\n      if (item.paid == true) {\n        this.state.paidWork.push(item);\n      } else {\n        this.state.unPaidWork.push(item);\n      }\n    };\n\n    this.setDateFilter = (item, index) => {\n      if (this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate) {\n        this.state.currentWork.push(item);\n      }\n    };\n\n    this.setPaidStatus = status => {\n      if (status === \"paid\") {\n        this.setState({\n          paidStatus: \"paid\"\n        });\n      } else if (status === \"unpaid\") {\n        this.setState({\n          paidStatus: \"unpaid\"\n        });\n      } else {\n        this.setState({\n          paidStatus: null\n        });\n      }\n    };\n\n    this.setPaidStatusNull = () => {\n      this.setState({\n        paidStatus: null\n      });\n    };\n\n    this.preparePaymentData = (item, index) => {\n      this.state.drillingFeet = this.state.drillingFeet + item.drilling_feet;\n      this.state.dieselQuantity = this.state.dieselQuantity + item.diesel_amount;\n      this.state.payment = this.state.payment + item.payment;\n    };\n\n    this.state = {\n      workDetail: {\n        name: \"\",\n        contact: \"\",\n        village: \"\",\n        crasher: \"\",\n        work: []\n      },\n      paidWork: [],\n      unPaidWork: [],\n      paidStatus: null,\n      minDate: null,\n      maxDate: null,\n      minFilterDate: null,\n      maxFilterDate: null,\n      currentWork: [],\n      drillingFeet: 0,\n      dieselQuantity: 0,\n      payment: 0,\n      paymentData: {\n        minToDate: null,\n        maxToDate: null,\n        drillingFeet: 0,\n        dieselQuantity: 0,\n        payment: 0\n      }\n    };\n    this.state.currentWork = null;\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.paidFilter = this.paidFilter.bind(this);\n    this.setPaidStatus = this.setPaidStatus.bind(this);\n    this.setDateFilter = this.setDateFilter.bind(this);\n    this.setPaidStatusNull = this.setPaidStatusNull.bind(this);\n    this.preparePaymentData = this.preparePaymentData.bind(this);\n    this.setDateRestriction = this.setDateRestriction.bind(this);\n    this.fetchProduct(this.props.partyName);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.partyName != nextProps.partyName) {\n      this.fetchProduct(nextProps.partyName);\n    }\n  }\n\n  render() {\n    // Reset all list so that next time it don't carry same values\n    this.state.paidWork = [];\n    this.state.unPaidWork = [];\n    this.state.currentWork = []; //Reset total values of lower strip\n\n    this.state.drillingFeet = 0;\n    this.state.dieselQuantity = 0;\n    this.state.payment = 0; //Fill different lists\n\n    this.state.workDetail.work.forEach(this.paidFilter); //Set current work according to radio button choices\n\n    if (this.state.paidStatus === \"paid\") {\n      this.currentWorkFromRadio = this.state.paidWork;\n      this.state.minDate = Object(this.state.paidWork[0]).date;\n      this.state.maxDate = Object(this.state.paidWork.slice(-1)[0]).date;\n    } else if (this.state.paidStatus === \"unpaid\") {\n      this.currentWorkFromRadio = this.state.unPaidWork;\n      this.state.minDate = Object(this.state.unPaidWork[0]).date;\n      this.state.maxDate = Object(this.state.unPaidWork.slice(-1)[0]).date;\n    } else {\n      this.currentWorkFromRadio = this.state.workDetail.work;\n      this.state.minDate = Object(this.state.workDetail.work[0]).date;\n      this.state.maxDate = Object(this.state.workDetail.work.slice(-1)[0]).date;\n    } //Fill final list for show(Applying date filter)\n\n\n    this.currentWorkFromRadio.forEach(this.setDateFilter); //Prepare payment data\n\n    this.state.currentWork.forEach(this.preparePaymentData);\n    return React.createElement(\"div\", {\n      id: \"tableComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row upperTable bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      onClick: e => this.setPaidStatusNull(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.props.partyName)))), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.state.workDetail.contact))), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"paidStatus\",\n      value: \"paid\",\n      onChange: e => {\n        this.setPaidStatus(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), \"paid\")), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"paidStatus\",\n      value: \"unpaid\",\n      onChange: e => {\n        this.setPaidStatus(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), \"Unpaid\")), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          minFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          maxFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"midTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \" table table-borderd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Paid\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Drilling Feet\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Holes\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Diesel Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Machine\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Payment\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Remark\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, this.state.currentWork.map(work => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: work.paid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, work.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, work.drilling_feet), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, work.holes), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, work.diesel_amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, work.machine), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, work.payment), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, work.remark)))))), React.createElement(\"div\", {\n      className: \"row lowerTable text-center bg-primary commonFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Drilling Feet =\")), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, this.state.drillingFeet)), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Diesel =\")), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, this.state.dieselQuantity)), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Payment =\")), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, this.state.payment)), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      modal: true,\n      trigger: React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Payment\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Payment\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Total Drilling Feet : \", this.state.drillingFeet), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Drilling Feet Rate\",\n      className: \"paymentInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Total Diesel Quantity: \", this.state.dieselQuantity), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Diesel Rate\",\n      className: \"paymentInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Total Recieved Payment : \", this.state.payment), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"From : \", this.state.paymentData.minToDate), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"To\"), React.createElement(\"input\", {\n      type: \"date\",\n      className: \"paymentInput\",\n      min: this.state.paymentData.minToDate,\n      max: this.state.paymentData.maxToDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default MachineWorkTable;","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/tableDisplay/MachineWorkTable.js"],"names":["React","Popup","MachineWorkTable","Component","constructor","props","setDateRestriction","item","index","paid","setState","paymentData","minToDate","date","maxToDate","drillingFeet","dieselQuantity","payment","fetchProduct","partyName","responsWorkDetail","fetch","method","headers","body","JSON","stringify","jsonWorkDetail","json","workDetail","minFilterDate","work","maxFilterDate","slice","every","paidFilter","state","paidWork","push","unPaidWork","setDateFilter","currentWork","setPaidStatus","status","paidStatus","setPaidStatusNull","preparePaymentData","drilling_feet","diesel_amount","name","contact","village","crasher","minDate","maxDate","bind","componentWillReceiveProps","nextProps","render","forEach","currentWorkFromRadio","Object","e","target","value","map","holes","machine","remark"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../tableDisplayCss.css';\nimport Popup from \"reactjs-popup\";\n\nclass MachineWorkTable extends React.Component{\n    //setDateRestriction \n    setDateRestriction = (item, index) =>{\n        if(item.paid == false){\n            this.setState({\n                paymentData: {\n                    minToDate: item.date,  \n                    maxToDate: null,\n                    drillingFeet: 0,\n                    dieselQuantity: 0,\n                    payment: 0\n                    }\n            });\n            return false;\n        }\n        else{\n            return true;\n        }\n    }\n    // Fetch data of machine work from party name came with props\n    fetchProduct = async (partyName) =>{\n        const responsWorkDetail = await fetch('http://127.0.0.1:8000/machine-work-detail/', {\n                method: 'post',\n                headers: {'Content-Type':'application/json'},\n                body: JSON.stringify({\n                \"party\": partyName\n                })\n            });        \n        const jsonWorkDetail = await responsWorkDetail.json();\n        this.setState({\n            workDetail: jsonWorkDetail\n        });    \n        this.setState({\n            minFilterDate: jsonWorkDetail.work[0].date\n        });\n        this.setState({\n            maxFilterDate: jsonWorkDetail.work.slice(-1)[0].date    \n        });\n\n        //Set paymentData minToDate\n        jsonWorkDetail.work.every(this.setDateRestriction);\n\n        //Set paymentData maxToDate\n        this.setState({\n            paymentData: {\n                maxToDate: jsonWorkDetail.work.slice(-1)[0].date\n            }\n        });\n        //this.state.paymentData.maxToDate = jsonWorkDetail.work.slice(-1)[0].date;\n    }\n\n    //Push paid and unpaid work objects in different arrays \n    paidFilter = (item, index) =>{\n        if(item.paid == true){\n            this.state.paidWork.push(item);\n        }\n        else{\n            this.state.unPaidWork.push(item);\n        }\n    }\n\n    // Set final showing rows of table currentWork\n    setDateFilter = (item, index) => {\n        if(this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate){\n            this.state.currentWork.push(item);\n        }\n    }\n\n    //Handle selection of radio buttons and set paidStatus\n    setPaidStatus = (status) =>{\n        if(status===\"paid\"){\n            this.setState({\n                paidStatus: \"paid\"\n            });\n        }\n        else if(status===\"unpaid\"){\n            this.setState({\n                paidStatus: \"unpaid\"\n            });\n        }\n        else{\n            this.setState({\n                paidStatus: null\n            }); \n        }\n    }\n\n    //Set paidStatus to null so that tables show both paid and unpaid\n    setPaidStatusNull = () =>{\n        this.setState({\n            paidStatus: null\n        }); \n    }\n\n    //Prepare data for payment\n    preparePaymentData = (item, index) =>{\n        this.state.drillingFeet= this.state.drillingFeet + item.drilling_feet;\n        this.state.dieselQuantity= this.state.dieselQuantity + item.diesel_amount;\n        this.state.payment= this.state.payment + item.payment;\n    }\n    constructor(props){\n        super(props);\n        this.state = {\n            workDetail: {\n                name: \"\",\n                contact: \"\",\n                village: \"\",\n                crasher: \"\",\n                work: []\n            },\n            paidWork: [],\n            unPaidWork: [],\n            paidStatus: null,\n            minDate: null,\n            maxDate: null,\n            minFilterDate: null,\n            maxFilterDate: null,\n            currentWork: [],\n            drillingFeet: 0,\n            dieselQuantity: 0,\n            payment: 0,\n            paymentData:{\n                minToDate: null,\n                maxToDate: null,\n                drillingFeet: 0,\n                dieselQuantity: 0,\n                payment: 0\n            }\n        }\n        this.state.currentWork= null;\n        this.fetchProduct = this.fetchProduct.bind(this);\n        this.paidFilter = this.paidFilter.bind(this);\n        this.setPaidStatus = this.setPaidStatus.bind(this);\n        this.setDateFilter = this.setDateFilter.bind(this);\n        this.setPaidStatusNull = this.setPaidStatusNull.bind(this);\n        this.preparePaymentData = this.preparePaymentData.bind(this);\n        this.setDateRestriction = this.setDateRestriction.bind(this);\n        this.fetchProduct(this.props.partyName);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(this.props.partyName != nextProps.partyName){\n            this.fetchProduct(nextProps.partyName);\n        }\n    }\n\n    render(){\n        // Reset all list so that next time it don't carry same values\n        this.state.paidWork=[];\n        this.state.unPaidWork=[];\n        this.state.currentWork=[];\n\n        //Reset total values of lower strip\n        this.state.drillingFeet= 0;\n        this.state.dieselQuantity= 0;\n        this.state.payment= 0;\n\n        //Fill different lists\n        this.state.workDetail.work.forEach(this.paidFilter);\n\n        //Set current work according to radio button choices\n        if(this.state.paidStatus===\"paid\"){\n            this.currentWorkFromRadio= this.state.paidWork;\n            this.state.minDate = Object(this.state.paidWork[0]).date;\n            this.state.maxDate = Object(this.state.paidWork.slice(-1)[0]).date;\n        }\n        else if(this.state.paidStatus===\"unpaid\"){\n            this.currentWorkFromRadio= this.state.unPaidWork;\n            this.state.minDate = Object(this.state.unPaidWork[0]).date;\n            this.state.maxDate = Object(this.state.unPaidWork.slice(-1)[0]).date;\n        }\n        else{\n            this.currentWorkFromRadio= this.state.workDetail.work;\n            this.state.minDate = Object(this.state.workDetail.work[0]).date;\n            this.state.maxDate = Object(this.state.workDetail.work.slice(-1)[0]).date;\n        }\n\n        //Fill final list for show(Applying date filter)\n        this.currentWorkFromRadio.forEach(this.setDateFilter);\n\n        //Prepare payment data\n        this.state.currentWork.forEach(this.preparePaymentData);\n\n        return(\n            <div id=\"tableComponent\">\n                <div className=\"row upperTable bg-primary\">\n                    \n                    <div className=\"col-sm-2\">\n                        <blockquote className=\"commonFont blockquote text-center\">\n                            <p className=\"mb-0\" onClick={e => this.setPaidStatusNull()}><b>{this.props.partyName}</b></p>\n                            </blockquote>                        \n                    </div>\n\n                    <div className=\"col-sm-2\">\n                        <blockquote className=\"commonFont blockquote text-center\">\n                            <p className=\"mb-0\">{this.state.workDetail.contact}</p>\n                            {/*<footer className=\"blockquote-footer\"> 7742879818</footer>\n                        */}</blockquote>                        \n                    </div>\n                    \n                    <div className=\"col-sm-2\">\n                    <blockquote className=\"commonFont blockquote text-center\">\n                            <input type=\"radio\" name=\"paidStatus\" value=\"paid\" onChange={ e => {this.setPaidStatus(e.target.value)}}/>paid\n                    </blockquote>                        \n                    </div>\n                    \n                    <div className=\"col-sm-2\">\n                    <blockquote className=\"commonFont blockquote text-center\">\n                            <input type=\"radio\" name=\"paidStatus\" value=\"unpaid\" onChange={ e => {this.setPaidStatus(e.target.value)}} />Unpaid\n                    </blockquote>                        \n                    </div>\n                    \n                    <div className=\"col-sm-2\">\n                        <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                            this.setState({\n                                minFilterDate: e.target.value\n                            });\n                        }}/>\n                    </div>\n\n                    <div className=\"col-sm-2\">\n                        <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                            this.setState({\n                                maxFilterDate: e.target.value\n                            });\n                        }}/>\n                    </div>\n                </div>\n\n                <div id=\"midTable\">\n                        <table className=\" table table-borderd\">\n                            <thead className=\"thead-dark\">\n                                <tr>\n                                    <th>Paid</th>\n                                    <th>Date</th>\n                                    <th>Drilling Feet</th>\n                                    <th>Holes</th>\n                                    <th>Diesel Amount</th>\n                                    <th>Machine</th>\n                                    <th>Payment</th>\n                                    <th>Remark</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.currentWork.map((work) => (\n                                    <tr>\n                                        <td>{<input type=\"checkbox\" checked={work.paid}></input>}</td>\n                                        <td>{work.date}</td>\n                                        <td>{work.drilling_feet}</td>\n                                        <td>{work.holes}</td>\n                                        <td>{work.diesel_amount}</td>\n                                        <td>{work.machine}</td>\n                                        <td>{work.payment}</td>\n                                        <td>{work.remark}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                </div>\n\n                <div className=\"row lowerTable text-center bg-primary commonFont\">\n                        <div className=\"col-sm-2\">\n                            <p>Drilling Feet =</p>\n                        </div>\n                        <div className=\"col-sm-1\">\n                            <p>{this.state.drillingFeet}</p>\n                        </div>\n\n                        <div className=\"col-sm-2\">\n                            <p>Diesel =</p>\n                        </div>\n                        <div className=\"col-sm-1\">\n                                <p>{this.state.dieselQuantity}</p>\n                        </div>\n\n                        <div className=\"col-sm-2\">\n                            <p>Payment =</p>\n                        </div>\n                        <div className=\"col-sm-1\">\n                            <p>{this.state.payment}</p>\n                        </div>\n\n                        <div className=\"col-sm-3\">\n                            <Popup modal trigger={\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-outline-dark\">\n                                Payment\n                                </button>   \n                            }>\n                                <div>\n                                    <h3>Payment</h3>\n                                    <br/>\n                                    <p>Total Drilling Feet : {this.state.drillingFeet}</p>\n                                    <input type=\"text\" placeholder=\"Drilling Feet Rate\" className=\"paymentInput\"/>\n                                    <hr/>\n                                    <p>Total Diesel Quantity: {this.state.dieselQuantity}</p>\n                                    <input type=\"text\" placeholder=\"Diesel Rate\" className=\"paymentInput\"/>\n                                    <hr/>\n                                    <p>Total Recieved Payment : {this.state.payment}</p>\n                                    <hr />\n                                    <p>From : {this.state.paymentData.minToDate}</p>\n                                    <p>To</p>\n                                    <input type=\"date\" className=\"paymentInput\" min={this.state.paymentData.minToDate} max={this.state.paymentData.maxToDate}/>\n\n                                </div>\n                            </Popup>                            \n                        </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default MachineWorkTable;"]},"metadata":{},"sourceType":"module"}