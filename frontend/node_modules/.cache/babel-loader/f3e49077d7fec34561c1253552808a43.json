{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/entry/VehicleWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nconst partyNamesFromApi = [];\nconst vehicleNamesFromApi = [];\nfetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\").then(res => res.json()).then(out => {\n  partyListFunction(out);\n}).catch(err => {\n  throw err;\n});\nfetch(\"http://127.0.0.1:8000/list-of-vehicles/\").then(res => res.json()).then(out => {\n  vehicleListFunction(out);\n}).catch(err => {\n  throw err;\n}); //below function is used to store api data in a array\n\nfunction partyListFunction(data) {\n  data.map(item => partyNamesFromApi.push(item.name));\n  console.log(\"partyNameFromApi\", partyNamesFromApi);\n}\n\nfunction vehicleListFunction(data) {\n  data.map(item => vehicleNamesFromApi.push(item.name));\n  console.log(\"vehicleNameFromApi\", vehicleNamesFromApi);\n}\n\nexport default class VehicleWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMultipleVehicle = async e => {\n      await this.setState({\n        selectedVehicle: Array.from(e.target.selectedOptions, item => item.value)\n      });\n      console.log(this.state.selectedVehicle);\n    };\n\n    this.myCallbackForSelectedParty = dataFromChild => {\n      this.state.selectedParty = dataFromChild;\n    };\n\n    this.myCallbackForSelectedVehicle = dataFromChild => {\n      this.state.selectedVehicle = dataFromChild;\n    };\n\n    this.state = {\n      date: null,\n      selectedVehicle: [],\n      selectedParty: null,\n      remark: null,\n      fiveFeet: null,\n      twoHalfFeet: null,\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    }; // Check existence of party name\n\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.checkvehicle = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        vehicleNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      /*axios\n        .post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n          name: this.state.partyName,\n          contact: this.state.partyContact,\n          village: this.state.partyVillage\n        })\n        .then(res => {\n          this.state.fetchProduct();\n        })\n        .catch(error => {\n          alert(error.response.request._response);\n        });*/\n      console.log(this.state.date);\n      console.log(this.state.dieselamount);\n      console.log(this.state.drillingFeet);\n      console.log(this.state.remark);\n      console.log(this.state.selectedParty);\n      console.log(this.state.selectedVehicle);\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n    this.handleMultipleVehicle = this.handleMultipleVehicle.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Vehicle Party Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: partyNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedParty,\n      checkFromParent: this.state.checkparty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"select\", {\n      class: \"form-control\",\n      name: \"vehicles\",\n      onChange: e => this.handleMultipleVehicle(e),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, vehicleNamesFromApi.map(item => React.createElement(\"option\", {\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, item))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\" //data-date=\"\"\n      ,\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.state.date = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"remark\",\n      placeholder: \"Remark\",\n      autoComplete: \"off\",\n      maxLength: \"30\" //minLength=\"5\"\n      ,\n      onChange: e => {\n        this.state.remark = e.target.value;\n      } //required\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"fiveFeet\",\n      placeholder: \"5 Feet\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.dieselamount = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"twoHalfFeet\",\n      placeholder: \"2.5 Feet\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.drillingFeet = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/entry/VehicleWorkEntry.js"],"names":["React","axios","Autocomplete","partyNamesFromApi","vehicleNamesFromApi","fetch","then","res","json","out","partyListFunction","catch","err","vehicleListFunction","data","map","item","push","name","console","log","VehicleWorkEntry","Component","constructor","props","handleMultipleVehicle","e","setState","selectedVehicle","Array","from","target","selectedOptions","value","state","myCallbackForSelectedParty","dataFromChild","selectedParty","myCallbackForSelectedVehicle","date","remark","fiveFeet","twoHalfFeet","buttonStatus","visibility","radioButtonStyle","float","checkparty","showList","index","toLowerCase","forEach","checkvehicle","onSubmit","dieselamount","drillingFeet","reset","preventDefault","getDate","curr","Date","setDate","toISOString","substr","bind","render","partyExistMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nconst partyNamesFromApi = [];\nconst vehicleNamesFromApi = [];\n\nfetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\")\n  .then(res => res.json())\n  .then(out => {\n    partyListFunction(out);\n  })\n  .catch(err => {\n    throw err;\n  });\n\nfetch(\"http://127.0.0.1:8000/list-of-vehicles/\")\n  .then(res => res.json())\n  .then(out => {\n    vehicleListFunction(out);\n  })\n  .catch(err => {\n    throw err;\n  });\n//below function is used to store api data in a array\nfunction partyListFunction(data) {\n  data.map(item => partyNamesFromApi.push(item.name));\n  console.log(\"partyNameFromApi\", partyNamesFromApi);\n}\nfunction vehicleListFunction(data) {\n  data.map(item => vehicleNamesFromApi.push(item.name));\n  console.log(\"vehicleNameFromApi\", vehicleNamesFromApi);\n}\n\nexport default class VehicleWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: null,\n\n      selectedVehicle: [],\n      selectedParty: null,\n\n      remark: null,\n      fiveFeet: null,\n      twoHalfFeet: null,\n\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n    // Check existence of party name\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.checkvehicle = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        vehicleNamesFromApi.forEach(showList);\n      } \n      catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n         /*axios\n           .post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n             name: this.state.partyName,\n             contact: this.state.partyContact,\n             village: this.state.partyVillage\n           })\n           .then(res => {\n             this.state.fetchProduct();\n           })\n           .catch(error => {\n             alert(error.response.request._response);\n           });*/\n      console.log(this.state.date);\n      console.log(this.state.dieselamount);\n      console.log(this.state.drillingFeet);\n      console.log(this.state.remark);\n      console.log(this.state.selectedParty);\n      console.log(this.state.selectedVehicle);\n\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n\n    this.handleMultipleVehicle = this.handleMultipleVehicle.bind(this);\n  }\n\n  handleMultipleVehicle = async e => {\n    await this.setState({\n      selectedVehicle: Array.from(e.target.selectedOptions, (item) => item.value)\n    });\n    console.log(this.state.selectedVehicle);\n};\n\n  myCallbackForSelectedParty = dataFromChild => {\n    this.state.selectedParty = dataFromChild;\n  };\n  myCallbackForSelectedVehicle = dataFromChild => {\n    this.state.selectedVehicle = dataFromChild;\n  };\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Vehicle Party Registration</p>\n      <div className=\"pt-5\">\n          \n          <Autocomplete\n            suggestions={partyNamesFromApi}\n            callbackFromParent={this.myCallbackForSelectedParty}\n            checkFromParent={this.state.checkparty}\n            placeholderfrom={\"Party name\"}\n          />\n          <p>{this.state.partyExistMessage}</p>\n\n          {<select class=\"form-control\" name=\"vehicles\" \n            onChange={e => this.handleMultipleVehicle(e)}\n            multiple>\n            { vehicleNamesFromApi.map(item => (\n              <option value={item}>{item}</option>\n            )) }\n          </select>}\n\n          <br/>\n          <br/>\n\n          <input\n            type=\"date\"\n            //data-date=\"\"\n            data-date-format=\"YYYY-MM-DD\"\n            defaultValue={this.state.date}\n            name=\"date\"\n            onChange={e => {\n              this.state.date = e.target.value;\n            }}\n            required\n          />\n\n          <br/>\n          <br/>\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"remark\"\n            placeholder=\"Remark\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            //minLength=\"5\"\n            onChange={e => {\n              this.state.remark = e.target.value;\n            }}\n            //required\n          />\n\n          <br/>\n          <br/>\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"fiveFeet\"\n            placeholder=\"5 Feet\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.dieselamount = e.target.value;\n            }}\n            required\n          />\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"twoHalfFeet\"\n            placeholder=\"2.5 Feet\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.drillingFeet = e.target.value;\n            }}\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}