{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/WorkerRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class WorkerRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      entryDate: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: 'visible'\n      }\n    }; // Fetch worker list from server\n\n    this.state.fetchProduct = async () => {\n      const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\n      const jsonWorkerList = await responseWorkerList.json();\n      this.state.workerList = jsonWorkerList;\n    };\n\n    this.state.fetchProduct(); // Check existence of worker name \n\n    this.state.checkworker = () => {\n      try {\n        this.setState({\n          workerExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: 'visible'\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              workerExistMessage: \"* This worker name is already exist!!!\",\n              buttonStatus: {\n                visibility: 'hidden'\n              }\n            });\n          } else {}\n        };\n\n        this.state.workerList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post('http://127.0.0.1:8000/worker-registration/', {\n        name: this.state.workerName,\n        contact: this.state.workerContact,\n        village: this.state.workerVillage,\n        salary: this.state.workerSalary,\n        advance: this.state.advance,\n        date: this.state.entryDate\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        console.log(error.response.request._response);\n      });\n      console.log(this.state.workerName);\n      console.log(this.state.workerContact);\n      console.log(this.state.workerVillage);\n      console.log(this.state.workerSalary);\n      console.log(this.state.entryDate);\n      console.log(this.state.advance);\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Machine Worker Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerName\",\n      placeholder: \"Worker Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      value: this.state.workerName,\n      onChange: e => {\n        this.workerName = e.target.value; //this.setState(this.state.workerName= e.target.value );\n\n        console.log(e.target.value, \"sd\", this.state.workerName);\n        this.state.checkworker();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.workerExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerContact\",\n      placeholder: \"Worker Contact\",\n      autoComplete: \"off\",\n      maxLength: \"10\",\n      minLength: \"10\",\n      onChange: e => {\n        this.state.workerContact = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerVillage\",\n      placeholder: \"Worker Village\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.workerVillage = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerSalary\",\n      placeholder: \"Worker Salary\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.workerSalary = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\",\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.state.entryDate = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerAdvance\",\n      placeholder: \"Worker Advance\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.advance = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/WorkerRegistration.js"],"names":["React","axios","WorkerRegistration","Component","constructor","props","state","workerName","workerContact","workerVillage","workerSalary","advance","entryDate","workerList","workerExistMessage","responseMessage","buttonStatus","visibility","fetchProduct","responseWorkerList","fetch","jsonWorkerList","json","checkworker","setState","showList","item","index","toLowerCase","name","forEach","err","onSubmit","e","post","contact","village","salary","date","then","res","data","catch","error","console","log","response","request","_response","target","reset","preventDefault","render","value","parseInt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,kBAAN,SAAiCF,KAAK,CAACG,SAAvC,CAAgD;AAC7DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,aAAa,EAAE,EAFN;AAGTC,MAAAA,aAAa,EAAE,EAHN;AAITC,MAAAA,YAAY,EAAE,CAJL;AAKTC,MAAAA,OAAO,EAAE,CALA;AAMTC,MAAAA,SAAS,EAAE,IANF;AAOTC,MAAAA,UAAU,EAAE,EAPH;AAQTC,MAAAA,kBAAkB,EAAE,EARX;AASTC,MAAAA,eAAe,EAAE,EATR;AAUTC,MAAAA,YAAY,EAAE;AACVC,QAAAA,UAAU,EAAE;AADF;AAVL,KAAX,CAHgB,CAkBhB;;AACA,SAAKX,KAAL,CAAWY,YAAX,GAA0B,YAAW;AACnC,YAAMC,kBAAkB,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAAtC;AACA,YAAMC,cAAc,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,EAA7B;AACA,WAAKhB,KAAL,CAAWO,UAAX,GAAwBQ,cAAxB;AACD,KAJD;;AAOA,SAAKf,KAAL,CAAWY,YAAX,GA1BgB,CA4BhB;;AACA,SAAKZ,KAAL,CAAWiB,WAAX,GAAyB,MAAM;AAC7B,UAAI;AACF,aAAKC,QAAL,CAAc;AACTV,UAAAA,kBAAkB,EAAE,EADX;AAETC,UAAAA,eAAe,EAAE,EAFR;AAGTC,UAAAA,YAAY,EAAE;AACVC,YAAAA,UAAU,EAAE;AADF;AAHL,SAAd;;AAOA,cAAMQ,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9B,cAAI,KAAKrB,KAAL,CAAWC,UAAX,CAAsBqB,WAAtB,OAAwCF,IAAI,CAACG,IAAL,CAAUD,WAAV,EAA5C,EAAoE;AAClE,iBAAKJ,QAAL,CAAc;AACXV,cAAAA,kBAAkB,EAAE,wCADT;AAERE,cAAAA,YAAY,EAAE;AAChBC,gBAAAA,UAAU,EAAE;AADI;AAFN,aAAd;AAMD,WAPD,MAQI,CAAE;AACT,SAVD;;AAWA,aAAKX,KAAL,CAAWO,UAAX,CAAsBiB,OAAtB,CAA8BL,QAA9B;AACD,OApBD,CAqBA,OAAOM,GAAP,EAAY,CAAE;AACf,KAvBD;;AAyBA,SAAKzB,KAAL,CAAW0B,QAAX,GAAsBC,CAAD,IAAO;AACxBhC,MAAAA,KAAK,CAACiC,IAAN,CAAW,4CAAX,EACA;AACEL,QAAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWC,UADnB;AAEE4B,QAAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWE,aAFtB;AAGE4B,QAAAA,OAAO,EAAE,KAAK9B,KAAL,CAAWG,aAHtB;AAIE4B,QAAAA,MAAM,EAAE,KAAK/B,KAAL,CAAWI,YAJrB;AAKEC,QAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK,OALtB;AAME2B,QAAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWM;AANnB,OADA,EASE2B,IATF,CASOC,GAAG,IAAI;AACZ,aAAKlC,KAAL,CAAWY,YAAX;AACA,aAAKM,QAAL,CAAc;AACZT,UAAAA,eAAe,EAAEyB,GAAG,CAACC;AADT,SAAd;AAGD,OAdD,EAeEC,KAfF,CAeQC,KAAK,IAAI;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAaF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,SAApC;AACD,OAjBD;AAkBFJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvC,KAAL,CAAWC,UAAvB;AACAqC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvC,KAAL,CAAWE,aAAvB;AACAoC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvC,KAAL,CAAWG,aAAvB;AACAmC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvC,KAAL,CAAWI,YAAvB;AACAkC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvC,KAAL,CAAWM,SAAvB;AACAgC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvC,KAAL,CAAWK,OAAvB;AACAsB,MAAAA,CAAC,CAACgB,MAAF,CAASC,KAAT;AACAjB,MAAAA,CAAC,CAACkB,cAAF;AACD,KA3BD;AA6BD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACF;AAAM,MAAA,SAAS,EAAC,2BAAhB;AAA4C,MAAA,QAAQ,EAAGnB,CAAC,IAAI,KAAK3B,KAAL,CAAW0B,QAAX,CAAoBC,CAApB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADP,EAEA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,IAAI,EAAC,YAHT;AAII,MAAA,WAAW,EAAC,aAJhB;AAKI,MAAA,YAAY,EAAC,KALjB;AAMI,MAAA,SAAS,EAAG,IANhB;AAOI,MAAA,SAAS,EAAG,GAPhB;AAQI,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWC,UARtB;AASI,MAAA,QAAQ,EACJ0B,CAAC,IAAI;AACD,aAAK1B,UAAL,GAAkB0B,CAAC,CAACgB,MAAF,CAASI,KAA3B,CADC,CAED;;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAC,CAACgB,MAAF,CAASI,KAArB,EAA4B,IAA5B,EAAkC,KAAK/C,KAAL,CAAWC,UAA7C;AAEA,aAAKD,KAAL,CAAWiB,WAAX;AACH,OAhBT;AAkBI,MAAA,QAAQ,MAlBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,EAuBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKjB,KAAL,CAAWQ,kBAAf,CAvBN,EAwBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBN,EA0BM;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,IAAI,EAAC,eAHT;AAII,MAAA,WAAW,EAAC,gBAJhB;AAKI,MAAA,YAAY,EAAC,KALjB;AAMI,MAAA,SAAS,EAAG,IANhB;AAOI,MAAA,SAAS,EAAG,IAPhB;AAQI,MAAA,QAAQ,EACJmB,CAAC,IAAI;AACD,aAAK3B,KAAL,CAAWE,aAAX,GAA2B8C,QAAQ,CAACrB,CAAC,CAACgB,MAAF,CAASI,KAAV,CAAnC;AACH,OAXT;AAaI,MAAA,QAAQ,MAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BN,EA0CM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CN,EA2CM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CN,EA6CM;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,IAAI,EAAC,eAHT;AAII,MAAA,WAAW,EAAC,gBAJhB;AAKI,MAAA,YAAY,EAAC,KALjB;AAMI,MAAA,SAAS,EAAG,IANhB;AAOI,MAAA,SAAS,EAAG,GAPhB;AAQI,MAAA,QAAQ,EACJpB,CAAC,IAAI;AACD,aAAK3B,KAAL,CAAWG,aAAX,GAA2BwB,CAAC,CAACgB,MAAF,CAASI,KAApC;AACH,OAXT;AAaI,MAAA,QAAQ,MAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CN,EA6DM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7DN,EA8DM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9DN,EAgEM;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,IAAI,EAAC,cAHT;AAII,MAAA,WAAW,EAAC,eAJhB;AAKI,MAAA,YAAY,EAAC,KALjB;AAMI,MAAA,QAAQ,EACJpB,CAAC,IAAI;AACD,aAAK3B,KAAL,CAAWI,YAAX,GAA0B4C,QAAQ,CAACrB,CAAC,CAACgB,MAAF,CAASI,KAAV,CAAlC;AACH,OATT;AAWI,MAAA,QAAQ,MAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhEN,EA8EQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9ER,EA+EQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/ER,EAiFQ;AACE,MAAA,IAAI,EAAC,MADP;AAEE,0BAAiB,YAFnB;AAGE,MAAA,YAAY,EAAE,KAAK/C,KAAL,CAAWgC,IAH3B;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAEL,CAAC,IAAI;AACb,aAAK3B,KAAL,CAAWM,SAAX,GAAuBqB,CAAC,CAACgB,MAAF,CAASI,KAAhC;AACD,OAPH;AAQE,MAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjFR,EA4FM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5FN,EA6FM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7FN,EA+FM;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,IAAI,EAAC,eAHT;AAII,MAAA,WAAW,EAAC,gBAJhB;AAKI,MAAA,YAAY,EAAC,KALjB;AAMI,MAAA,QAAQ,EACJpB,CAAC,IAAI;AACD,aAAK3B,KAAL,CAAWK,OAAX,GAAqB2C,QAAQ,CAACrB,CAAC,CAACgB,MAAF,CAASI,KAAV,CAA7B;AACH,OATT;AAWI,MAAA,QAAQ,MAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/FN,CAFA,EAgHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK/C,KAAL,CAAWS,eAAf,CAhHF,EAiHE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,sBAAhC;AAAuD,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWU,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjHF,CADE;AAqHD;;AA5M4D","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class WorkerRegistration extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      entryDate: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n          visibility: 'visible'\n      }\n    }\n\n    // Fetch worker list from server\n    this.state.fetchProduct = async () =>{\n      const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\n      const jsonWorkerList = await responseWorkerList.json();\n      this.state.workerList = jsonWorkerList;\n    }\n    \n    \n    this.state.fetchProduct(); \n\n    // Check existence of worker name \n    this.state.checkworker = () => {\n      try {\n        this.setState({\n             workerExistMessage :\"\",\n             responseMessage: \"\",\n             buttonStatus: {\n                 visibility: 'visible'           \n             }\n            });\n        const showList = (item, index) => {\n            if (this.state.workerName.toLowerCase() === item.name.toLowerCase()){\n              this.setState({\n                 workerExistMessage :\"* This worker name is already exist!!!\",\n                    buttonStatus: {\n                  visibility: 'hidden'                 \n                 }\n              });\n            }\n            else{}\n        };\n        this.state.workerList.forEach(showList);\n      } \n      catch (err) {}\n    }\n\n    this.state.onSubmit =(e) => {\n        axios.post('http://127.0.0.1:8000/worker-registration/', \n        {\n          name: this.state.workerName,\n          contact: this.state.workerContact,\n          village: this.state.workerVillage,\n          salary: this.state.workerSalary,\n          advance: this.state.advance,\n          date: this.state.entryDate\n        }\n        ).then(res => {\n          this.state.fetchProduct();\n          this.setState({\n            responseMessage: res.data\n          });         \n        }\n        ).catch(error => {\n          console.log( error.response.request._response )\n        });\n      console.log(this.state.workerName);  \n      console.log(this.state.workerContact);  \n      console.log(this.state.workerVillage);  \n      console.log(this.state.workerSalary);  \n      console.log(this.state.entryDate);  \n      console.log(this.state.advance);  \n      e.target.reset();\n      e.preventDefault();\n    };\n  \n  }\n \n  render(){\n    return (\n\t\t<form className=\"form-container form-group\" onSubmit={ e => this.state.onSubmit(e) }>\n         <p className=\"headingViewPart\">Machine Worker Registration</p>\n\t\t<div className=\"pt-5\">\n\n        <input \n            type=\"text\" \n            className=\"mb-2\" \n            name=\"workerName\" \n            placeholder=\"Worker Name\" \n            autoComplete=\"off\"\n            maxLength = \"30\"\n            minLength = \"5\"\n            value={this.state.workerName}\n            onChange={\n                e => {\n                    this.workerName = e.target.value;\n                    //this.setState(this.state.workerName= e.target.value );\n                    console.log(e.target.value, \"sd\", this.state.workerName);\n                    \n                    this.state.checkworker();\n                }\n            } \n            required\n        />\n        \n        <p>{this.state.workerExistMessage}</p>\n        <br/>  \n\n        <input \n            type=\"number\" \n            className=\"mb-2\" \n            name=\"workerContact\" \n            placeholder=\"Worker Contact\" \n            autoComplete=\"off\"\n            maxLength = \"10\"\n            minLength = \"10\"\n            onChange={\n                e => {\n                    this.state.workerContact = parseInt(e.target.value);\n                }\n            } \n            required\n        />\n\n        <br/>\n        <br/>\n\n        <input \n            type=\"text\" \n            className=\"mb-2\" \n            name=\"workerVillage\" \n            placeholder=\"Worker Village\" \n            autoComplete=\"off\"\n            maxLength = \"30\"\n            minLength = \"5\"\n            onChange={\n                e => {\n                    this.state.workerVillage = e.target.value;\n                }\n            } \n            required\n        />\n        \n        <br/>  \n        <br/>        \n\n        <input \n            type=\"number\" \n            className=\"mb-2\" \n            name=\"workerSalary\" \n            placeholder=\"Worker Salary\" \n            autoComplete=\"off\"\n            onChange={\n                e => {\n                    this.state.workerSalary = parseInt(e.target.value);\n                }\n            } \n            required\n        />\n\n          <br/>\n          <br/>\n\n          <input\n            type=\"date\"\n            data-date-format=\"YYYY-MM-DD\"\n            defaultValue={this.state.date}\n            name=\"date\"\n            onChange={e => {\n              this.state.entryDate = e.target.value;\n            }}\n            required\n          />\n        \n        <br/>  \n        <br/>        \n\n        <input \n            type=\"number\" \n            className=\"mb-2\" \n            name=\"workerAdvance\" \n            placeholder=\"Worker Advance\" \n            autoComplete=\"off\"\n            onChange={\n                e => {\n                    this.state.advance = parseInt(e.target.value);\n                }\n            } \n            required\n        />\n\n    </div>    \n    <p>{this.state.responseMessage}</p>\n    <button type=\"submit\" className=\"btn btn-outline-dark\" style={this.state.buttonStatus} >Save</button>\n    </form>  \n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}