{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/MaterialRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nimport InputCommonName from \"../modular/InputCommonName\";\nexport default class MaterialRegistration extends React.Component {\n  // Fetch item list from server\n  // Check existence of item name\n  //Form Handler\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseItemList = await fetch(\"http://127.0.0.1:8000/list-of-material/\");\n        const jsonItemList = await responseItemList.json();\n        this.state.materialList = jsonItemList;\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkMaterial = () => {\n      try {\n        this.setState({\n          materialExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.itemName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              materialExistMessage: \"* This item name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.materialList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/material-registration/\", {\n        name: this.state.materialName,\n        measurement: this.state.materialMeasurement,\n        quantity: this.state.materialQuantity\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {// alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      materialName: \"\",\n      materialMeasurement: \"\",\n      materialQuantity: 0,\n      materialList: {},\n      itemExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkMaterial = this.checkMaterial.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Material Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(InputCommonName, {\n      minLength: \"2\",\n      placeholderParent: \"Material Name\",\n      callbackFromParent: dataFromChild => {\n        this.state.materialName = dataFromChild;\n        this.checkMaterial();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.materialExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"materialMeasurement\",\n      placeholder: \"Material Measurement\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"1\",\n      onChange: e => {\n        this.state.materialMeasurement = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Quantity\",\n      callbackFromParent: dataFromChild => {\n        this.state.materialQuantity = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/MaterialRegistration.js"],"names":["React","axios","InputQuantityField","InputCommonName","MaterialRegistration","Component","constructor","props","fetchProduct","responseItemList","fetch","jsonItemList","json","state","materialList","toggleLoadStatus","checkMaterial","setState","materialExistMessage","responseMessage","buttonStatus","visibility","showList","item","index","itemName","toLowerCase","name","forEach","err","onSubmit","e","post","materialName","measurement","materialMeasurement","quantity","materialQuantity","then","res","data","catch","error","target","reset","preventDefault","loadingStatus","loadedStatus","itemExistMessage","bind","componentDidMount","render","dataFromChild","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nimport InputCommonName from \"../modular/InputCommonName\";\n\nexport default class MaterialRegistration extends React.Component {\n  // Fetch item list from server\n  fetchProduct = async () => {\n    try {\n      const responseItemList = await fetch(\n        \"http://127.0.0.1:8000/list-of-material/\"\n      );\n      const jsonItemList = await responseItemList.json();\n      this.state.materialList = jsonItemList;\n    } catch {\n      this.toggleLoadStatus();\n    }\n  };\n\n  // Check existence of item name\n  checkMaterial = () => {\n    try {\n      this.setState({\n      materialExistMessage: \"\",\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"visible\"\n        }\n      });\n      const showList = (item, index) => {\n        if (this.state.itemName.toLowerCase() === item.name.toLowerCase()) {\n          this.setState({\n            materialExistMessage: \"* This item name is already exist!!!\",\n            buttonStatus: {\n              visibility: \"hidden\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.materialList.forEach(showList);\n    } catch (err) {}\n  };\n\n  //Form Handler\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/material-registration/\", {\n        name: this.state.materialName,\n        measurement: this.state.materialMeasurement,\n        quantity: this.state.materialQuantity\n      })\n      .then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        // alert(error.response.request._response);\n      });\n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.visibility === \"visible\") {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"hidden\"\n        },\n        loadedStatus: {\n          visibility: \"visible\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"visible\"\n        },\n        loadedStatus: {\n          visibility: \"hidden\"\n        }\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      materialName: \"\",\n      materialMeasurement: \"\",\n      materialQuantity: 0,\n      materialList: {},\n      itemExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkMaterial = this.checkMaterial.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Material Registration</p>\n        <div className=\"pt-5\">\n          <InputCommonName\n            minLength={\"2\"}\n            placeholderParent={\"Material Name\"}\n            callbackFromParent={dataFromChild => {\n              this.state.materialName = dataFromChild;\n              this.checkMaterial()\n            }}\n            \n          />\n\n          <p>{this.state.materialExistMessage}</p>\n          <br />\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"materialMeasurement\"\n            placeholder=\"Material Measurement\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"1\"\n            onChange={e => {\n              this.state.materialMeasurement = e.target.value;\n            }}\n            required\n          />\n\n          <br />\n          <br />\n\n          <InputQuantityField\n            placeholder={\"Quantity\"}\n            callbackFromParent={dataFromChild => {\n              this.state.materialQuantity = dataFromChild;\n            }}\n          />\n\n          <hr />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}