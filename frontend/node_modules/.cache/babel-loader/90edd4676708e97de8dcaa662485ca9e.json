{"ast":null,"code":"var _jsxFileName = \"/home/snakode/registration/frontend/src/components/entry/PurchaseEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nimport InputRateField from \"../modular/InputRateField.js\";\nexport default class PurchaseEntry extends React.Component {\n  //Fetching products from DataBase\n  // Check existence of party name\n  // Check existence of Item name\n  //From Submit Handler\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-purchaseparty/\");\n        const jsonPartyList = await responsePartyList.json();\n        jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n        const responseItemList = await fetch(\"http://127.0.0.1:8000/list-of-material/\");\n        const jsonItemList = await responseItemList.json();\n        jsonItemList.map(item => this.setState({\n          materialNamesFromApi: [...this.state.materialNamesFromApi, item.name]\n        }));\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkParty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.checkMaterial = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.materialNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-purchase-detail/\", {\n        party: this.state.selectedParty,\n        material: this.state.selectedMaterial,\n        date: this.state.date,\n        quantity: this.state.quantity,\n        rate: this.state.rate,\n        remark: this.state.remark\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      materialNamesFromApi: [],\n      date: null,\n      selectedMaterial: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      quantity: 0,\n      rate: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.checkMaterial = this.checkMaterial.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Purchase Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      checkFromParent: this.checkParty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: e => this.state.selectedMaterial = e.target.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.machineNamesFromApi.map(item => React.createElement(\"option\", {\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, item))), React.createElement(Autocomplete, {\n      suggestions: this.state.materialNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedMaterial = dataFromChild;\n      },\n      placeholderfrom: \"Material name\",\n      checkFromParent: this.checkMaterial,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(InputRemarkField, {\n      callbackFromParent: dataFromChild => {\n        this.state.remark = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Quantity\",\n      callbackFromParent: dataFromChild => {\n        this.state.quantity = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Rate\",\n      callbackFromParent: dataFromChild => {\n        this.state.rate = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/home/snakode/registration/frontend/src/components/entry/PurchaseEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputRemarkField","InputQuantityField","InputRateField","PurchaseEntry","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","map","item","state","partyNamesFromApi","push","name","responseItemList","jsonItemList","setState","materialNamesFromApi","toggleLoadStatus","checkParty","dataFromChild","responseMessage","buttonStatus","visibility","showList","index","toLowerCase","forEach","err","checkMaterial","onSubmit","e","post","party","selectedParty","material","selectedMaterial","date","quantity","rate","remark","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render","partyExistMessage","value","machineNamesFromApi"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nimport InputRateField from \"../modular/InputRateField.js\";\n\nexport default class PurchaseEntry extends React.Component {\n  //Fetching products from DataBase\n  fetchProduct = async () => {\n    try {\n      const responsePartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-purchaseparty/\"\n      );\n      const jsonPartyList = await responsePartyList.json();\n\n      jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n\n      const responseItemList = await fetch(\n        \"http://127.0.0.1:8000/list-of-material/\"\n      );\n      const jsonItemList = await responseItemList.json();\n\n      jsonItemList.map(item => \n        this.setState({ \n          materialNamesFromApi: [...this.state.materialNamesFromApi, item.name] \n        })\n      );\n    } catch {\n      this.toggleLoadStatus();\n    }\n  };\n\n  // Check existence of party name\n  checkParty = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.partyNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  // Check existence of Item name\n  checkMaterial = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.materialNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  //From Submit Handler\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/enter-purchase-detail/\", {\n        party: this.state.selectedParty,\n        material: this.state.selectedMaterial,\n        date: this.state.date,\n        quantity: this.state.quantity,\n        rate: this.state.rate,\n        remark: this.state.remark\n      })\n      .then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        alert(error.response.request._response);\n      });\n\n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.visibility === \"visible\") {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"hidden\"\n        },\n        loadedStatus: {\n          visibility: \"visible\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"visible\"\n        },\n        loadedStatus: {\n          visibility: \"hidden\"\n        }\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyNamesFromApi: [],\n      materialNamesFromApi: [],\n      date: null,\n      selectedMaterial: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      quantity: 0,\n      rate: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.checkMaterial = this.checkMaterial.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Purchase Entry</p>\n        <div className=\"pt-5\">\n          <Autocomplete\n            suggestions={this.state.partyNamesFromApi}\n            callbackFromParent={dataFromChild => {\n              this.state.selectedParty = dataFromChild;\n            }}\n            checkFromParent={this.checkParty}\n            placeholderfrom={\"Party name\"}\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br />\n\n          <select onChange={e => this.state.selectedMaterial=e.target.value}>\n                {this.state.machineNamesFromApi.map((item) => (\n                    <option value={item}>{item}</option>\n                ))}\n          </select> \n\n          <Autocomplete\n            suggestions={this.state.materialNamesFromApi}\n            callbackFromParent={dataFromChild => {\n              this.state.selectedMaterial = dataFromChild;\n            }}\n            placeholderfrom={\"Material name\"}\n            checkFromParent={this.checkMaterial}\n          />\n\n          <br />\n          <br />\n\n          <InputDateField\n            callbackFromParent={dataFromChild => {\n              this.state.date = dataFromChild;\n            }}\n          />\n          <br />\n          <br />\n\n          <InputRemarkField\n            callbackFromParent={dataFromChild => {\n              this.state.remark = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n\n          <InputQuantityField\n            placeholder={\"Quantity\"}\n            callbackFromParent={dataFromChild => {\n              this.state.quantity = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n\n          <InputRateField\n            placeholderParent={\"Rate\"}\n            callbackFromParent={dataFromChild => {\n              this.state.rate = dataFromChild;\n            }}\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}