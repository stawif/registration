{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/StoreRegistration.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nexport default function StoreRegistration() {\n  const [name, setName] = useState(\"\");\n  const [measurement, setMeasurement] = useState(\"\");\n  const [quantity, setQuantity] = useState(0);\n  const {\n    register,\n    errors,\n    handleSubmit,\n    getValues\n  } = useForm();\n\n  const onSubmit = data => {\n    alert(\"recorder registered successfully \" + name);\n    axios.post(`http://127.0.0.1:8000/recorder-registration/`, {\n      name: name,\n      measurement: measurement,\n      quantity: quantity\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n    window.location.reload(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Recorder Registration\")), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    ref: register({\n      required: true,\n      maxLength: 30,\n      minLength: {\n        value: 5,\n        message: \"Min length is 5\"\n      }\n    }),\n    onChange: e => setName(e.target.value),\n    placeholder: \"Enter Store Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"measurement\",\n    ref: register({\n      required: true,\n      maxLength: 30 // minLength: { value: 5, message: \"Min length is 5\" }\n\n    }),\n    onChange: e => setMeasurement(e.target.value),\n    placeholder: \"Enter Measurement\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    name: \"quantity\",\n    ref: register({\n      required: true,\n      maxLength: 30 // minLength: { value: 5, message: \"Min length is 5\" }\n\n    }),\n    onChange: e => setQuantity(e.target.value),\n    placeholder: \"Enter Quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/StoreRegistration.js"],"names":["React","useState","axios","useForm","StoreRegistration","name","setName","measurement","setMeasurement","quantity","setQuantity","register","errors","handleSubmit","getValues","onSubmit","data","alert","post","then","res","console","log","window","location","reload","required","maxLength","minLength","value","message","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;AAEA,QAAM;AAAEU,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA;AAAlC,MAAgDX,OAAO,EAA7D;;AAEA,QAAMY,QAAQ,GAAGC,IAAI,IAAI;AACvBC,IAAAA,KAAK,CAAC,sCAAsCZ,IAAvC,CAAL;AACAH,IAAAA,KAAK,CACFgB,IADH,CACS,8CADT,EACwD;AACpDb,MAAAA,IAAI,EAAEA,IAD8C;AAEpDE,MAAAA,WAAW,EAAEA,WAFuC;AAGpDE,MAAAA,QAAQ,EAAEA;AAH0C,KADxD,EAMGU,IANH,CAMQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACJ,IAAhB;AACD,KATH;AAUAO,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD,GAbD;;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEZ,YAAY,CAACE,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,GAAG,EAAEJ,QAAQ,CAAC;AACZe,MAAAA,QAAQ,EAAE,IADE;AAEZC,MAAAA,SAAS,EAAE,EAFC;AAGZC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,OAAO,EAAE;AAArB;AAHC,KAAD,CAHf;AAQE,IAAA,QAAQ,EAAEC,CAAC,IAAIzB,OAAO,CAACyB,CAAC,CAACC,MAAF,CAASH,KAAV,CARxB;AASE,IAAA,WAAW,EAAC,kBATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYA;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,IAAA,GAAG,EAAElB,QAAQ,CAAC;AACZe,MAAAA,QAAQ,EAAE,IADE;AAEZC,MAAAA,SAAS,EAAE,EAFC,CAGZ;;AAHY,KAAD,CAHjB;AAQI,IAAA,QAAQ,EAAEI,CAAC,IAAIvB,cAAc,CAACuB,CAAC,CAACC,MAAF,CAASH,KAAV,CARjC;AASI,IAAA,WAAW,EAAC,mBAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZA,EAuBE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,GAAG,EAAElB,QAAQ,CAAC;AACZe,MAAAA,QAAQ,EAAE,IADE;AAEZC,MAAAA,SAAS,EAAE,EAFC,CAGZ;;AAHY,KAAD,CAJf;AASE,IAAA,QAAQ,EAAEI,CAAC,IAAIrB,WAAW,CAACqB,CAAC,CAACC,MAAF,CAASH,KAAV,CAT5B;AAUE,IAAA,WAAW,EAAC,gBAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADF,EAyCE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,CADF,CAJF,CADF;AAoDD","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function StoreRegistration() {\n  const [name, setName] = useState(\"\");\n  const [measurement, setMeasurement] = useState(\"\");\n  const [quantity, setQuantity] = useState(0)\n\n  const { register, errors, handleSubmit, getValues } = useForm();\n\n  const onSubmit = data => {\n    alert(\"recorder registered successfully \" + name);\n    axios\n      .post(`http://127.0.0.1:8000/recorder-registration/`, {\n        name: name,\n        measurement: measurement,\n        quantity: quantity\n      })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    window.location.reload(false);\n  };\n\n  return (\n    <div>\n      <center>\n        <h2>Recorder Registration</h2>\n      </center>\n      <div className=\"\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <input\n              type=\"text\"\n              name=\"name\"\n              ref={register({\n                required: true,\n                maxLength: 30,\n                minLength: { value: 5, message: \"Min length is 5\" }\n              })}\n              onChange={e => setName(e.target.value)}\n              placeholder=\"Enter Store Name\"\n            />\n          <input\n              type=\"text\"\n              name=\"measurement\"\n              ref={register({\n                required: true,\n                maxLength: 30,\n                // minLength: { value: 5, message: \"Min length is 5\" }\n              })}\n              onChange={e => setMeasurement(e.target.value)}\n              placeholder=\"Enter Measurement\"\n            />\n            <input\n              type=\"text\"\n              pattern=\"[0-9]*\"\n              name=\"quantity\"\n              ref={register({\n                required: true,\n                maxLength: 30,\n                // minLength: { value: 5, message: \"Min length is 5\" }\n              })}\n              onChange={e => setQuantity(e.target.value)}\n              placeholder=\"Enter Quantity\"\n            />\n            {/* <div style={{ color: \"red\" }}>\n              {Object.keys(errors).length > 0 && errors.password.message}\n            </div> */}\n          </div>\n\n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}