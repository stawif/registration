{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deadpool\\\\Desktop\\\\final\\\\registration\\\\frontend\\\\src\\\\components\\\\entry\\\\MachineWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nconst partyNamesFromApi = [];\nconst machineNamesFromApi = [];\nfetch(\"http://127.0.0.1:8000/list-of-machineparty/\").then(res => res.json()).then(out => {\n  partyListFunction(out);\n}).catch(err => {\n  throw err;\n});\nfetch(\"http://127.0.0.1:8000/list-of-machines/\").then(res => res.json()).then(out => {\n  machineListFunction(out);\n}).catch(err => {\n  throw err;\n}); //below function is used to store api data in a array\n\nfunction partyListFunction(data) {\n  data.map(item => partyNamesFromApi.push(item.name));\n}\n\nfunction machineListFunction(data) {\n  data.map(item => machineNamesFromApi.push(item.name));\n}\n\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myCallbackForSelectedParty = dataFromChild => {\n      this.state.selectedParty = dataFromChild;\n    };\n\n    this.myCallbackForSelectedMachine = dataFromChild => {\n      this.state.selectedMachine = dataFromChild;\n    };\n\n    this.state = {\n      date: null,\n      selectedMachine: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      dieselAmount: 0,\n      drillingFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    }; // Check existence of party name\n\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.checkmachine = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        machineNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\n        party: this.state.selectedParty,\n        machine: this.state.selectedMachine,\n        date: this.state.date,\n        drilling_feet: this.state.drillingFeet,\n        diesel_amount: this.state.dieselAmount,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      console.log(\"drilling feet : \" + typeof this.state.drillingFeet);\n      console.log(\"diesel feet : \" + typeof this.state.dieselAmount);\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Machine Party Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: partyNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedParty,\n      checkFromParent: this.state.checkparty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: machineNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedMachine,\n      placeholderfrom: \"Machine name\",\n      checkFromParent: this.state.checkmachine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\" //data-date=\"\"\n      ,\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.state.date = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"remark\",\n      placeholder: \"Remark\",\n      autoComplete: \"off\",\n      maxLength: \"30\" //minLength=\"5\"\n      ,\n      onChange: e => {\n        this.state.remark = e.target.value;\n      } //required\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"dieselAmount\",\n      placeholder: \"Diesel Amount\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.dieselAmount = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"drillingFeet\",\n      placeholder: \"Drilling Feet\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.drillingFeet = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/deadpool/Desktop/final/registration/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","axios","Autocomplete","partyNamesFromApi","machineNamesFromApi","fetch","then","res","json","out","partyListFunction","catch","err","machineListFunction","data","map","item","push","name","MachineWorkEntry","Component","constructor","props","myCallbackForSelectedParty","dataFromChild","state","selectedParty","myCallbackForSelectedMachine","selectedMachine","date","remark","dieselAmount","drillingFeet","responseMessage","buttonStatus","visibility","radioButtonStyle","float","checkparty","setState","showList","index","toLowerCase","forEach","checkmachine","onSubmit","e","post","party","machine","drilling_feet","diesel_amount","error","alert","response","request","_response","console","log","target","reset","preventDefault","getDate","curr","Date","setDate","toISOString","substr","render","partyExistMessage","value","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Autocomplete from \"./AutoComplete.jsx\";\r\n\r\nconst partyNamesFromApi = [];\r\nconst machineNamesFromApi = [];\r\n\r\nfetch(\"http://127.0.0.1:8000/list-of-machineparty/\")\r\n  .then(res => res.json())\r\n  .then(out => {\r\n    partyListFunction(out);\r\n  })\r\n  .catch(err => {\r\n    throw err;\r\n  });\r\n\r\nfetch(\"http://127.0.0.1:8000/list-of-machines/\")\r\n  .then(res => res.json())\r\n  .then(out => {\r\n    machineListFunction(out);\r\n  })\r\n  .catch(err => {\r\n    throw err;\r\n  });\r\n//below function is used to store api data in a array\r\nfunction partyListFunction(data) {\r\n  data.map(item => partyNamesFromApi.push(item.name));\r\n}\r\nfunction machineListFunction(data) {\r\n  data.map(item => machineNamesFromApi.push(item.name));\r\n}\r\n\r\nexport default class MachineWorkEntry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      date: null,\r\n      selectedMachine: \"\",\r\n      selectedParty: \"\",\r\n      remark: \"\",\r\n      dieselAmount: 0,\r\n      drillingFeet: 0,\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      radioButtonStyle: {\r\n        float: \"left\"\r\n      }\r\n    };\r\n\r\n    // Check existence of party name\r\n    this.state.checkparty = dataFromChild => {\r\n      try {\r\n        this.setState({\r\n          buttonStatus: {\r\n            visibility: \"hidden\"\r\n          }\r\n        });\r\n        const showList = (item, index) => {\r\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n            this.setState({\r\n              buttonStatus: {\r\n                visibility: \"visible\"\r\n              }\r\n            });\r\n          } else {\r\n          }\r\n        };\r\n        partyNamesFromApi.forEach(showList);\r\n      } \r\n      catch (err) {}\r\n    };\r\n\r\n    this.state.checkmachine = dataFromChild => {\r\n      try {\r\n        this.setState({\r\n          buttonStatus: {\r\n            visibility: \"hidden\"\r\n          }\r\n        });\r\n        const showList = (item, index) => {\r\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n            this.setState({\r\n              buttonStatus: {\r\n                visibility: \"visible\"\r\n              }\r\n            });\r\n          } else {\r\n          }\r\n        };\r\n        machineNamesFromApi.forEach(showList);\r\n      } catch (err) {}\r\n    };\r\n\r\n    this.state.onSubmit = e => {\r\n          axios.post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\r\n             party: this.state.selectedParty,\r\n             machine: this.state.selectedMachine,\r\n             date: this.state.date,\r\n             drilling_feet: this.state.drillingFeet,\r\n             diesel_amount: this.state.dieselAmount,\r\n             remark: this.state.remark          \r\n            })\r\n           .then(res => {\r\n             this.setState({\r\n               responseMessage: res.data\r\n             });\r\n           })\r\n           .catch(error => {\r\n             alert(error.response.request._response);\r\n           });\r\n      console.log(\"drilling feet : \"+typeof this.state.drillingFeet);\r\n      console.log(\"diesel feet : \"+typeof this.state.dieselAmount);     \r\n      e.target.reset();\r\n      e.preventDefault();\r\n    };\r\n\r\n    this.state.getDate = () => {\r\n      var curr = new Date();\r\n      curr.setDate(curr.getDate());\r\n      var date = curr.toISOString().substr(0, 10);\r\n      this.state.date = date;\r\n    };\r\n\r\n    this.state.getDate();\r\n  }\r\n\r\n  myCallbackForSelectedParty = dataFromChild => {\r\n    this.state.selectedParty = dataFromChild;\r\n  };\r\n  myCallbackForSelectedMachine = dataFromChild => {\r\n    this.state.selectedMachine = dataFromChild;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.state.onSubmit(e)}\r\n      >\r\n        <p className=\"headingViewPart\">Machine Party Registration</p>\r\n        <div className=\"pt-5\">\r\n          <Autocomplete\r\n            suggestions={partyNamesFromApi}\r\n            callbackFromParent={this.myCallbackForSelectedParty}\r\n            checkFromParent={this.state.checkparty}\r\n            placeholderfrom={\"Party name\"}\r\n          />\r\n\r\n          <p>{this.state.partyExistMessage}</p>\r\n          <br/>\r\n\r\n          <Autocomplete\r\n            suggestions={machineNamesFromApi}\r\n            callbackFromParent={this.myCallbackForSelectedMachine}\r\n            placeholderfrom={\"Machine name\"}\r\n            checkFromParent={this.state.checkmachine}\r\n          />\r\n\r\n          <br/>\r\n          <br/>\r\n\r\n          <input\r\n            type=\"date\"\r\n            //data-date=\"\"\r\n            data-date-format=\"YYYY-MM-DD\"\r\n            defaultValue={this.state.date}\r\n            name=\"date\"\r\n            onChange={e => {\r\n              this.state.date = e.target.value;\r\n            }}\r\n            required\r\n          />\r\n\r\n          <br/>\r\n          <br/>\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"mb-2\"\r\n            name=\"remark\"\r\n            placeholder=\"Remark\"\r\n            autoComplete=\"off\"\r\n            maxLength=\"30\"\r\n            //minLength=\"5\"\r\n            onChange={e => {\r\n              this.state.remark = e.target.value;\r\n            }}\r\n            //required\r\n          />\r\n\r\n          <br/>\r\n          <br/>\r\n\r\n          <input\r\n            type=\"number\"\r\n            className=\"mb-2\"\r\n            name=\"dieselAmount\"\r\n            placeholder=\"Diesel Amount\"\r\n            autoComplete=\"off\"\r\n            onChange={e => {\r\n              this.state.dieselAmount = parseInt(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n\r\n          <br/>\r\n          <br/>\r\n\r\n\r\n          <input\r\n            type=\"number\"\r\n            className=\"mb-2\"\r\n            name=\"drillingFeet\"\r\n            placeholder=\"Drilling Feet\"\r\n            autoComplete=\"off\"\r\n            onChange={e => {\r\n              this.state.drillingFeet = parseInt(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n        <p>{this.state.responseMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-dark\"\r\n          style={this.state.buttonStatus}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}