{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/VehicleWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputRateField from \"../modular/InputRateField.js\";\nexport default class VehicleWorkEntry extends React.Component {\n  //fetching VehicleParty and Vehicles from database\n  // Check existence of party name\n  //Check Existance of vehicle\n  //Form Handler Function\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\");\n        const jsonPartyList = await responsePartyList.json();\n        jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n        const responseVehicleList = await fetch(\"http://127.0.0.1:8000/list-of-vehicles/\");\n        const jsonVehicleList = await responseVehicleList.json();\n        jsonVehicleList.map(item => this.state.vehicleNamesFromApi.push(item.name));\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.checkvehicle = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.vehicleNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n        party: this.state.selectedParty,\n        vehicle: this.state.selectedVehicle,\n        date: this.state.date,\n        five_feet: this.state.fiveFeet,\n        two_half_feet: this.state.twoHalfFeet,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.handleMultipleVehicle = async e => {\n      await this.setState({\n        selectedVehicle: Array.from(e.target.selectedOptions, item => item.value)\n      });\n    };\n\n    this.myCallbackForSelectedParty = dataFromChild => {\n      this.state.selectedParty = dataFromChild;\n    };\n\n    this.myCallbackForSelectedVehicle = dataFromChild => {\n      this.state.selectedVehicle = dataFromChild;\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      vehicleNamesFromApi: [],\n      date: null,\n      selectedVehicle: [],\n      selectedParty: \"\",\n      remark: \"\",\n      fiveFeet: 0,\n      twoHalfFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    }; //fetching VehicleParty and Vehicles from database\n\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.partyNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n      fetch(\"http://127.0.0.1:8000/list-of-vehicles/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.vehicleNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n    }; //default call for fetching data\n\n\n    this.state.fetchProduct(); // Check existence of party name\n\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    }; //Check Existance of vehicle\n\n\n    this.state.checkvehicle = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.vehicleNamesFromApi.forEach(showList);\n      } catch (err) {}\n    }; //Form Handler Function\n\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n        party: this.state.selectedParty,\n        vehicle: this.state.selectedVehicle,\n        date: this.state.date,\n        five_feet: this.state.fiveFeet,\n        two_half_feet: this.state.twoHalfFeet,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    }; //This is a Function call to check multiple selected vehicles\n\n\n    this.handleMultipleVehicle = this.handleMultipleVehicle.bind(this);\n  } //This Function Handles multiple vehicle to push them in an array to Pass to DataBase\n\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Vehicle Work Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedParty,\n      checkFromParent: this.state.checkparty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"vehicles\",\n      onChange: e => this.handleMultipleVehicle(e),\n      multiple: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, this.state.vehicleNamesFromApi.map(item => React.createElement(\"option\", {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, item))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(InputRemarkField, {\n      callbackFromParent: dataFromChild => {\n        this.state.remark = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.fiveFeet = dataFromChild;\n      },\n      placeholderParent: \"5 Feet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.twoHalfFeet = dataFromChild;\n      },\n      placeholderParent: \"2.5 Feet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/VehicleWorkEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputRemarkField","InputRateField","VehicleWorkEntry","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","map","item","state","partyNamesFromApi","push","name","responseVehicleList","jsonVehicleList","vehicleNamesFromApi","toggleLoadStatus","checkparty","dataFromChild","setState","responseMessage","buttonStatus","visibility","showList","index","toLowerCase","forEach","err","checkvehicle","onSubmit","e","post","party","selectedParty","vehicle","selectedVehicle","date","five_feet","fiveFeet","two_half_feet","twoHalfFeet","remark","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","handleMultipleVehicle","Array","from","selectedOptions","value","myCallbackForSelectedParty","myCallbackForSelectedVehicle","radioButtonStyle","float","out","bind","render","partyExistMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,eAAe,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAC5D;AAuBA;AAuBA;AAuBA;AAwBAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA5FnBC,YA4FmB,GA5FJ,YAAY;AACzB,UAAI;AACF,cAAMC,iBAAiB,GAAG,MAAMC,KAAK,CACnC,6CADmC,CAArC;AAGA,cAAMC,aAAa,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,EAA5B;AAEAD,QAAAA,aAAa,CAACE,GAAd,CAAkBC,IAAI,IAAI,KAAKC,KAAL,CAAWC,iBAAX,CAA6BC,IAA7B,CAAkCH,IAAI,CAACI,IAAvC,CAA1B;AAEA,cAAMC,mBAAmB,GAAG,MAAMT,KAAK,CACrC,yCADqC,CAAvC;AAGA,cAAMU,eAAe,GAAG,MAAMD,mBAAmB,CAACP,IAApB,EAA9B;AAEAQ,QAAAA,eAAe,CAACP,GAAhB,CAAoBC,IAAI,IACtB,KAAKC,KAAL,CAAWM,mBAAX,CAA+BJ,IAA/B,CAAoCH,IAAI,CAACI,IAAzC,CADF;AAGD,OAhBD,CAgBE,MAAM;AACN,aAAKI,gBAAL;AACD;AACF,KAwEkB;;AAAA,SArEnBC,UAqEmB,GArENC,aAAa,IAAI;AAC5B,UAAI;AACF,aAAKC,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAE,EADL;AAEZC,UAAAA,YAAY,EAAE;AACZC,YAAAA,UAAU,EAAE;AADA;AAFF,SAAd;;AAMA,cAAMC,QAAQ,GAAG,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AAChC,cAAIN,aAAa,CAACO,WAAd,OAAgCjB,IAAI,CAACiB,WAAL,EAApC,EAAwD;AACtD,iBAAKN,QAAL,CAAc;AACZE,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AADF,aAAd;AAKD,WAND,MAMO,CACN;AACF,SATD;;AAUA,aAAKb,KAAL,CAAWC,iBAAX,CAA6BgB,OAA7B,CAAqCH,QAArC;AACD,OAlBD,CAkBE,OAAOI,GAAP,EAAY,CAAE;AACjB,KAiDkB;;AAAA,SA9CnBC,YA8CmB,GA9CJV,aAAa,IAAI;AAC9B,UAAI;AACF,aAAKC,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAE,EADL;AAEZC,UAAAA,YAAY,EAAE;AACZC,YAAAA,UAAU,EAAE;AADA;AAFF,SAAd;;AAMA,cAAMC,QAAQ,GAAG,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AAChC,cAAIN,aAAa,CAACO,WAAd,OAAgCjB,IAAI,CAACiB,WAAL,EAApC,EAAwD;AACtD,iBAAKN,QAAL,CAAc;AACZE,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AADF,aAAd;AAKD,WAND,MAMO,CACN;AACF,SATD;;AAUA,aAAKb,KAAL,CAAWM,mBAAX,CAA+BW,OAA/B,CAAuCH,QAAvC;AACD,OAlBD,CAkBE,OAAOI,GAAP,EAAY,CAAE;AACjB,KA0BkB;;AAAA,SAvBnBE,QAuBmB,GAvBRC,CAAC,IAAI;AACdrC,MAAAA,KAAK,CACFsC,IADH,CACQ,gDADR,EAC0D;AACtDC,QAAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWwB,aADoC;AAEtDC,QAAAA,OAAO,EAAE,KAAKzB,KAAL,CAAW0B,eAFkC;AAGtDC,QAAAA,IAAI,EAAE,KAAK3B,KAAL,CAAW2B,IAHqC;AAItDC,QAAAA,SAAS,EAAE,KAAK5B,KAAL,CAAW6B,QAJgC;AAKtDC,QAAAA,aAAa,EAAE,KAAK9B,KAAL,CAAW+B,WAL4B;AAMtDC,QAAAA,MAAM,EAAE,KAAKhC,KAAL,CAAWgC;AANmC,OAD1D,EASGC,IATH,CASQC,GAAG,IAAI;AACX,aAAKxB,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAEuB,GAAG,CAACC;AADT,SAAd;AAGD,OAbH,EAcGC,KAdH,CAcSC,KAAK,IAAI;AACdC,QAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,SAAxB,CAAL;AACD,OAhBH;AAkBApB,MAAAA,CAAC,CAACqB,MAAF,CAASC,KAAT;AACAtB,MAAAA,CAAC,CAACuB,cAAF;AACD,KAEkB;;AAAA,SAwHnBC,qBAxHmB,GAwHK,MAAMxB,CAAN,IAAW;AACjC,YAAM,KAAKX,QAAL,CAAc;AAClBgB,QAAAA,eAAe,EAAEoB,KAAK,CAACC,IAAN,CAAW1B,CAAC,CAACqB,MAAF,CAASM,eAApB,EAAqCjD,IAAI,IAAIA,IAAI,CAACkD,KAAlD;AADC,OAAd,CAAN;AAGD,KA5HkB;;AAAA,SA+HnBC,0BA/HmB,GA+HUzC,aAAa,IAAI;AAC5C,WAAKT,KAAL,CAAWwB,aAAX,GAA2Bf,aAA3B;AACD,KAjIkB;;AAAA,SAoInB0C,4BApImB,GAoIY1C,aAAa,IAAI;AAC9C,WAAKT,KAAL,CAAW0B,eAAX,GAA6BjB,aAA7B;AACD,KAtIkB;;AAGjB,SAAKT,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,EADR;AAEXK,MAAAA,mBAAmB,EAAE,EAFV;AAGXqB,MAAAA,IAAI,EAAE,IAHK;AAIXD,MAAAA,eAAe,EAAE,EAJN;AAKXF,MAAAA,aAAa,EAAE,EALJ;AAMXQ,MAAAA,MAAM,EAAE,EANG;AAOXH,MAAAA,QAAQ,EAAE,CAPC;AAQXE,MAAAA,WAAW,EAAE,CARF;AASXpB,MAAAA,eAAe,EAAE,EATN;AAUXC,MAAAA,YAAY,EAAE;AACZC,QAAAA,UAAU,EAAE;AADA,OAVH;AAaXuC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,KAAK,EAAE;AADS;AAbP,KAAb,CAHiB,CAqBjB;;AACA,SAAKrD,KAAL,CAAWP,YAAX,GAA0B,YAAY;AACpCE,MAAAA,KAAK,CAAC,6CAAD,CAAL,CACGsC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACrC,IAAJ,EADf,EAEGoC,IAFH,CAEQqB,GAAG,IAAI;AACXA,QAAAA,GAAG,CAACxD,GAAJ,CAAQC,IAAI,IAAI,KAAKC,KAAL,CAAWC,iBAAX,CAA6BC,IAA7B,CAAkCH,IAAI,CAACI,IAAvC,CAAhB;AACD,OAJH,EAKGiC,KALH,CAKSlB,GAAG,IAAI;AACZ,cAAMA,GAAN;AACD,OAPH;AASAvB,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACGsC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACrC,IAAJ,EADf,EAEGoC,IAFH,CAEQqB,GAAG,IAAI;AACXA,QAAAA,GAAG,CAACxD,GAAJ,CAAQC,IAAI,IAAI,KAAKC,KAAL,CAAWM,mBAAX,CAA+BJ,IAA/B,CAAoCH,IAAI,CAACI,IAAzC,CAAhB;AACD,OAJH,EAKGiC,KALH,CAKSlB,GAAG,IAAI;AACZ,cAAMA,GAAN;AACD,OAPH;AAQD,KAlBD,CAtBiB,CA0CjB;;;AACA,SAAKlB,KAAL,CAAWP,YAAX,GA3CiB,CA6CjB;;AACA,SAAKO,KAAL,CAAWQ,UAAX,GAAwBC,aAAa,IAAI;AACvC,UAAI;AACF,aAAKC,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAE,EADL;AAEZC,UAAAA,YAAY,EAAE;AACZC,YAAAA,UAAU,EAAE;AADA;AAFF,SAAd;;AAMA,cAAMC,QAAQ,GAAG,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AAChC,cAAIN,aAAa,CAACO,WAAd,OAAgCjB,IAAI,CAACiB,WAAL,EAApC,EAAwD;AACtD,iBAAKN,QAAL,CAAc;AACZE,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AADF,aAAd;AAKD,WAND,MAMO,CACN;AACF,SATD;;AAUA,aAAKb,KAAL,CAAWC,iBAAX,CAA6BgB,OAA7B,CAAqCH,QAArC;AACD,OAlBD,CAkBE,OAAOI,GAAP,EAAY,CAAE;AACjB,KApBD,CA9CiB,CAoEjB;;;AACA,SAAKlB,KAAL,CAAWmB,YAAX,GAA0BV,aAAa,IAAI;AACzC,UAAI;AACF,aAAKC,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAE,EADL;AAEZC,UAAAA,YAAY,EAAE;AACZC,YAAAA,UAAU,EAAE;AADA;AAFF,SAAd;;AAMA,cAAMC,QAAQ,GAAG,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AAChC,cAAIN,aAAa,CAACO,WAAd,OAAgCjB,IAAI,CAACiB,WAAL,EAApC,EAAwD;AACtD,iBAAKN,QAAL,CAAc;AACZE,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AADF,aAAd;AAKD,WAND,MAMO,CACN;AACF,SATD;;AAUA,aAAKb,KAAL,CAAWM,mBAAX,CAA+BW,OAA/B,CAAuCH,QAAvC;AACD,OAlBD,CAkBE,OAAOI,GAAP,EAAY,CAAE;AACjB,KApBD,CArEiB,CA2FjB;;;AACA,SAAKlB,KAAL,CAAWoB,QAAX,GAAsBC,CAAC,IAAI;AACzBrC,MAAAA,KAAK,CACFsC,IADH,CACQ,gDADR,EAC0D;AACtDC,QAAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWwB,aADoC;AAEtDC,QAAAA,OAAO,EAAE,KAAKzB,KAAL,CAAW0B,eAFkC;AAGtDC,QAAAA,IAAI,EAAE,KAAK3B,KAAL,CAAW2B,IAHqC;AAItDC,QAAAA,SAAS,EAAE,KAAK5B,KAAL,CAAW6B,QAJgC;AAKtDC,QAAAA,aAAa,EAAE,KAAK9B,KAAL,CAAW+B,WAL4B;AAMtDC,QAAAA,MAAM,EAAE,KAAKhC,KAAL,CAAWgC;AANmC,OAD1D,EASGC,IATH,CASQC,GAAG,IAAI;AACX,aAAKxB,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAEuB,GAAG,CAACC;AADT,SAAd;AAGD,OAbH,EAcGC,KAdH,CAcSC,KAAK,IAAI;AACdC,QAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,SAAxB,CAAL;AACD,OAhBH;AAkBApB,MAAAA,CAAC,CAACqB,MAAF,CAASC,KAAT;AACAtB,MAAAA,CAAC,CAACuB,cAAF;AACD,KArBD,CA5FiB,CAmHjB;;;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BU,IAA3B,CAAgC,IAAhC,CAA7B;AACD,GAnN2D,CAqN5D;;;AAiBAC,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,QAAQ,EAAEnC,CAAC,IAAI,KAAKrB,KAAL,CAAWoB,QAAX,CAAoBC,CAApB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,EAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWC,iBAD1B;AAEE,MAAA,kBAAkB,EAAE,KAAKiD,0BAF3B;AAGE,MAAA,eAAe,EAAE,KAAKlD,KAAL,CAAWQ,UAH9B;AAIE,MAAA,eAAe,EAAE,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKR,KAAL,CAAWyD,iBAAf,CAPF,EAUI;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAEpC,CAAC,IAAI,KAAKwB,qBAAL,CAA2BxB,CAA3B,CAHjB;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKrB,KAAL,CAAWM,mBAAX,CAA+BR,GAA/B,CAAmCC,IAAI,IACtC;AAAQ,MAAA,GAAG,EAAEA,IAAb;AAAmB,MAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IADH,CADD,CAPH,CAVJ,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA2BE,oBAAC,cAAD;AACE,MAAA,kBAAkB,EAAEU,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW2B,IAAX,GAAkBlB,aAAlB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,EAoCE,oBAAC,gBAAD;AACE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAWgC,MAAX,GAAoBvB,aAApB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,EAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,EA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CF,EA2CE,oBAAC,cAAD;AACE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW6B,QAAX,GAAsBpB,aAAtB;AACD,OAHH;AAIE,MAAA,iBAAiB,EAAE,QAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDF,EAmDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnDF,EAoDE,oBAAC,cAAD;AACE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW+B,WAAX,GAAyBtB,aAAzB;AACD,OAHH;AAIE,MAAA,iBAAiB,EAAE,UAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApDF,CALF,EAgEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWW,eAAf,CAhEF,EAiEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjEF,CADF;AA2ED;;AAlT2D","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputRateField from \"../modular/InputRateField.js\";\n\nexport default class VehicleWorkEntry extends React.Component {\n  //fetching VehicleParty and Vehicles from database\n  fetchProduct = async () => {\n    try {\n      const responsePartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-vehicleparty/\"\n      );\n      const jsonPartyList = await responsePartyList.json();\n\n      jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n\n      const responseVehicleList = await fetch(\n        \"http://127.0.0.1:8000/list-of-vehicles/\"\n      );\n      const jsonVehicleList = await responseVehicleList.json();\n\n      jsonVehicleList.map(item =>\n        this.state.vehicleNamesFromApi.push(item.name)\n      );\n    } catch {\n      this.toggleLoadStatus();\n    }\n  };\n\n  // Check existence of party name\n  checkparty = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.partyNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  //Check Existance of vehicle\n  checkvehicle = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.vehicleNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  //Form Handler Function\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n        party: this.state.selectedParty,\n        vehicle: this.state.selectedVehicle,\n        date: this.state.date,\n        five_feet: this.state.fiveFeet,\n        two_half_feet: this.state.twoHalfFeet,\n        remark: this.state.remark\n      })\n      .then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        alert(error.response.request._response);\n      });\n\n    e.target.reset();\n    e.preventDefault();\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyNamesFromApi: [],\n      vehicleNamesFromApi: [],\n      date: null,\n      selectedVehicle: [],\n      selectedParty: \"\",\n      remark: \"\",\n      fiveFeet: 0,\n      twoHalfFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n    //fetching VehicleParty and Vehicles from database\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\")\n        .then(res => res.json())\n        .then(out => {\n          out.map(item => this.state.partyNamesFromApi.push(item.name));\n        })\n        .catch(err => {\n          throw err;\n        });\n\n      fetch(\"http://127.0.0.1:8000/list-of-vehicles/\")\n        .then(res => res.json())\n        .then(out => {\n          out.map(item => this.state.vehicleNamesFromApi.push(item.name));\n        })\n        .catch(err => {\n          throw err;\n        });\n    };\n\n    //default call for fetching data\n    this.state.fetchProduct();\n\n    // Check existence of party name\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    //Check Existance of vehicle\n    this.state.checkvehicle = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.vehicleNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    //Form Handler Function\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n          party: this.state.selectedParty,\n          vehicle: this.state.selectedVehicle,\n          date: this.state.date,\n          five_feet: this.state.fiveFeet,\n          two_half_feet: this.state.twoHalfFeet,\n          remark: this.state.remark\n        })\n        .then(res => {\n          this.setState({\n            responseMessage: res.data\n          });\n        })\n        .catch(error => {\n          alert(error.response.request._response);\n        });\n\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    //This is a Function call to check multiple selected vehicles\n    this.handleMultipleVehicle = this.handleMultipleVehicle.bind(this);\n  }\n\n  //This Function Handles multiple vehicle to push them in an array to Pass to DataBase\n  handleMultipleVehicle = async e => {\n    await this.setState({\n      selectedVehicle: Array.from(e.target.selectedOptions, item => item.value)\n    });\n  };\n\n  //This Function is called to set Selected Party which is coming from AutoSuggestion\n  myCallbackForSelectedParty = dataFromChild => {\n    this.state.selectedParty = dataFromChild;\n  };\n\n  //This Function is called to set Selected Vehicle which is coming from AutoSuggestion\n  myCallbackForSelectedVehicle = dataFromChild => {\n    this.state.selectedVehicle = dataFromChild;\n  };\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Vehicle Work Entry</p>\n        <div className=\"pt-5\">\n          <Autocomplete\n            suggestions={this.state.partyNamesFromApi}\n            callbackFromParent={this.myCallbackForSelectedParty}\n            checkFromParent={this.state.checkparty}\n            placeholderfrom={\"Party name\"}\n          />\n          <p>{this.state.partyExistMessage}</p>\n\n          {\n            <select\n              className=\"form-control\"\n              name=\"vehicles\"\n              onChange={e => this.handleMultipleVehicle(e)}\n              multiple\n              required\n            >\n              {this.state.vehicleNamesFromApi.map(item => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n          }\n\n          <br />\n\n          <InputDateField\n            callbackFromParent={dataFromChild => {\n              this.state.date = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n\n          <InputRemarkField\n            callbackFromParent={dataFromChild => {\n              this.state.remark = dataFromChild;\n            }}\n          />\n          <br />\n          <br />\n          <InputRateField\n            callbackFromParent={dataFromChild => {\n              this.state.fiveFeet = dataFromChild;\n            }}\n            placeholderParent={\"5 Feet\"}\n          />\n\n          <br />\n          <br />\n          <InputRateField\n            callbackFromParent={dataFromChild => {\n              this.state.twoHalfFeet = dataFromChild;\n            }}\n            placeholderParent={\"2.5 Feet\"}\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}