{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/RecorderRegistration.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nexport default function RecorderRegistration() {\n  const [recordername, userInput] = useState(\"\");\n  const [password, userPassword] = useState(\"\");\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    alert(\"recorder registered successfully \" + recordername);\n    axios.post(`http://127.0.0.1:8000/recorder-registration/`, {\n      username: recordername,\n      password: password\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n    window.location.reload(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Recorder Registration\")), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"recorderName\",\n    ref: register({\n      required: true,\n      maxLength: 30,\n      minLength: {\n        value: 5,\n        message: \"Min length is 5\"\n      }\n    }),\n    onChange: e => userInput(e.target.value),\n    placeholder: \"Enter Recorder Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    ref: register({\n      required: true,\n      maxLength: 30,\n      minLength: {\n        value: 8,\n        message: \"Min length is 8\",\n        pattern: /(?=.*[0-9])/\n      }\n    }),\n    onChange: e => userPassword(e.target.value),\n    placeholder: \"Enter Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, Object.keys(errors).length > 0 && errors.password.message)), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/RecorderRegistration.js"],"names":["React","useState","axios","useForm","RecorderRegistration","recordername","userInput","password","userPassword","register","errors","handleSubmit","onSubmit","data","alert","post","username","then","res","console","log","window","location","reload","required","maxLength","minLength","value","message","e","target","pattern","color","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function RecorderRegistration() {\n  const [recordername, userInput] = useState(\"\");\n  const [password, userPassword] = useState(\"\");\n\n  const { register, errors, handleSubmit } = useForm();\n\n  const onSubmit = data => {\n    alert(\"recorder registered successfully \" + recordername);\n    axios\n      .post(`http://127.0.0.1:8000/recorder-registration/`, {\n        username: recordername,\n        password: password\n      })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    window.location.reload(false);\n  };\n\n  return (\n    <div>\n      <center>\n        <h2>Recorder Registration</h2>\n      </center>\n      <div className=\"\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <input\n              type=\"text\"\n              name=\"recorderName\"\n              ref={register({\n                required: true,\n                maxLength: 30,\n                minLength: { value: 5, message: \"Min length is 5\" }\n              })}\n              onChange={e => userInput(e.target.value)}\n              placeholder=\"Enter Recorder Name\"\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              ref={register({\n                required: true,\n                maxLength: 30,\n                minLength: {\n                  value: 8,\n                  message: \"Min length is 8\",\n                  pattern: /(?=.*[0-9])/\n                }\n              })}\n              onChange={e => userPassword(e.target.value)}\n              placeholder=\"Enter Password\"\n            />\n            <div style={{ color: \"red\" }}>\n              {Object.keys(errors).length > 0 && errors.password.message}\n            </div>\n          </div>\n\n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}