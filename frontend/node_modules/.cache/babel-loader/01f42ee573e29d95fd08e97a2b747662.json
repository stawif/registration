{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deadpool\\\\Desktop\\\\final\\\\registration\\\\frontend\\\\src\\\\components\\\\registration\\\\WorkerRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class WorkerRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      entryDate: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: 'visible'\n      }\n    }; // Fetch worker list from server\n\n    this.state.fetchProduct = async () => {\n      const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\n      const jsonWorkerList = await responseWorkerList.json();\n      this.state.workerList = jsonWorkerList;\n    };\n\n    this.state.fetchProduct(); // Check existence of worker name \n\n    this.state.checkworker = () => {\n      try {\n        this.setState({\n          workerExistMessage: \"\",\n          buttonStatus: {\n            visibility: 'visible'\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              workerExistMessage: \"* This worker name is already exist!!!\",\n              buttonStatus: {\n                visibility: 'hidden'\n              }\n            });\n          } else {}\n        };\n\n        this.state.workerList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post('http://127.0.0.1:8000/worker-registration/', {\n        name: this.state.workerName,\n        contact: this.state.workerContact,\n        village: this.state.workerVillage,\n        salary: this.state.workerSalary,\n        advance: this.state.advance,\n        date: this.state.entryDate\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        console.log(error.response.request._response);\n      });\n      console.log(this.state.workerName);\n      console.log(this.state.workerContact);\n      console.log(this.state.workerVillage);\n      console.log(this.state.workerSalary);\n      console.log(this.state.entryDate);\n      console.log(this.state.advance);\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Machine Worker Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerName\",\n      placeholder: \"Worker Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.workerName = e.target.value;\n        this.state.checkworker();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.workerExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerContact\",\n      placeholder: \"Worker Contact\",\n      autoComplete: \"off\",\n      maxLength: \"10\",\n      minLength: \"10\",\n      onChange: e => {\n        this.state.workerContact = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerVillage\",\n      placeholder: \"Worker Village\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.workerVillage = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerSalary\",\n      placeholder: \"Worker Salary\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.workerSalary = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\",\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.state.entryDate = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerAdvance\",\n      placeholder: \"Worker Advance\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.advance = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/deadpool/Desktop/final/registration/frontend/src/components/registration/WorkerRegistration.js"],"names":["React","axios","WorkerRegistration","Component","constructor","props","state","workerName","workerContact","workerVillage","workerSalary","advance","entryDate","workerList","workerExistMessage","responseMessage","buttonStatus","visibility","fetchProduct","responseWorkerList","fetch","jsonWorkerList","json","checkworker","setState","showList","item","index","toLowerCase","name","forEach","err","onSubmit","e","post","contact","village","salary","date","then","res","data","catch","error","console","log","response","request","_response","target","reset","preventDefault","render","value","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class WorkerRegistration extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state={\r\n      workerName: \"\",\r\n      workerContact: \"\",\r\n      workerVillage: \"\",\r\n      workerSalary: 0,\r\n      advance: 0,\r\n      entryDate: null,\r\n      workerList: {},\r\n      workerExistMessage: \"\",\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n          visibility: 'visible'\r\n      }\r\n    }\r\n\r\n    // Fetch worker list from server\r\n    this.state.fetchProduct = async () =>{\r\n      const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\r\n      const jsonWorkerList = await responseWorkerList.json();\r\n      this.state.workerList = jsonWorkerList;\r\n    }\r\n    \r\n    \r\n    this.state.fetchProduct(); \r\n\r\n    // Check existence of worker name \r\n    this.state.checkworker = () => {\r\n      try {\r\n        this.setState({\r\n             workerExistMessage :\"\",\r\n             buttonStatus: {\r\n                 visibility: 'visible'           \r\n             }\r\n            });\r\n        const showList = (item, index) => {\r\n            if (this.state.workerName.toLowerCase() === item.name.toLowerCase()){\r\n              this.setState({\r\n                 workerExistMessage :\"* This worker name is already exist!!!\",\r\n                    buttonStatus: {\r\n                  visibility: 'hidden'                 \r\n                 }\r\n              });\r\n            }\r\n            else{}\r\n        };\r\n        this.state.workerList.forEach(showList);\r\n      } \r\n      catch (err) {}\r\n    }\r\n\r\n    this.state.onSubmit =(e) => {\r\n        axios.post('http://127.0.0.1:8000/worker-registration/', \r\n        {\r\n          name: this.state.workerName,\r\n          contact: this.state.workerContact,\r\n          village: this.state.workerVillage,\r\n          salary: this.state.workerSalary,\r\n          advance: this.state.advance,\r\n          date: this.state.entryDate\r\n        }\r\n        ).then(res => {\r\n          this.state.fetchProduct();\r\n          this.setState({\r\n            responseMessage: res.data\r\n          });         \r\n        }\r\n        ).catch(error => {\r\n          console.log( error.response.request._response )\r\n        });\r\n      console.log(this.state.workerName);  \r\n      console.log(this.state.workerContact);  \r\n      console.log(this.state.workerVillage);  \r\n      console.log(this.state.workerSalary);  \r\n      console.log(this.state.entryDate);  \r\n      console.log(this.state.advance);  \r\n      e.target.reset();\r\n      e.preventDefault();\r\n    };\r\n  \r\n  }\r\n \r\n  render(){\r\n    return (\r\n\t\t<form className=\"form-container form-group\" onSubmit={ e => this.state.onSubmit(e) }>\r\n         <p className=\"headingViewPart\">Machine Worker Registration</p>\r\n\t\t<div className=\"pt-5\">\r\n\r\n        <input \r\n            type=\"text\" \r\n            className=\"mb-2\" \r\n            name=\"workerName\" \r\n            placeholder=\"Worker Name\" \r\n            autoComplete=\"off\"\r\n            maxLength = \"30\"\r\n            minLength = \"5\"\r\n            onChange={\r\n                e => {\r\n                    this.state.workerName = e.target.value;\r\n                    this.state.checkworker();\r\n                }\r\n            } \r\n            required\r\n        />\r\n        \r\n        <p>{this.state.workerExistMessage}</p>\r\n        <br/>  \r\n\r\n        <input \r\n            type=\"number\" \r\n            className=\"mb-2\" \r\n            name=\"workerContact\" \r\n            placeholder=\"Worker Contact\" \r\n            autoComplete=\"off\"\r\n            maxLength = \"10\"\r\n            minLength = \"10\"\r\n            onChange={\r\n                e => {\r\n                    this.state.workerContact = parseInt(e.target.value);\r\n                }\r\n            } \r\n            required\r\n        />\r\n\r\n        <br/>\r\n        <br/>\r\n\r\n        <input \r\n            type=\"text\" \r\n            className=\"mb-2\" \r\n            name=\"workerVillage\" \r\n            placeholder=\"Worker Village\" \r\n            autoComplete=\"off\"\r\n            maxLength = \"30\"\r\n            minLength = \"5\"\r\n            onChange={\r\n                e => {\r\n                    this.state.workerVillage = e.target.value;\r\n                }\r\n            } \r\n            required\r\n        />\r\n        \r\n        <br/>  \r\n        <br/>        \r\n\r\n        <input \r\n            type=\"number\" \r\n            className=\"mb-2\" \r\n            name=\"workerSalary\" \r\n            placeholder=\"Worker Salary\" \r\n            autoComplete=\"off\"\r\n            onChange={\r\n                e => {\r\n                    this.state.workerSalary = parseInt(e.target.value);\r\n                }\r\n            } \r\n            required\r\n        />\r\n\r\n          <br/>\r\n          <br/>\r\n\r\n          <input\r\n            type=\"date\"\r\n            data-date-format=\"YYYY-MM-DD\"\r\n            defaultValue={this.state.date}\r\n            name=\"date\"\r\n            onChange={e => {\r\n              this.state.entryDate = e.target.value;\r\n            }}\r\n            required\r\n          />\r\n        \r\n        <br/>  \r\n        <br/>        \r\n\r\n        <input \r\n            type=\"number\" \r\n            className=\"mb-2\" \r\n            name=\"workerAdvance\" \r\n            placeholder=\"Worker Advance\" \r\n            autoComplete=\"off\"\r\n            onChange={\r\n                e => {\r\n                    this.state.advance = parseInt(e.target.value);\r\n                }\r\n            } \r\n            required\r\n        />\r\n\r\n    </div>    \r\n    <p>{this.state.responseMessage}</p>\r\n    <button type=\"submit\" className=\"btn btn-outline-dark\" style={this.state.buttonStatus} >Save</button>\r\n    </form>  \r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}