{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      partyName: \"\",\n      //partyContact: \"\",\n      //partyVillage: \"\",\n      remark: \"\",\n      workDate: 0,\n      //partyId: 0,\n      drillingFt: 0,\n      dieselAmount: 0,\n      tech: \"select\",\n      partyList: {},\n      machineList: {},\n      partyExistMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    }; // Fetch party list from server\n\n    this.state.fetchProduct = async () => {\n      const responsepartyList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n      const jsonpartyList = await responsepartyList.json();\n      this.state.partyList = jsonpartyList;\n      const responsemachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n      const jsonmachineList = await responsemachineList.json();\n      this.state.machineList = jsonmachineList;\n    };\n\n    this.state.fetchProduct();\n    console.log(this.state.machineList);\n    console.log(this.state.partyList + \" ashok\");\n    console.log(this.state.tech); // Check existence of party name\n\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/machine-party-registration/\", {\n        name: this.state.partyName,\n        contact: this.state.partyContact,\n        village: this.state.partyVillage\n      }).then(res => {\n        this.state.fetchProduct();\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Machine Work Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"machineName\",\n      placeholder: \"Machine Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyName = e.target.value;\n        this.state.checkparty();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"partyContact\",\n      placeholder: \"Party Contact\",\n      autoComplete: \"off\",\n      maxLength: \"10\",\n      minLength: \"10\",\n      onChange: e => {\n        this.state.partyContact = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: e => this.setState({\n        tech: e.target.value\n      }),\n      value: this.state.tech,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Select a technology\"), React.createElement(\"option\", {\n      value: \"Angular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Angular\"), React.createElement(\"option\", {\n      value: \"Bootstrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Bootstrap\"), React.createElement(\"option\", {\n      value: \"React\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"React\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"partyVillage\",\n      placeholder: \"Party Village\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyVillage = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","axios","MachineWorkEntry","Component","constructor","props","state","partyName","remark","workDate","drillingFt","dieselAmount","tech","partyList","machineList","partyExistMessage","buttonStatus","visibility","radioButtonStyle","float","fetchProduct","responsepartyList","fetch","jsonpartyList","json","responsemachineList","jsonmachineList","console","log","checkparty","setState","showList","item","index","toLowerCase","name","forEach","err","onSubmit","e","post","contact","partyContact","village","partyVillage","then","res","catch","error","alert","response","request","_response","target","reset","preventDefault","render","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAC5DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEX;AACA;AACAC,MAAAA,MAAM,EAAE,EAJG;AAKXC,MAAAA,QAAQ,EAAE,CALC;AAMX;AACAC,MAAAA,UAAU,EAAE,CAPD;AAQXC,MAAAA,YAAY,EAAE,CARH;AASXC,MAAAA,IAAI,EAAE,QATK;AAWXC,MAAAA,SAAS,EAAE,EAXA;AAYXC,MAAAA,WAAW,EAAE,EAZF;AAcXC,MAAAA,iBAAiB,EAAE,EAdR;AAeXC,MAAAA,YAAY,EAAE;AACZC,QAAAA,UAAU,EAAE;AADA,OAfH;AAkBXC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,KAAK,EAAE;AADS;AAlBP,KAAb,CAHiB,CA0BjB;;AACA,SAAKb,KAAL,CAAWc,YAAX,GAA0B,YAAY;AACpC,YAAMC,iBAAiB,GAAG,MAAMC,KAAK,CACnC,6CADmC,CAArC;AAGA,YAAMC,aAAa,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,EAA5B;AACA,WAAKlB,KAAL,CAAWO,SAAX,GAAuBU,aAAvB;AAEA,YAAME,mBAAmB,GAAG,MAAMH,KAAK,CACrC,yCADqC,CAAvC;AAGA,YAAMI,eAAe,GAAG,MAAMD,mBAAmB,CAACD,IAApB,EAA9B;AACA,WAAKlB,KAAL,CAAWQ,WAAX,GAAyBY,eAAzB;AACD,KAZD;;AAcA,SAAKpB,KAAL,CAAWc,YAAX;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWQ,WAAvB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWO,SAAX,GAAuB,QAAnC;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWM,IAAvB,EA7CiB,CA8CjB;;AACA,SAAKN,KAAL,CAAWuB,UAAX,GAAwB,MAAM;AAC5B,UAAI;AACF,aAAKC,QAAL,CAAc;AACZf,UAAAA,iBAAiB,EAAE,EADP;AAEZC,UAAAA,YAAY,EAAE;AACZC,YAAAA,UAAU,EAAE;AADA;AAFF,SAAd;;AAMA,cAAMc,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,cAAI,KAAK3B,KAAL,CAAWC,SAAX,CAAqB2B,WAArB,OAAuCF,IAAI,CAACG,IAAL,CAAUD,WAAV,EAA3C,EAAoE;AAClE,iBAAKJ,QAAL,CAAc;AACZf,cAAAA,iBAAiB,EAAE,uCADP;AAEZC,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AAFF,aAAd;AAMD,WAPD,MAOO,CACN;AACF,SAVD;;AAWA,aAAKX,KAAL,CAAWO,SAAX,CAAqBuB,OAArB,CAA6BL,QAA7B;AACD,OAnBD,CAmBE,OAAOM,GAAP,EAAY,CAAE;AACjB,KArBD;;AAuBA,SAAK/B,KAAL,CAAWgC,QAAX,GAAsBC,CAAC,IAAI;AACzBtC,MAAAA,KAAK,CACFuC,IADH,CACQ,mDADR,EAC6D;AACzDL,QAAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWC,SADwC;AAEzDkC,QAAAA,OAAO,EAAE,KAAKnC,KAAL,CAAWoC,YAFqC;AAGzDC,QAAAA,OAAO,EAAE,KAAKrC,KAAL,CAAWsC;AAHqC,OAD7D,EAMGC,IANH,CAMQC,GAAG,IAAI;AACX,aAAKxC,KAAL,CAAWc,YAAX;AACD,OARH,EASG2B,KATH,CASSC,KAAK,IAAI;AACdC,QAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,SAAxB,CAAL;AACD,OAXH;AAYAb,MAAAA,CAAC,CAACc,MAAF,CAASC,KAAT;AACAf,MAAAA,CAAC,CAACgB,cAAF;AACD,KAfD;AAgBD;;AAIDC,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,QAAQ,EAAEjB,CAAC,IAAI,KAAKjC,KAAL,CAAWgC,QAAX,CAAoBC,CAApB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJF,EAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,WAAW,EAAC,cAJd;AAKE,MAAA,YAAY,EAAC,KALf;AAME,MAAA,SAAS,EAAC,IANZ;AAOE,MAAA,SAAS,EAAC,GAPZ;AAQE,MAAA,QAAQ,EAAEA,CAAC,IAAI;AACb,aAAKjC,KAAL,CAAWC,SAAX,GAAuBgC,CAAC,CAACc,MAAF,CAASI,KAAhC;AACA,aAAKnD,KAAL,CAAWuB,UAAX;AACD,OAXH;AAYE,MAAA,QAAQ,MAZV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKvB,KAAL,CAAWS,iBAAf,CAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAmBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,IAAI,EAAC,cAHP;AAIE,MAAA,WAAW,EAAC,eAJd;AAKE,MAAA,YAAY,EAAC,KALf;AAME,MAAA,SAAS,EAAC,IANZ;AAOE,MAAA,SAAS,EAAC,IAPZ;AAQE,MAAA,QAAQ,EAAEwB,CAAC,IAAI;AACb,aAAKjC,KAAL,CAAWoC,YAAX,GAA0BH,CAAC,CAACc,MAAF,CAASI,KAAnC;AACD,OAVH;AAWE,MAAA,QAAQ,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAiCE;AAAQ,MAAA,QAAQ,EAAElB,CAAC,IAAI,KAAKT,QAAL,CAAc;AAAClB,QAAAA,IAAI,EAAE2B,CAAC,CAACc,MAAF,CAASI;AAAhB,OAAd,CAAvB;AAA8D,MAAA,KAAK,EAAE,KAAKnD,KAAL,CAAWM,IAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CAjCF,EAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCF,EAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,EA0CE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,IAAI,EAAC,cAHP;AAIE,MAAA,WAAW,EAAC,eAJd;AAKE,MAAA,YAAY,EAAC,KALf;AAME,MAAA,SAAS,EAAC,IANZ;AAOE,MAAA,SAAS,EAAC,GAPZ;AAQE,MAAA,QAAQ,EAAE2B,CAAC,IAAI;AACb,aAAKjC,KAAL,CAAWsC,YAAX,GAA0BL,CAAC,CAACc,MAAF,CAASI,KAAnC;AACD,OAVH;AAWE,MAAA,QAAQ,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CF,CALF,EA6DE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,KAAK,EAAE,KAAKnD,KAAL,CAAWU,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7DF,CADF;AAuED;;AAnK2D","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class MachineWorkEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyName: \"\",\n      //partyContact: \"\",\n      //partyVillage: \"\",\n      remark: \"\",\n      workDate: 0,\n      //partyId: 0,\n      drillingFt: 0,\n      dieselAmount: 0,\n      tech: \"select\",\n\n      partyList: {},\n      machineList: {},\n\n      partyExistMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      }\n    };\n\n    // Fetch party list from server\n    this.state.fetchProduct = async () => {\n      const responsepartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machineparty/\"\n      );\n      const jsonpartyList = await responsepartyList.json();\n      this.state.partyList = jsonpartyList;\n\n      const responsemachineList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machines/\"\n      );\n      const jsonmachineList = await responsemachineList.json();\n      this.state.machineList = jsonmachineList;\n    };\n\n    this.state.fetchProduct();\n\n    console.log(this.state.machineList);\n    console.log(this.state.partyList + \" ashok\");\n    console.log(this.state.tech);\n    // Check existence of party name\n    this.state.checkparty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n        const showList = (item, index) => {\n          if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/machine-party-registration/\", {\n          name: this.state.partyName,\n          contact: this.state.partyContact,\n          village: this.state.partyVillage\n        })\n        .then(res => {\n          this.state.fetchProduct();\n        })\n        .catch(error => {\n          alert(error.response.request._response);\n        });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n  \n  \n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Work Registration</p>\n        <div className=\"pt-5\">\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"machineName\"\n            placeholder=\"Machine Name\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.partyName = e.target.value;\n              this.state.checkparty();\n            }}\n            required\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"partyContact\"\n            placeholder=\"Party Contact\"\n            autoComplete=\"off\"\n            maxLength=\"10\"\n            minLength=\"10\"\n            onChange={e => {\n              this.state.partyContact = e.target.value;\n            }}\n            required\n          />\n\n          <select onChange={e => this.setState({tech: e.target.value})} value={this.state.tech}>\n            <option value=\"select\">Select a technology</option>\n            <option value=\"Angular\">Angular</option>\n            <option value=\"Bootstrap\">Bootstrap</option>\n            <option value=\"React\">React</option>\n          </select>\n          <br />\n          <br />\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"partyVillage\"\n            placeholder=\"Party Village\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.partyVillage = e.target.value;\n            }}\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}