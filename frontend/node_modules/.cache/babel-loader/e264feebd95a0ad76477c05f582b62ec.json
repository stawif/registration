{"ast":null,"code":"var _jsxFileName = \"E:\\\\registration\\\\frontend\\\\src\\\\components\\\\entry\\\\VehicleSupplyEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nconst partyNamesFromApi = [];\nconst itemNamesFromApi = [];\nfetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\").then(res => res.json()).then(out => {\n  partyListFunction(out);\n}).catch(err => {\n  throw err;\n});\nfetch(\"http://127.0.0.1:8000/list-of-item/\").then(res => res.json()).then(out => {\n  itemListFunction(out);\n}).catch(err => {\n  throw err;\n}); //below function is used to store api data in a array\n\nfunction partyListFunction(data) {\n  data.map(item => partyNamesFromApi.push(item.name));\n}\n\nfunction itemListFunction(data) {\n  data.map(item => itemNamesFromApi.push(item.name));\n}\n\nexport default class VehicleSupplyEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myCallbackForSelectedParty = dataFromChild => {\n      this.state.selectedParty = dataFromChild;\n    };\n\n    this.myCallbackForselectedItem = dataFromChild => {\n      this.state.selectedItem = dataFromChild;\n    };\n\n    this.state = {\n      date: null,\n      selectedParty: \"\",\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    }; // Check existence of party name\n\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.checkitem = dataFromChild => {\n      try {\n        this.setState({\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        itemNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-vehicle-supply/\", {\n        party: this.state.selectedParty,\n        item: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity,\n        rate: this.state.rate,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      console.log(\"paid type : \" + typeof this.state.paid);\n      console.log(\"quantity type : \" + typeof this.state.quantity);\n      console.log(\"rate type : \" + typeof this.state.rate);\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Vehicle Supply Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: partyNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedParty,\n      checkFromParent: this.state.checkparty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: itemNamesFromApi,\n      callbackFromParent: this.myCallbackForselectedItem,\n      placeholderfrom: \"Item name\",\n      checkFromParent: this.state.checkitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\" //data-date=\"\"\n      ,\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.setState({\n          date: e.target.value\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"quantity\",\n      placeholder: \"Quantity\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.setState({\n          quantity: parseInt(e.target.value)\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["E:/registration/frontend/src/components/entry/VehicleSupplyEntry.js"],"names":["React","axios","Autocomplete","partyNamesFromApi","itemNamesFromApi","fetch","then","res","json","out","partyListFunction","catch","err","itemListFunction","data","map","item","push","name","VehicleSupplyEntry","Component","constructor","props","myCallbackForSelectedParty","dataFromChild","state","selectedParty","myCallbackForselectedItem","selectedItem","date","quantity","responseMessage","buttonStatus","visibility","checkparty","setState","showList","index","toLowerCase","forEach","checkitem","onSubmit","e","post","party","rate","remark","error","alert","response","request","_response","console","log","paid","target","reset","preventDefault","getDate","curr","Date","setDate","toISOString","substr","render","partyExistMessage","value","parseInt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,MAAMC,iBAAiB,GAAG,EAA1B;AACA,MAAMC,gBAAgB,GAAG,EAAzB;AAEAC,KAAK,CAAC,6CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,GAAG,IAAI;AACXC,EAAAA,iBAAiB,CAACD,GAAD,CAAjB;AACD,CAJH,EAKGE,KALH,CAKSC,GAAG,IAAI;AACZ,QAAMA,GAAN;AACD,CAPH;AASAP,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,GAAG,IAAI;AACXI,EAAAA,gBAAgB,CAACJ,GAAD,CAAhB;AACD,CAJH,EAKGE,KALH,CAKSC,GAAG,IAAI;AACZ,QAAMA,GAAN;AACD,CAPH,E,CAQA;;AACA,SAASF,iBAAT,CAA2BI,IAA3B,EAAiC;AAC/BA,EAAAA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAIb,iBAAiB,CAACc,IAAlB,CAAuBD,IAAI,CAACE,IAA5B,CAAjB;AACD;;AACD,SAASL,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9BA,EAAAA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAIZ,gBAAgB,CAACa,IAAjB,CAAsBD,IAAI,CAACE,IAA3B,CAAjB;AACD;;AAED,eAAe,MAAMC,kBAAN,SAAiCnB,KAAK,CAACoB,SAAvC,CAAiD;AAC9DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4FnBC,0BA5FmB,GA4FUC,aAAa,IAAI;AAC5C,WAAKC,KAAL,CAAWC,aAAX,GAA2BF,aAA3B;AACD,KA9FkB;;AAAA,SA+FnBG,yBA/FmB,GA+FSH,aAAa,IAAI;AAC3C,WAAKC,KAAL,CAAWG,YAAX,GAA0BJ,aAA1B;AACD,KAjGkB;;AAGjB,SAAKC,KAAL,GAAa;AACXI,MAAAA,IAAI,EAAE,IADK;AAEXH,MAAAA,aAAa,EAAE,EAFJ;AAGXE,MAAAA,YAAY,EAAE,EAHH;AAIXE,MAAAA,QAAQ,EAAE,CAJC;AAKXC,MAAAA,eAAe,EAAE,EALN;AAMXC,MAAAA,YAAY,EAAE;AACZC,QAAAA,UAAU,EAAE;AADA;AANH,KAAb,CAHiB,CAcjB;;AACA,SAAKR,KAAL,CAAWS,UAAX,GAAwBV,aAAa,IAAI;AACvC,UAAI;AACF,aAAKW,QAAL,CAAc;AACZH,UAAAA,YAAY,EAAE;AACZC,YAAAA,UAAU,EAAE;AADA;AADF,SAAd;;AAKA,cAAMG,QAAQ,GAAG,CAACpB,IAAD,EAAOqB,KAAP,KAAiB;AAChC,cAAIb,aAAa,CAACc,WAAd,OAAgCtB,IAAI,CAACsB,WAAL,EAApC,EAAwD;AACtD,iBAAKH,QAAL,CAAc;AACZH,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AADF,aAAd;AAKD,WAND,MAMO,CACN;AACF,SATD;;AAUA9B,QAAAA,iBAAiB,CAACoC,OAAlB,CAA0BH,QAA1B;AACD,OAjBD,CAkBA,OAAOxB,GAAP,EAAY,CAAE;AACf,KApBD;;AAsBA,SAAKa,KAAL,CAAWe,SAAX,GAAuBhB,aAAa,IAAI;AACtC,UAAI;AACF,aAAKW,QAAL,CAAc;AACZH,UAAAA,YAAY,EAAE;AACZC,YAAAA,UAAU,EAAE;AADA;AADF,SAAd;;AAKA,cAAMG,QAAQ,GAAG,CAACpB,IAAD,EAAOqB,KAAP,KAAiB;AAChC,cAAIb,aAAa,CAACc,WAAd,OAAgCtB,IAAI,CAACsB,WAAL,EAApC,EAAwD;AACtD,iBAAKH,QAAL,CAAc;AACZH,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AADF,aAAd;AAKD,WAND,MAMO,CACN;AACF,SATD;;AAUA7B,QAAAA,gBAAgB,CAACmC,OAAjB,CAAyBH,QAAzB;AACD,OAjBD,CAiBE,OAAOxB,GAAP,EAAY,CAAE;AACjB,KAnBD;;AAqBA,SAAKa,KAAL,CAAWgB,QAAX,GAAsBC,CAAC,IAAI;AACrBzC,MAAAA,KAAK,CAAC0C,IAAN,CAAW,6CAAX,EAA0D;AACvDC,QAAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,aADqC;AAEvDV,QAAAA,IAAI,EAAE,KAAKS,KAAL,CAAWG,YAFsC;AAGvDC,QAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IAHsC;AAIvDC,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QAJkC;AAKvDe,QAAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWoB,IALsC;AAMvDC,QAAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWqB;AANoC,OAA1D,EAQExC,IARF,CAQOC,GAAG,IAAI;AACX,aAAK4B,QAAL,CAAc;AACZJ,UAAAA,eAAe,EAAExB,GAAG,CAACO;AADT,SAAd;AAGD,OAZF,EAaEH,KAbF,CAaQoC,KAAK,IAAI;AACdC,QAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,SAAxB,CAAL;AACD,OAfF;AAgBJC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAe,OAAO,KAAK5B,KAAL,CAAW6B,IAA7C;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAmB,OAAO,KAAK5B,KAAL,CAAWK,QAAjD;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAe,OAAO,KAAK5B,KAAL,CAAWoB,IAA7C;AACAH,MAAAA,CAAC,CAACa,MAAF,CAASC,KAAT;AACAd,MAAAA,CAAC,CAACe,cAAF;AACD,KAtBD;;AAwBA,SAAKhC,KAAL,CAAWiC,OAAX,GAAqB,MAAM;AACzB,UAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACD,OAAL,EAAb;AACA,UAAI7B,IAAI,GAAG8B,IAAI,CAACG,WAAL,GAAmBC,MAAnB,CAA0B,CAA1B,EAA6B,EAA7B,CAAX;AACA,WAAKtC,KAAL,CAAWI,IAAX,GAAkBA,IAAlB;AACD,KALD;;AAOA,SAAKJ,KAAL,CAAWiC,OAAX;AACD;;AASDM,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,QAAQ,EAAEtB,CAAC,IAAI,KAAKjB,KAAL,CAAWgB,QAAX,CAAoBC,CAApB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,EAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAEvC,iBADf;AAEE,MAAA,kBAAkB,EAAE,KAAKoB,0BAF3B;AAGE,MAAA,eAAe,EAAE,KAAKE,KAAL,CAAWS,UAH9B;AAIE,MAAA,eAAe,EAAE,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWwC,iBAAf,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAWE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE7D,gBADf;AAEE,MAAA,kBAAkB,EAAE,KAAKuB,yBAF3B;AAGE,MAAA,eAAe,EAAE,WAHnB;AAIE,MAAA,eAAe,EAAE,KAAKF,KAAL,CAAWe,SAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAqBE;AACE,MAAA,IAAI,EAAC,MADP,CAEE;AAFF;AAGE,0BAAiB,YAHnB;AAIE,MAAA,YAAY,EAAE,KAAKf,KAAL,CAAWI,IAJ3B;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,QAAQ,EAAEa,CAAC,IAAI;AACX,aAAKP,QAAL,CAAc;AACVN,UAAAA,IAAI,EAAEa,CAAC,CAACa,MAAF,CAASW;AADL,SAAd;AAGH,OAVH;AAWE,MAAA,QAAQ,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,EAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,EAsCE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,WAAW,EAAC,UAJd;AAKE,MAAA,YAAY,EAAC,KALf;AAME,MAAA,QAAQ,EAAExB,CAAC,IAAI;AACX,aAAKP,QAAL,CAAc;AACVL,UAAAA,QAAQ,EAAEqC,QAAQ,CAACzB,CAAC,CAACa,MAAF,CAASW,KAAV;AADR,SAAd;AAGD,OAVL;AAWE,MAAA,QAAQ,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCF,CALF,EA0DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKzC,KAAL,CAAWM,eAAf,CA1DF,EA2DE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3DF,CADF;AAqED;;AA1K6D","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Autocomplete from \"./AutoComplete.jsx\";\r\n\r\nconst partyNamesFromApi = [];\r\nconst itemNamesFromApi = [];\r\n\r\nfetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\")\r\n  .then(res => res.json())\r\n  .then(out => {\r\n    partyListFunction(out);\r\n  })\r\n  .catch(err => {\r\n    throw err;\r\n  });\r\n\r\nfetch(\"http://127.0.0.1:8000/list-of-item/\")\r\n  .then(res => res.json())\r\n  .then(out => {\r\n    itemListFunction(out);\r\n  })\r\n  .catch(err => {\r\n    throw err;\r\n  });\r\n//below function is used to store api data in a array\r\nfunction partyListFunction(data) {\r\n  data.map(item => partyNamesFromApi.push(item.name));\r\n}\r\nfunction itemListFunction(data) {\r\n  data.map(item => itemNamesFromApi.push(item.name));\r\n}\r\n\r\nexport default class VehicleSupplyEntry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      date: null,\r\n      selectedParty: \"\",\r\n      selectedItem: \"\",\r\n      quantity: 0,\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      }\r\n    };\r\n\r\n    // Check existence of party name\r\n    this.state.checkparty = dataFromChild => {\r\n      try {\r\n        this.setState({\r\n          buttonStatus: {\r\n            visibility: \"hidden\"\r\n          }\r\n        });\r\n        const showList = (item, index) => {\r\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n            this.setState({\r\n              buttonStatus: {\r\n                visibility: \"visible\"\r\n              }\r\n            });\r\n          } else {\r\n          }\r\n        };\r\n        partyNamesFromApi.forEach(showList);\r\n      } \r\n      catch (err) {}\r\n    };\r\n\r\n    this.state.checkitem = dataFromChild => {\r\n      try {\r\n        this.setState({\r\n          buttonStatus: {\r\n            visibility: \"hidden\"\r\n          }\r\n        });\r\n        const showList = (item, index) => {\r\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n            this.setState({\r\n              buttonStatus: {\r\n                visibility: \"visible\"\r\n              }\r\n            });\r\n          } else {\r\n          }\r\n        };\r\n        itemNamesFromApi.forEach(showList);\r\n      } catch (err) {}\r\n    };\r\n\r\n    this.state.onSubmit = e => {\r\n          axios.post(\"http://127.0.0.1:8000/enter-vehicle-supply/\", {\r\n             party: this.state.selectedParty,\r\n             item: this.state.selectedItem,\r\n             date: this.state.date,\r\n             quantity: this.state.quantity,\r\n             rate: this.state.rate,\r\n             remark: this.state.remark          \r\n            })\r\n           .then(res => {\r\n             this.setState({\r\n               responseMessage: res.data\r\n             });\r\n           })\r\n           .catch(error => {\r\n             alert(error.response.request._response);\r\n           });\r\n      console.log(\"paid type : \"+typeof this.state.paid);     \r\n      console.log(\"quantity type : \"+typeof this.state.quantity);     \r\n      console.log(\"rate type : \"+typeof this.state.rate);     \r\n      e.target.reset();\r\n      e.preventDefault();\r\n    };\r\n\r\n    this.state.getDate = () => {\r\n      var curr = new Date();\r\n      curr.setDate(curr.getDate());\r\n      var date = curr.toISOString().substr(0, 10);\r\n      this.state.date = date;\r\n    };\r\n\r\n    this.state.getDate();\r\n  }\r\n\r\n  myCallbackForSelectedParty = dataFromChild => {\r\n    this.state.selectedParty = dataFromChild;\r\n  };\r\n  myCallbackForselectedItem = dataFromChild => {\r\n    this.state.selectedItem = dataFromChild;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.state.onSubmit(e)}\r\n      >\r\n        <p className=\"headingViewPart\">Vehicle Supply Entry</p>\r\n        <div className=\"pt-5\">\r\n          <Autocomplete\r\n            suggestions={partyNamesFromApi}\r\n            callbackFromParent={this.myCallbackForSelectedParty}\r\n            checkFromParent={this.state.checkparty}\r\n            placeholderfrom={\"Party name\"}\r\n          />\r\n\r\n          <p>{this.state.partyExistMessage}</p>\r\n          <br/>\r\n\r\n          <Autocomplete\r\n            suggestions={itemNamesFromApi}\r\n            callbackFromParent={this.myCallbackForselectedItem}\r\n            placeholderfrom={\"Item name\"}\r\n            checkFromParent={this.state.checkitem}\r\n          />\r\n\r\n          <br/>\r\n          <br/>\r\n\r\n          <input\r\n            type=\"date\"\r\n            //data-date=\"\"\r\n            data-date-format=\"YYYY-MM-DD\"\r\n            defaultValue={this.state.date}\r\n            name=\"date\"\r\n            onChange={e => {\r\n                this.setState({\r\n                    date: e.target.value\r\n                });\r\n            }}\r\n            required\r\n          />\r\n\r\n          <br/>\r\n          <br/>\r\n\r\n          <input\r\n            type=\"number\"\r\n            className=\"mb-2\"\r\n            name=\"quantity\"\r\n            placeholder=\"Quantity\"\r\n            autoComplete=\"off\"\r\n            onChange={e => {\r\n                this.setState({\r\n                    quantity: parseInt(e.target.value)\r\n                });\r\n              }}\r\n            required\r\n          />\r\n\r\n        </div>\r\n        <p>{this.state.responseMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-dark\"\r\n          style={this.state.buttonStatus}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}