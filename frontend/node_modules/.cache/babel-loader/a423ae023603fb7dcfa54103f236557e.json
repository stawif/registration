{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/VehiclePartyRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport InputPartyNameField from \"../modular/InputPartyNameField\";\nimport InputContactField from \"../modular/InputContactField\";\nimport InputPartyVillageField from \"../modular/InputPartyVillageField\";\nexport default class VehiclePartyRegistration extends React.Component {\n  // Fetch party list and contact list from server\n  // Take name and village from contact\n  // Check existence of party name\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\");\n        const jsonPartyList = await responsePartyList.json();\n        this.state.partyList = jsonPartyList;\n        const responseContactList = await fetch(\"http://127.0.0.1:8000/list-of-partycontacts/\");\n        const jsonContactList = await responseContactList.json();\n        this.state.partyContacts = jsonContactList;\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.getNameVillage = matchContact => {\n      console.log(matchContact);\n      axios.post(\"http://127.0.0.1:8000/party-through-contact/\", {\n        contact: matchContact\n      }).then(res => {\n        const jsonNameVillage = JSON.parse(res.data);\n        this.setState({\n          //disabled: !this.state.disabled,\n          partyName: jsonNameVillage.name,\n          partyVillage: jsonNameVillage.village\n        }); // this.state.partyName = jsonNameVillage.name;\n        // this.state.partyVillage = jsonNameVillage.village;\n\n        console.log(\"Name \", this.state.partyName);\n        console.log(\"Village \", this.state.partyVillage);\n      }).catch(error => {//console.log( error.response.request._response )\n      });\n    };\n\n    this.checkVillage = () => {\n      this.setState({\n        partyExistMessage: \"\",\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"visible\"\n        }\n      });\n    };\n\n    this.checkParty = () => {\n      try {\n        this.setState({\n          partyExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              partyExistMessage: \"* This party name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post('http://127.0.0.1:8000/vehicle-party-registration/', {\n        name: this.state.partyName,\n        contact: this.state.partyContact,\n        village: this.state.partyVillage\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      console.log(typeof this.state.partyName);\n      console.log(typeof this.state.partyVillage);\n      console.log(typeof this.state.partyContact);\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state = {\n      partyName: \"\",\n      partyContact: \"\",\n      partyVillage: \"\",\n      partyList: {},\n      partyExistMessage: \"\",\n      responseMessage: \"\",\n      partyContacts: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      disabled: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Vehicle Party Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      pattern: \"^\\\\d{10}$\",\n      name: \"partyContact\",\n      placeholder: \"Party Contact\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.partyContact = e.target.value;\n\n        if (e.target.value.length === 10) {\n          if (this.state.partyContacts.indexOf(e.target.value) > -1) {\n            this.state.getNameVillage(e.target.value);\n          } else this.setState({\n            disabled: !this.state.disabled,\n            partyName: \"\",\n            partyVillage: \"\"\n          });\n        }\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"partyName\",\n      placeholder: \"Party Name\",\n      value: this.state.partyName,\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyName = e.target.value;\n        this.state.checkparty();\n      },\n      required: true,\n      disabled: this.state.disabled ? \"disabled\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"partyVillage\",\n      placeholder: \"Party Village\",\n      value: this.state.partyVillage,\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.partyVillage = e.target.value;\n        this.state.checkVillage();\n      },\n      required: true,\n      disabled: this.state.disabled ? \"disabled\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/VehiclePartyRegistration.js"],"names":["React","axios","InputPartyNameField","InputContactField","InputPartyVillageField","VehiclePartyRegistration","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","state","partyList","responseContactList","jsonContactList","partyContacts","toggleLoadStatus","getNameVillage","matchContact","console","log","post","contact","then","res","jsonNameVillage","JSON","parse","data","setState","partyName","name","partyVillage","village","catch","error","checkVillage","partyExistMessage","responseMessage","buttonStatus","visibility","checkParty","showList","item","index","toLowerCase","forEach","err","onSubmit","e","partyContact","alert","response","request","_response","target","reset","preventDefault","disabled","render","value","length","indexOf","checkparty"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport InputPartyNameField from \"../modular/InputPartyNameField\";\nimport InputContactField from \"../modular/InputContactField\";\nimport InputPartyVillageField from \"../modular/InputPartyVillageField\";\n\nexport default class VehiclePartyRegistration extends React.Component {\n\n  // Fetch party list and contact list from server\n  fetchProduct = async () => {\n\n    try {\n      const responsePartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-vehicleparty/\"\n      );\n      const jsonPartyList = await responsePartyList.json();\n      this.state.partyList = jsonPartyList;\n\n      const responseContactList = await fetch(\n        \"http://127.0.0.1:8000/list-of-partycontacts/\"\n      );\n      const jsonContactList = await responseContactList.json();\n      this.state.partyContacts = jsonContactList;\n    } catch {\n      this.toggleLoadStatus();\n    }\n    \n  };\n\n \n\n  // Take name and village from contact\n  getNameVillage = matchContact => {\n    console.log(matchContact);\n\n    axios\n      .post(\"http://127.0.0.1:8000/party-through-contact/\", {\n        contact: matchContact\n      })\n      .then(res => {\n        const jsonNameVillage = JSON.parse(res.data);\n\n        this.setState({\n          //disabled: !this.state.disabled,\n\n          partyName: jsonNameVillage.name,\n          partyVillage: jsonNameVillage.village\n        });\n        // this.state.partyName = jsonNameVillage.name;\n        // this.state.partyVillage = jsonNameVillage.village;\n        console.log(\"Name \", this.state.partyName);\n        console.log(\"Village \", this.state.partyVillage);\n      })\n      .catch(error => {\n        //console.log( error.response.request._response )\n      });\n  };\n\n  checkVillage = () => {\n    this.setState({\n      partyExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    });\n  };\n\n  // Check existence of party name\n  checkParty = () => {\n    try {\n      this.setState({\n        partyExistMessage: \"\",\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"visible\"\n        }\n      });\n      const showList = (item, index) => {\n        if (this.state.partyName.toLowerCase() === item.name.toLowerCase()) {\n          this.setState({\n            partyExistMessage: \"* This party name is already exist!!!\",\n            buttonStatus: {\n              visibility: \"hidden\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.partyList.forEach(showList);\n    } catch (err) {}\n  };\n\n  onSubmit =(e) => {\n    axios.post('http://127.0.0.1:8000/vehicle-party-registration/', \n    {\n      name: this.state.partyName,\n      contact: this.state.partyContact,\n      village: this.state.partyVillage\n    }\n    ).then(res => {\n      this.state.fetchProduct();\n      this.setState({\n        responseMessage: res.data\n      });\n    }\n    ).catch(error => {\n      alert( error.response.request._response )\n    });\n\n    console.log(typeof this.state.partyName);\n        console.log(typeof this.state.partyVillage);\n        console.log(typeof this.state.partyContact);\n  e.target.reset();\n  e.preventDefault();\n};\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyName: \"\",\n      partyContact: \"\",\n      partyVillage: \"\",\n      partyList: {},\n      partyExistMessage: \"\",\n      responseMessage: \"\",\n      partyContacts: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      disabled: true\n    };\n\n    \n\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Vehicle Party Registration</p>\n        <div className=\"pt-5\">\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            pattern=\"^\\d{10}$\"\n            name=\"partyContact\"\n            placeholder=\"Party Contact\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.partyContact = e.target.value;\n              if (e.target.value.length === 10) {\n                if (this.state.partyContacts.indexOf(e.target.value) > -1) {\n                  this.state.getNameVillage(e.target.value);\n                } else\n                  this.setState({\n                    disabled: !this.state.disabled,\n                    partyName: \"\",\n                    partyVillage: \"\"\n                  });\n              }\n            }}\n            required\n          />\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"partyName\"\n            placeholder=\"Party Name\"\n            value={this.state.partyName}\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.partyName = e.target.value;\n              this.state.checkparty();\n            }}\n            required\n            disabled={this.state.disabled ? \"disabled\" : \"\"}\n          />\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"partyVillage\"\n            placeholder=\"Party Village\"\n            value={this.state.partyVillage}\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.partyVillage = e.target.value;\n              this.state.checkVillage();\n            }}\n            required\n            disabled={this.state.disabled ? \"disabled\" : \"\"}\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}