{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/WorkerRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport InputContactField from \"../modular/InputContactField\";\nimport InputDateField from \"../modular/InputDateField\";\nexport default class WorkerRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      date: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    };\n    console.log(this.state.date); // Fetch worker list from server\n\n    this.state.fetchProduct = async () => {\n      const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\n      const jsonWorkerList = await responseWorkerList.json();\n      this.state.workerList = jsonWorkerList;\n    };\n\n    this.state.fetchProduct(); // Check existence of worker name\n\n    this.state.checkworker = () => {\n      try {\n        this.setState({\n          workerExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              workerExistMessage: \"* This worker name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.workerList.forEach(showList);\n      } catch (err) {}\n    }; //Form Handler\n\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/worker-registration/\", {\n        name: this.state.workerName,\n        contact: this.state.workerContact,\n        village: this.state.workerVillage,\n        salary: this.state.workerSalary,\n        advance: this.state.advance,\n        date: this.state.date\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        console.log(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Machine Worker Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerName\",\n      placeholder: \"Worker Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"3\",\n      onChange: e => {\n        this.state.workerName = e.target.value;\n        this.state.checkworker();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.workerExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(InputContactField, {\n      callbackFromParent: dataFromChild => {\n        this.state.workerContact = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerVillage\",\n      placeholder: \"Worker Village\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.workerVillage = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerSalary\",\n      placeholder: \"Worker Salary\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.workerSalary = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n        console.log(this.state.date);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerAdvance\",\n      placeholder: \"Worker Advance\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.advance = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/WorkerRegistration.js"],"names":["React","axios","InputContactField","InputDateField","WorkerRegistration","Component","constructor","props","state","workerName","workerContact","workerVillage","workerSalary","advance","date","workerList","workerExistMessage","responseMessage","buttonStatus","visibility","console","log","fetchProduct","responseWorkerList","fetch","jsonWorkerList","json","checkworker","setState","showList","item","index","toLowerCase","name","forEach","err","onSubmit","e","post","contact","village","salary","then","res","data","catch","error","response","request","_response","target","reset","preventDefault","render","value","dataFromChild","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport InputContactField from \"../modular/InputContactField\";\nimport InputDateField from \"../modular/InputDateField\";\nexport default class WorkerRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      date: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    };\n\n    console.log(this.state.date);\n    \n\n    // Fetch worker list from server\n    this.state.fetchProduct = async () => {\n      const responseWorkerList = await fetch(\n        \"http://127.0.0.1:8000/list-of-worker/\"\n      );\n      const jsonWorkerList = await responseWorkerList.json();\n      this.state.workerList = jsonWorkerList;\n    };\n\n    this.state.fetchProduct();\n\n    // Check existence of worker name\n    this.state.checkworker = () => {\n      try {\n        this.setState({\n          workerExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n        const showList = (item, index) => {\n          if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              workerExistMessage: \"* This worker name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.workerList.forEach(showList);\n      } catch (err) {}\n    };\n\n    //Form Handler\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/worker-registration/\", {\n          name: this.state.workerName,\n          contact: this.state.workerContact,\n          village: this.state.workerVillage,\n          salary: this.state.workerSalary,\n          advance: this.state.advance,\n          date: this.state.date\n        })\n        .then(res => {\n          this.state.fetchProduct();\n          this.setState({\n            responseMessage: res.data\n          });\n        })\n        .catch(error => {\n          console.log(error.response.request._response);\n        });\n\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    \n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Worker Registration</p>\n        <div className=\"pt-5\">\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"workerName\"\n            placeholder=\"Worker Name\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"3\"\n            onChange={e => {\n              this.state.workerName = e.target.value;\n\n              this.state.checkworker();\n            }}\n            required\n          />\n\n          <p>{this.state.workerExistMessage}</p>\n          <br />\n\n          <InputContactField\n            callbackFromParent={dataFromChild => {\n              this.state.workerContact = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"workerVillage\"\n            placeholder=\"Worker Village\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.workerVillage = e.target.value;\n            }}\n            required\n          />\n\n          <br />\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"workerSalary\"\n            placeholder=\"Worker Salary\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.workerSalary = parseInt(e.target.value);\n            }}\n            required\n          />\n\n          <br />\n          <br />\n\n          <InputDateField\n            callbackFromParent={dataFromChild => {\n              \n              \n              this.state.date = dataFromChild;\n              console.log(this.state.date)\n            }}\n          />\n\n          <br />\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"workerAdvance\"\n            placeholder=\"Worker Advance\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.advance = parseInt(e.target.value);\n            }}\n            required\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}