{"ast":null,"code":"var _jsxFileName = \"/home/snakode/registration/frontend/src/components/account/Credit.js\";\nimport React from 'react';\nimport './account.css';\n\nclass Credit extends React.Component {\n  // Fetch machine list from server\n  // Set final showing rows of table currentWork\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      const responseCreditList = await fetch(\"http://127.0.0.1:8000/list-of-credit/\");\n      const jsonCreditDetail = await responseCreditList.json();\n\n      if (jsonCreditDetail.length != 0) {\n        this.setState({\n          minDate: jsonCreditDetail[0].date\n        });\n        this.setState({\n          maxDate: jsonCreditDetail.slice(-1)[0].date\n        });\n      }\n\n      this.setState({\n        creditDetail: jsonCreditDetail\n      });\n    };\n\n    this.setDateFilter = (item, index) => {\n      if (!this.state.minFilterDate) {\n        this.state.minFilterDate = this.state.minDate;\n      }\n\n      if (!this.state.maxFilterDate) {\n        this.state.maxFilterDate = this.state.maxDate;\n      }\n\n      if (this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate) {\n        this.state.currentCredit.push(item);\n      }\n    };\n\n    this.state = {\n      creditDetail: [],\n      minDate: null,\n      maxDate: null,\n      minFilterDate: null,\n      maxFilterDate: null,\n      currentCredit: []\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.setDateFilter = this.setDateFilter.bind(this);\n    this.fetchProduct();\n  }\n\n  render() {\n    //Clear currentCredit list\n    this.state.currentCredit = []; //Apply date filter\n\n    this.state.creditDetail.forEach(this.setDateFilter);\n    return React.createElement(\"div\", {\n      id: \"mainDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"dateFilter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fromDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          minFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"toDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          maxFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table table-borderd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Credit Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Remark\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.currentCredit.map(credit => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, credit.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, credit.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, credit.credit_amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, credit.remark))))));\n  }\n\n}\n\nexport default Credit;","map":{"version":3,"sources":["/home/snakode/registration/frontend/src/components/account/Credit.js"],"names":["React","Credit","Component","constructor","props","fetchProduct","responseCreditList","fetch","jsonCreditDetail","json","length","setState","minDate","date","maxDate","slice","creditDetail","setDateFilter","item","index","state","minFilterDate","maxFilterDate","currentCredit","push","bind","render","forEach","e","target","value","map","credit","category","credit_amount","remark"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './account.css';\n\nclass Credit extends React.Component{\n    // Fetch machine list from server\n    fetchProduct = async () => {\n        const responseCreditList = await fetch(\"http://127.0.0.1:8000/list-of-credit/\" );\n        const jsonCreditDetail = await responseCreditList.json();\n\n        if(jsonCreditDetail.length!=0)\n        {\n            this.setState({\n                minDate: jsonCreditDetail[0].date\n            });\n            this.setState({\n                maxDate: jsonCreditDetail.slice(-1)[0].date    \n            });\n        } \n        this.setState({\n            creditDetail: jsonCreditDetail\n        });\n    };\n\n    // Set final showing rows of table currentWork\n    setDateFilter = (item, index) => {\n        if(!this.state.minFilterDate){\n            this.state.minFilterDate= this.state.minDate;\n        }\n        if(!this.state.maxFilterDate){\n            this.state.maxFilterDate= this.state.maxDate;\n        }\n        if(this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate){\n            this.state.currentCredit.push(item);\n        }\n    }\n\n    constructor(props){\n        super(props);\n        this.state= {\n            creditDetail: [],\n            minDate: null,\n            maxDate: null,\n            minFilterDate: null,\n            maxFilterDate: null,\n            currentCredit: [],\n        }\n\n        this.fetchProduct= this.fetchProduct.bind(this);\n        this.setDateFilter= this.setDateFilter.bind(this);\n\n        this.fetchProduct();\n    }\n\n    render(){\n        //Clear currentCredit list\n        this.state.currentCredit= [];\n        \n        //Apply date filter\n        this.state.creditDetail.forEach(this.setDateFilter);\n        return(\n            <div id=\"mainDiv\">\n                <div class=\"dateFilter\">\n                    <div className=\"fromDate\">\n                        <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                            this.setState({\n                                minFilterDate: e.target.value\n                            });\n                        }}/>\n                    </div>\n                    <div className=\"toDate\">\n                        <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                            this.setState({\n                                maxFilterDate: e.target.value\n                            });\n                        }}/>\n                    </div>\n                </div>\n                <table className=\"table table-borderd\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>Category</th>\n                            <th>Date</th>\n                            <th>Credit Amount</th>\n                            <th>Remark</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.currentCredit.map((credit) => (\n                            <tr>\n                                <td>{credit.category}</td>\n                                <td>{credit.date}</td>\n                                <td>{credit.credit_amount}</td>\n                                <td>{credit.remark}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>    \n        );\n    }\n}\n\nexport default Credit;"]},"metadata":{},"sourceType":"module"}