{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/dashboard/PartyPins.js\";\nimport React from 'react';\nimport PinButton from './PinButton';\n\nclass PartyPins extends React.Component {\n  // Fetch machine list from server\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n        const jsonMachineList = await responseMachineList.json();\n        this.state.machinePartyList = jsonMachineList;\n      } catch (err) {}\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    console.log(\"PartyPins debugging start...\");\n    this.state = {\n      machinePartyList: [],\n      vehiclePartyList: [],\n      purchasePartyList: [],\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.machinePartyList.map(party => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, party.name)));\n  }\n\n}\n\nexport default PartyPins;","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/dashboard/PartyPins.js"],"names":["React","PinButton","PartyPins","Component","constructor","props","fetchProduct","responseMachineList","fetch","jsonMachineList","json","state","machinePartyList","err","toggleLoadStatus","loadingStatus","visibility","setState","loadedStatus","console","log","vehiclePartyList","purchasePartyList","bind","componentDidMount","render","map","party","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAuC;AACrC;AAYA;AAuBEC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAlCpBC,YAkCoB,GAlCL,YAAY;AACzB,UAAI;AACF,cAAMC,mBAAmB,GAAG,MAAMC,KAAK,CACrC,6CADqC,CAAvC;AAGA,cAAMC,eAAe,GAAG,MAAMF,mBAAmB,CAACG,IAApB,EAA9B;AACA,aAAKC,KAAL,CAAWC,gBAAX,GAA8BH,eAA9B;AACD,OAND,CAME,OAAMI,GAAN,EAAW,CAAE;AAChB,KA0BmB;;AAAA,SAtBpBC,gBAsBoB,GAtBD,YAAY;AAC7B,UAAI,KAAKH,KAAL,CAAWI,aAAX,CAAyBC,UAAzB,KAAwC,SAA5C,EAAuD;AACrD,cAAM,KAAKC,QAAL,CAAc;AAClBF,UAAAA,aAAa,EAAE;AACbC,YAAAA,UAAU,EAAE;AADC,WADG;AAIlBE,UAAAA,YAAY,EAAE;AACZF,YAAAA,UAAU,EAAE;AADA;AAJI,SAAd,CAAN;AAQD,OATD,MASO;AACL,cAAM,KAAKC,QAAL,CAAc;AAClBF,UAAAA,aAAa,EAAE;AACbC,YAAAA,UAAU,EAAE;AADC,WADG;AAIlBE,UAAAA,YAAY,EAAE;AACZF,YAAAA,UAAU,EAAE;AADA;AAJI,SAAd,CAAN;AAQD;AACF,KAEmB;;AAEdG,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,SAAKT,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE,EADT;AAETS,MAAAA,gBAAgB,EAAE,EAFT;AAGTC,MAAAA,iBAAiB,EAAE,EAHV;AAITP,MAAAA,aAAa,EAAE;AACbC,QAAAA,UAAU,EAAE;AADC,OAJN;AAOTE,MAAAA,YAAY,EAAE;AACZF,QAAAA,UAAU,EAAE;AADA;AAPL,KAAb;AAYA,SAAKV,YAAL,GAAoB,KAAKA,YAAL,CAAkBiB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKT,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBS,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDC,EAAAA,iBAAiB,GAAE,CAClB;;AAGHC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKd,KAAL,CAAWC,gBAAX,CAA4Bc,GAA5B,CAAkCC,KAAD,IACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACC,IAAV,CADA,CADJ,CADF;AAOD;;AAnEkC;;AAsEvC,eAAe1B,SAAf","sourcesContent":["import React from 'react';\nimport PinButton from './PinButton';\n\nclass PartyPins extends React.Component{\n  // Fetch machine list from server\n  fetchProduct = async () => {\n    try {\n      const responseMachineList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machineparty/\"\n      );\n      const jsonMachineList = await responseMachineList.json();\n      this.state.machinePartyList = jsonMachineList;\n    } catch(err) {}\n  };\n\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.visibility === \"visible\") {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"hidden\"\n        },\n        loadedStatus: {\n          visibility: \"visible\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"visible\"\n        },\n        loadedStatus: {\n          visibility: \"hidden\"\n        }\n      });\n    }\n  };\n\n    constructor(props){\n        super(props);\n        console.log(\"PartyPins debugging start...\");\n        this.state = {\n            machinePartyList: [],\n            vehiclePartyList: [],\n            purchasePartyList: [],\n            loadingStatus: {\n              visibility: \"visible\"\n            },\n            loadedStatus: {\n              visibility: \"hidden\"\n            }\n        }\n\n        this.fetchProduct = this.fetchProduct.bind(this);\n        this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n      }\n\n      componentDidMount(){\n      }\n\n\n    render(){\n      return(\n        <div>\n          { this.state.machinePartyList.map( (party) => (\n            <p>{party.name}</p>\n          )) }\n        </div>  \n      );\n    };\n}\n\nexport default PartyPins;"]},"metadata":{},"sourceType":"module"}