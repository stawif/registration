{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nimport InputRateField from \"../modular/InputRateField\";\nexport default class MachineWorkEntry extends React.Component {\n  //Fetching Machines And Machine Parties from DataBase\n  // Check existence of party name\n  //Check Existance for MAchine name\n  //form Handler Submitting\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n        const jsonPartyList = await responsePartyList.json();\n        jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n        const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n        const jsonMachineList = await responseMachineList.json();\n        jsonMachineList.map(item => this.state.machineNamesFromApi.push(item.name));\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkParty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = item => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.checkMachine = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = item => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.machineNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\n        party: this.state.selectedParty,\n        machine: this.state.selectedMachine,\n        date: this.state.date,\n        drilling_feet: this.state.drillingFeet,\n        diesel_amount: this.state.dieselAmount,\n        remark: this.state.remark,\n        payment: this.state.payment,\n        holes: this.state.holes\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      machineNamesFromApi: [],\n      payment: 0,\n      holes: 0,\n      date: null,\n      selectedMachine: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      dieselAmount: 0,\n      drillingFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      // ,\n      // radioButtonStyle: {\n      //   float: \"left\"\n      // }\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.checkMachine = this.checkMachine.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Machine Work Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      checkFromParent: this.checkParty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: this.state.machineNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedMachine = dataFromChild;\n      },\n      placeholderfrom: \"Machine name\",\n      checkFromParent: this.checkMachine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Diesel Amount\",\n      callbackFromParent: dataFromChild => {\n        this.state.dieselAmount = parseInt(dataFromChild);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Drilling Feet\",\n      callbackFromParent: dataFromChild => {\n        this.state.drillingFeet = parseInt(dataFromChild);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Holes\",\n      callbackFromParent: dataFromChild => {\n        this.state.holes = parseInt(dataFromChild);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Payment\",\n      callbackFromParent: dataFromChild => {\n        this.state.payment = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(InputRemarkField, {\n      callbackFromParent: dataFromChild => {\n        this.state.remark = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputRemarkField","InputQuantityField","InputRateField","MachineWorkEntry","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","map","item","state","partyNamesFromApi","push","name","responseMachineList","jsonMachineList","machineNamesFromApi","toggleLoadStatus","checkParty","dataFromChild","setState","responseMessage","buttonStatus","visibility","showList","toLowerCase","forEach","err","checkMachine","onSubmit","e","post","party","selectedParty","machine","selectedMachine","date","drilling_feet","drillingFeet","diesel_amount","dieselAmount","remark","payment","holes","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render","partyExistMessage","parseInt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,eAAe,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAC5D;AAuBA;AAuBA;AAuBA;AA0BA;AAsBAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SApHnBC,YAoHmB,GApHJ,YAAY;AACzB,UAAI;AACF,cAAMC,iBAAiB,GAAG,MAAMC,KAAK,CACnC,6CADmC,CAArC;AAGA,cAAMC,aAAa,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,EAA5B;AAEAD,QAAAA,aAAa,CAACE,GAAd,CAAkBC,IAAI,IAAI,KAAKC,KAAL,CAAWC,iBAAX,CAA6BC,IAA7B,CAAkCH,IAAI,CAACI,IAAvC,CAA1B;AAEA,cAAMC,mBAAmB,GAAG,MAAMT,KAAK,CACrC,yCADqC,CAAvC;AAGA,cAAMU,eAAe,GAAG,MAAMD,mBAAmB,CAACP,IAApB,EAA9B;AAEAQ,QAAAA,eAAe,CAACP,GAAhB,CAAoBC,IAAI,IACtB,KAAKC,KAAL,CAAWM,mBAAX,CAA+BJ,IAA/B,CAAoCH,IAAI,CAACI,IAAzC,CADF;AAGD,OAhBD,CAgBE,MAAM;AACN,aAAKI,gBAAL;AACD;AACF,KAgGkB;;AAAA,SA7FnBC,UA6FmB,GA7FNC,aAAa,IAAI;AAC5B,UAAI;AACF,aAAKC,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAE,EADL;AAEZC,UAAAA,YAAY,EAAE;AACZC,YAAAA,UAAU,EAAE;AADA;AAFF,SAAd;;AAMA,cAAMC,QAAQ,GAAGf,IAAI,IAAI;AACvB,cAAIU,aAAa,CAACM,WAAd,OAAgChB,IAAI,CAACgB,WAAL,EAApC,EAAwD;AACtD,iBAAKL,QAAL,CAAc;AACZE,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AADF,aAAd;AAKD,WAND,MAMO,CACN;AACF,SATD;;AAUA,aAAKb,KAAL,CAAWC,iBAAX,CAA6Be,OAA7B,CAAqCF,QAArC;AACD,OAlBD,CAkBE,OAAOG,GAAP,EAAY,CAAE;AACjB,KAyEkB;;AAAA,SAtEnBC,YAsEmB,GAtEJT,aAAa,IAAI;AAC9B,UAAI;AACF,aAAKC,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAE,EADL;AAEZC,UAAAA,YAAY,EAAE;AACZC,YAAAA,UAAU,EAAE;AADA;AAFF,SAAd;;AAMA,cAAMC,QAAQ,GAAGf,IAAI,IAAI;AACvB,cAAIU,aAAa,CAACM,WAAd,OAAgChB,IAAI,CAACgB,WAAL,EAApC,EAAwD;AACtD,iBAAKL,QAAL,CAAc;AACZE,cAAAA,YAAY,EAAE;AACZC,gBAAAA,UAAU,EAAE;AADA;AADF,aAAd;AAKD,WAND,MAMO,CACN;AACF,SATD;;AAUA,aAAKb,KAAL,CAAWM,mBAAX,CAA+BU,OAA/B,CAAuCF,QAAvC;AACD,OAlBD,CAkBE,OAAOG,GAAP,EAAY,CAAE;AACjB,KAkDkB;;AAAA,SA/CnBE,QA+CmB,GA/CRC,CAAC,IAAI;AACdrC,MAAAA,KAAK,CACFsC,IADH,CACQ,gDADR,EAC0D;AACtDC,QAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWuB,aADoC;AAEtDC,QAAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWyB,eAFkC;AAGtDC,QAAAA,IAAI,EAAE,KAAK1B,KAAL,CAAW0B,IAHqC;AAItDC,QAAAA,aAAa,EAAE,KAAK3B,KAAL,CAAW4B,YAJ4B;AAKtDC,QAAAA,aAAa,EAAE,KAAK7B,KAAL,CAAW8B,YAL4B;AAMtDC,QAAAA,MAAM,EAAE,KAAK/B,KAAL,CAAW+B,MANmC;AAOtDC,QAAAA,OAAO,EAAE,KAAKhC,KAAL,CAAWgC,OAPkC;AAQtDC,QAAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWiC;AARoC,OAD1D,EAWGC,IAXH,CAWQC,GAAG,IAAI;AACX,aAAKzB,QAAL,CAAc;AACZC,UAAAA,eAAe,EAAEwB,GAAG,CAACC;AADT,SAAd;AAGD,OAfH,EAgBGC,KAhBH,CAgBSC,KAAK,IAAI;AACdC,QAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,SAAxB,CAAL;AACD,OAlBH;AAoBAtB,MAAAA,CAAC,CAACuB,MAAF,CAASC,KAAT;AACAxB,MAAAA,CAAC,CAACyB,cAAF;AACD,KAwBkB;;AAAA,SArBnBtC,gBAqBmB,GArBA,YAAY;AAC7B,UAAI,KAAKP,KAAL,CAAW8C,aAAX,CAAyBjC,UAAzB,KAAwC,SAA5C,EAAuD;AACrD,cAAM,KAAKH,QAAL,CAAc;AAClBoC,UAAAA,aAAa,EAAE;AACbjC,YAAAA,UAAU,EAAE;AADC,WADG;AAIlBkC,UAAAA,YAAY,EAAE;AACZlC,YAAAA,UAAU,EAAE;AADA;AAJI,SAAd,CAAN;AAQD,OATD,MASO;AACL,cAAM,KAAKH,QAAL,CAAc;AAClBoC,UAAAA,aAAa,EAAE;AACbjC,YAAAA,UAAU,EAAE;AADC,WADG;AAIlBkC,UAAAA,YAAY,EAAE;AACZlC,YAAAA,UAAU,EAAE;AADA;AAJI,SAAd,CAAN;AAQD;AACF,KACkB;;AAGjB,SAAKb,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,EADR;AAEXK,MAAAA,mBAAmB,EAAE,EAFV;AAGX0B,MAAAA,OAAO,EAAE,CAHE;AAIXC,MAAAA,KAAK,EAAE,CAJI;AAKXP,MAAAA,IAAI,EAAE,IALK;AAMXD,MAAAA,eAAe,EAAE,EANN;AAOXF,MAAAA,aAAa,EAAE,EAPJ;AAQXQ,MAAAA,MAAM,EAAE,EARG;AASXD,MAAAA,YAAY,EAAE,CATH;AAUXF,MAAAA,YAAY,EAAE,CAVH;AAWXjB,MAAAA,eAAe,EAAE,EAXN;AAYXC,MAAAA,YAAY,EAAE;AACZC,QAAAA,UAAU,EAAE;AADA,OAZH;AAeX;AACA;AACA;AACA;AACAiC,MAAAA,aAAa,EAAE;AACbjC,QAAAA,UAAU,EAAE;AADC,OAnBJ;AAsBXkC,MAAAA,YAAY,EAAE;AACZlC,QAAAA,UAAU,EAAE;AADA;AAtBH,KAAb;AA2BA,SAAKpB,YAAL,GAAoB,KAAKA,YAAL,CAAkBuD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKxC,UAAL,GAAkB,KAAKA,UAAL,CAAgBwC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAK9B,YAAL,GAAoB,KAAKA,YAAL,CAAkB8B,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK7B,QAAL,GAAgB,KAAKA,QAAL,CAAc6B,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKzC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsByC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKvD,YAAL;AACD;;AAEDwD,EAAAA,iBAAiB,GAAG;AAClB,SAAK1C,gBAAL;AACD;;AAED2C,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,QAAQ,EAAE9B,CAAC,IAAI,KAAKD,QAAL,CAAcC,CAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,EAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,KAAKpB,KAAL,CAAWC,iBAD1B;AAEE,MAAA,kBAAkB,EAAEQ,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAWuB,aAAX,GAA2Bd,aAA3B;AACD,OAJH;AAKE,MAAA,eAAe,EAAE,KAAKD,UALxB;AAME,MAAA,eAAe,EAAE,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKR,KAAL,CAAWmD,iBAAf,CAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAaE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAE,KAAKnD,KAAL,CAAWM,mBAD1B;AAEE,MAAA,kBAAkB,EAAEG,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAWyB,eAAX,GAA6BhB,aAA7B;AACD,OAJH;AAKE,MAAA,eAAe,EAAE,cALnB;AAME,MAAA,eAAe,EAAE,KAAKS,YANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EAyBE,oBAAC,cAAD;AACE,MAAA,kBAAkB,EAAET,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW0B,IAAX,GAAkBjB,aAAlB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,EAiCE,oBAAC,cAAD;AACE,MAAA,iBAAiB,EAAE,eADrB;AAEE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW8B,YAAX,GAA0BsB,QAAQ,CAAC3C,aAAD,CAAlC;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,EAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,EAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,EA2CE,oBAAC,kBAAD;AACE,MAAA,WAAW,EAAE,eADf;AAEE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW4B,YAAX,GAA0BwB,QAAQ,CAAC3C,aAAD,CAAlC;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EAiDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjDF,EAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDF,EAoDE,oBAAC,kBAAD;AACE,MAAA,WAAW,EAAE,OADf;AAEE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAWiC,KAAX,GAAmBmB,QAAQ,CAAC3C,aAAD,CAA3B;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApDF,EA0DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DF,EA2DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3DF,EA6DE,oBAAC,cAAD;AACE,MAAA,iBAAiB,EAAE,SADrB;AAEE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAWgC,OAAX,GAAqBvB,aAArB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7DF,EAmEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnEF,EAoEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApEF,EAsEE,oBAAC,gBAAD;AACE,MAAA,kBAAkB,EAAEA,aAAa,IAAI;AACnC,aAAKT,KAAL,CAAW+B,MAAX,GAAoBtB,aAApB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtEF,CALF,EAiFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWW,eAAf,CAjFF,EAkFE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlFF,CADF;AA4FD;;AA7P2D","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nimport InputRateField from \"../modular/InputRateField\";\n\nexport default class MachineWorkEntry extends React.Component {\n  //Fetching Machines And Machine Parties from DataBase\n  fetchProduct = async () => {\n    try {\n      const responsePartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machineparty/\"\n      );\n      const jsonPartyList = await responsePartyList.json();\n\n      jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n\n      const responseMachineList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machines/\"\n      );\n      const jsonMachineList = await responseMachineList.json();\n\n      jsonMachineList.map(item =>\n        this.state.machineNamesFromApi.push(item.name)\n      );\n    } catch {\n      this.toggleLoadStatus();\n    }\n  };\n\n  // Check existence of party name\n  checkParty = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = item => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.partyNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  //Check Existance for MAchine name\n  checkMachine = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = item => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.machineNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  //form Handler Submitting\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\n        party: this.state.selectedParty,\n        machine: this.state.selectedMachine,\n        date: this.state.date,\n        drilling_feet: this.state.drillingFeet,\n        diesel_amount: this.state.dieselAmount,\n        remark: this.state.remark,\n        payment: this.state.payment,\n        holes: this.state.holes\n      })\n      .then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        alert(error.response.request._response);\n      });\n\n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.visibility === \"visible\") {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"hidden\"\n        },\n        loadedStatus: {\n          visibility: \"visible\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"visible\"\n        },\n        loadedStatus: {\n          visibility: \"hidden\"\n        }\n      });\n    }\n  };\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyNamesFromApi: [],\n      machineNamesFromApi: [],\n      payment: 0,\n      holes: 0,\n      date: null,\n      selectedMachine: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      dieselAmount: 0,\n      drillingFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      // ,\n      // radioButtonStyle: {\n      //   float: \"left\"\n      // }\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.checkMachine = this.checkMachine.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Work Entry</p>\n        <div className=\"pt-5\">\n          <Autocomplete\n            suggestions={this.state.partyNamesFromApi}\n            callbackFromParent={dataFromChild => {\n              this.state.selectedParty = dataFromChild;\n            }}\n            checkFromParent={this.checkParty}\n            placeholderfrom={\"Party name\"}\n          />\n\n          <p>{this.state.partyExistMessage}</p>\n          <br />\n\n          <Autocomplete\n            suggestions={this.state.machineNamesFromApi}\n            callbackFromParent={dataFromChild => {\n              this.state.selectedMachine = dataFromChild;\n            }}\n            placeholderfrom={\"Machine name\"}\n            checkFromParent={this.checkMachine}\n          />\n\n          <br />\n          <br />\n\n          <InputDateField\n            callbackFromParent={dataFromChild => {\n              this.state.date = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n          <InputRateField\n            placeholderParent={\"Diesel Amount\"}\n            callbackFromParent={dataFromChild => {\n              this.state.dieselAmount = parseInt(dataFromChild);\n            }}\n          />\n\n          <br />\n          <br />\n\n          <InputQuantityField\n            placeholder={\"Drilling Feet\"}\n            callbackFromParent={dataFromChild => {\n              this.state.drillingFeet = parseInt(dataFromChild);\n            }}\n          />\n          <br />\n          <br />\n\n          <InputQuantityField\n            placeholder={\"Holes\"}\n            callbackFromParent={dataFromChild => {\n              this.state.holes = parseInt(dataFromChild);\n            }}\n          />\n          <br />\n          <br />\n\n          <InputRateField\n            placeholderParent={\"Payment\"}\n            callbackFromParent={dataFromChild => {\n              this.state.payment = dataFromChild;\n            }}\n          />\n          <br />\n          <br />\n\n          <InputRemarkField\n            callbackFromParent={dataFromChild => {\n              this.state.remark = dataFromChild;\n            }}\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}