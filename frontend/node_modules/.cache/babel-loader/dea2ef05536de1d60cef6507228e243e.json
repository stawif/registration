{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/WorkerRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport InputContactField from \"../modular/InputContactField\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputCommonName from \"../modular/InputCommonName\";\nexport default class WorkerRegistration extends React.Component {\n  // Fetch vehicle list from server\n  // Check existence of vehicle name\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\n        const jsonWorkerList = await responseWorkerList.json();\n        this.state.workerList = jsonWorkerList;\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkWorker = () => {\n      try {\n        this.setState({\n          workerExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              workerExistMessage: \"* This worker name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.workerList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/worker-registration/\", {\n        name: this.state.workerName,\n        contact: this.state.workerContact,\n        village: this.state.workerVillage,\n        salary: this.state.workerSalary,\n        advance: this.state.advance,\n        date: this.state.date\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {//console.log(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      date: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkWorker = this.checkWorker.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Machine Worker Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(InputCommonName, {\n      minLengthh: 3,\n      placeholderParent: \"Worker Name\",\n      callbackFromParent: dataFromChild => {\n        this.state.workerName = dataFromChild;\n        this.checkWorker();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.workerExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(InputContactField, {\n      callbackFromParent: dataFromChild => {\n        this.state.workerContact = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerVillage\",\n      placeholder: \"Worker Village\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.workerVillage = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerSalary\",\n      placeholder: \"Worker Salary\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.workerSalary = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerAdvance\",\n      placeholder: \"Worker Advance\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.advance = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/WorkerRegistration.js"],"names":["React","axios","InputContactField","InputDateField","InputCommonName","WorkerRegistration","Component","constructor","props","fetchProduct","responseWorkerList","fetch","jsonWorkerList","json","state","workerList","toggleLoadStatus","checkWorker","setState","workerExistMessage","responseMessage","buttonStatus","visibility","showList","item","index","workerName","toLowerCase","name","forEach","err","onSubmit","e","post","contact","workerContact","village","workerVillage","salary","workerSalary","advance","date","then","res","data","catch","error","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render","dataFromChild","value","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport InputContactField from \"../modular/InputContactField\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputCommonName from \"../modular/InputCommonName\";\nexport default class WorkerRegistration extends React.Component {\n  // Fetch vehicle list from server\n  fetchProduct = async () => {\n    try {\n      const responseWorkerList = await fetch(\n        \"http://127.0.0.1:8000/list-of-worker/\"\n      );\n      const jsonWorkerList = await responseWorkerList.json();\n      this.state.workerList = jsonWorkerList;\n    } catch {\n      this.toggleLoadStatus();\n    }\n  };\n\n  // Check existence of vehicle name\n  checkWorker = () => {\n    try {\n      this.setState({\n        workerExistMessage: \"\",\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"visible\"\n        }\n      });\n      const showList = (item, index) => {\n        if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n          this.setState({\n            workerExistMessage: \"* This worker name is already exist!!!\",\n            buttonStatus: {\n              visibility: \"hidden\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.workerList.forEach(showList);\n    } catch (err) {}\n  };\n\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/worker-registration/\", {\n        name: this.state.workerName,\n        contact: this.state.workerContact,\n        village: this.state.workerVillage,\n        salary: this.state.workerSalary,\n        advance: this.state.advance,\n        date: this.state.date\n      })\n      .then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        //console.log(error.response.request._response);\n      });\n\n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.visibility === \"visible\") {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"hidden\"\n        },\n        loadedStatus: {\n          visibility: \"visible\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"visible\"\n        },\n        loadedStatus: {\n          visibility: \"hidden\"\n        }\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      date: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkWorker = this.checkWorker.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Worker Registration</p>\n        <div className=\"pt-5\">\n          <InputCommonName\n            minLengthh={3}\n            placeholderParent={\"Worker Name\"}\n            callbackFromParent={dataFromChild => {\n              this.state.workerName = dataFromChild;\n              this.checkWorker()\n            }}\n            \n          />\n\n          <p>{this.state.workerExistMessage}</p>\n          <br />\n\n          <InputContactField\n            callbackFromParent={dataFromChild => {\n              this.state.workerContact = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"workerVillage\"\n            placeholder=\"Worker Village\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.workerVillage = e.target.value;\n            }}\n            required\n          />\n\n          <br />\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"workerSalary\"\n            placeholder=\"Worker Salary\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.workerSalary = parseInt(e.target.value);\n            }}\n            required\n          />\n\n          <br />\n          <br />\n\n          <InputDateField\n            callbackFromParent={dataFromChild => {\n              this.state.date = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"workerAdvance\"\n            placeholder=\"Worker Advance\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.advance = parseInt(e.target.value);\n            }}\n            required\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}