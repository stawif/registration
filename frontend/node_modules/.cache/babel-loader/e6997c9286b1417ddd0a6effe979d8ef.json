{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deadpool\\\\Desktop\\\\final\\\\registration\\\\frontend\\\\src\\\\components\\\\registration\\\\MaterialRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nimport InputCommonName from \"../modular/InputCommonName\";\nimport InputRateField from \"../modular/InputRateField\";\nexport default class MaterialRegistration extends React.Component {\n  // Fetch material list from server\n  // Check existence of material name\n  //Form Handler\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseItemList = await fetch(\"http://127.0.0.1:8000/list-of-material/\");\n        const jsonItemList = await responseItemList.json();\n        this.state.materialList = jsonItemList;\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkMaterial = () => {\n      try {\n        this.setState({\n          materialExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.materialName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              materialExistMessage: \"* This material name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.materialList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/material-registration/\", {\n        name: this.state.materialName,\n        measurement: this.state.materialMeasurement,\n        quantity: this.state.materialQuantity\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {// alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      materialName: \"\",\n      materialMeasurement: \"\",\n      materialQuantity: 0,\n      materialList: {},\n      materialExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkMaterial = this.checkMaterial.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Material Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(InputCommonName, {\n      minLength: \"2\",\n      placeholderParent: \"Material Name\",\n      callbackFromParent: dataFromChild => {\n        this.state.materialName = dataFromChild;\n        this.checkMaterial();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.materialExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.materialMeasurement = dataFromChild;\n      },\n      placeholderParent: \"Material Measurement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Quantity\",\n      callbackFromParent: dataFromChild => {\n        this.state.materialQuantity = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/deadpool/Desktop/final/registration/frontend/src/components/registration/MaterialRegistration.js"],"names":["React","axios","InputQuantityField","InputCommonName","InputRateField","MaterialRegistration","Component","constructor","props","fetchProduct","responseItemList","fetch","jsonItemList","json","state","materialList","toggleLoadStatus","checkMaterial","setState","materialExistMessage","responseMessage","buttonStatus","visibility","showList","item","index","materialName","toLowerCase","name","forEach","err","onSubmit","e","post","measurement","materialMeasurement","quantity","materialQuantity","then","res","data","catch","error","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render","dataFromChild"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport InputQuantityField from \"../modular/InputQuantityField\";\r\nimport InputCommonName from \"../modular/InputCommonName\";\r\nimport InputRateField from \"../modular/InputRateField\";\r\n\r\nexport default class MaterialRegistration extends React.Component {\r\n  // Fetch material list from server\r\n  fetchProduct = async () => {\r\n    try {\r\n      const responseItemList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-material/\"\r\n      );\r\n      const jsonItemList = await responseItemList.json();\r\n      this.state.materialList = jsonItemList;\r\n    } catch {\r\n      this.toggleLoadStatus();\r\n    }\r\n  };\r\n\r\n  // Check existence of material name\r\n  checkMaterial = () => {\r\n    try {\r\n      this.setState({\r\n        materialExistMessage: \"\",\r\n        responseMessage: \"\",\r\n        buttonStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n      const showList = (item, index) => {\r\n        if (this.state.materialName.toLowerCase() === item.name.toLowerCase()) {\r\n          this.setState({\r\n            materialExistMessage: \"* This material name is already exist!!!\",\r\n            buttonStatus: {\r\n              visibility: \"hidden\"\r\n            }\r\n          });\r\n        } else {\r\n        }\r\n      };\r\n      this.state.materialList.forEach(showList);\r\n    } catch (err) {}\r\n  };\r\n\r\n  //Form Handler\r\n  onSubmit = e => {\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/material-registration/\", {\r\n        name: this.state.materialName,\r\n        measurement: this.state.materialMeasurement,\r\n        quantity: this.state.materialQuantity\r\n      })\r\n      .then(res => {\r\n        this.state.fetchProduct();\r\n        this.setState({\r\n          responseMessage: res.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        // alert(error.response.request._response);\r\n      });\r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  // toggle load status\r\n  toggleLoadStatus = async () => {\r\n    if (this.state.loadingStatus.visibility === \"visible\") {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"hidden\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"visible\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      materialName: \"\",\r\n      materialMeasurement: \"\",\r\n      materialQuantity: 0,\r\n      materialList: {},\r\n      materialExistMessage: \"\",\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadingStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadedStatus: {\r\n        visibility: \"hidden\"\r\n      }\r\n    };\r\n\r\n    this.fetchProduct = this.fetchProduct.bind(this);\r\n    this.checkMaterial = this.checkMaterial.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\r\n    this.fetchProduct();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.toggleLoadStatus();\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.onSubmit(e)}\r\n      >\r\n        <p className=\"headingViewPart\">Material Registration</p>\r\n        <div className=\"pt-5\">\r\n          <InputCommonName\r\n            minLength={\"2\"}\r\n            placeholderParent={\"Material Name\"}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.materialName = dataFromChild;\r\n              this.checkMaterial();\r\n            }}\r\n          />\r\n\r\n          <p>{this.state.materialExistMessage}</p>\r\n          <br />\r\n          <InputRateField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.materialMeasurement = dataFromChild;\r\n            }}\r\n            placeholderParent={\"Material Measurement\"}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <InputQuantityField\r\n            placeholder={\"Quantity\"}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.materialQuantity = dataFromChild;\r\n            }}\r\n          />\r\n\r\n          <hr />\r\n        </div>\r\n        <p>{this.state.responseMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-dark\"\r\n          style={this.state.buttonStatus}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}