{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/ItemRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class ItemRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemName: \"\",\n      itemMeasurement: \"\",\n      itemQuantity: 0,\n      itemList: {},\n      itemExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    }; // Fetch item list from server\n\n    this.state.fetchProduct = async () => {\n      const responseItemList = await fetch(\"http://127.0.0.1:8000/list-of-item/\");\n      const jsonItemList = await responseItemList.json();\n      this.state.itemList = jsonItemList;\n    };\n\n    this.state.fetchProduct(); // Check existence of item name\n\n    this.state.checkitem = () => {\n      try {\n        this.setState({\n          itemExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.itemName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              itemExistMessage: \"* This item name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.itemList.forEach(showList);\n      } catch (err) {}\n    }; //Form Handler\n\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/item-registration/\", {\n        name: this.state.itemName,\n        measurement: this.state.itemMeasurement,\n        quantity: this.state.itemQuantity\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Item Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"itemName\",\n      placeholder: \"Item Name\",\n      autocomplete: \"off\",\n      maxlength: \"30\",\n      minLength: \"2\",\n      onChange: e => {\n        this.state.itemName = e.target.value;\n        this.state.checkitem();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.itemExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"itemMeasurement\",\n      placeholder: \"Item Measurement\",\n      autocomplete: \"off\",\n      maxlength: \"30\",\n      minLength: \"1\",\n      onChange: e => {\n        this.state.itemMeasurement = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"itemQuantity\",\n      placeholder: \"Item Quantity\",\n      autocomplete: \"off\",\n      minLength: \"1\",\n      onChange: e => {\n        this.state.itemQuantity = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/ItemRegistration.js"],"names":["React","axios","ItemRegistration","Component","constructor","props","state","itemName","itemMeasurement","itemQuantity","itemList","itemExistMessage","responseMessage","buttonStatus","visibility","fetchProduct","responseItemList","fetch","jsonItemList","json","checkitem","setState","showList","item","index","toLowerCase","name","forEach","err","onSubmit","e","post","measurement","quantity","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","render","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class ItemRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      itemName: \"\",\n      itemMeasurement: \"\",\n      itemQuantity: 0,\n      itemList: {},\n      itemExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    };\n\n    // Fetch item list from server\n    this.state.fetchProduct = async () => {\n      const responseItemList = await fetch(\n        \"http://127.0.0.1:8000/list-of-item/\"\n      );\n      const jsonItemList = await responseItemList.json();\n      this.state.itemList = jsonItemList;\n    };\n\n    this.state.fetchProduct();\n\n    // Check existence of item name\n    this.state.checkitem = () => {\n      try {\n        this.setState({\n          itemExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n        const showList = (item, index) => {\n          if (this.state.itemName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              itemExistMessage: \"* This item name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.itemList.forEach(showList);\n      } catch (err) {}\n    };\n\n    //Form Handler\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/item-registration/\", {\n          name: this.state.itemName,\n          measurement: this.state.itemMeasurement,\n          quantity: this.state.itemQuantity\n        })\n        .then(res => {\n          this.state.fetchProduct();\n          this.setState({\n            responseMessage: res.data\n          });\n        })\n        .catch(error => {\n          alert(error.response.request._response);\n        });\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Item Registration</p>\n        <div className=\"pt-5\">\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"itemName\"\n            placeholder=\"Item Name\"\n            autocomplete=\"off\"\n            maxlength=\"30\"\n            minLength=\"2\"\n            onChange={e => {\n              this.state.itemName = e.target.value;\n              this.state.checkitem();\n            }}\n            required\n          />\n\n          <p>{this.state.itemExistMessage}</p>\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"itemMeasurement\"\n            placeholder=\"Item Measurement\"\n            autocomplete=\"off\"\n            maxlength=\"30\"\n            minLength=\"1\"\n            onChange={e => {\n              this.state.itemMeasurement = e.target.value;\n            }}\n            required\n          />\n\n          <br />\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"itemQuantity\"\n            placeholder=\"Item Quantity\"\n            autocomplete=\"off\"\n            minLength=\"1\"\n            onChange={e => {\n              this.state.itemQuantity = e.target.value;\n            }}\n            required\n          />\n\n          <hr />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}