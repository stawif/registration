{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/WorkerRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class WorkerRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      entryDate: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      workerContactValid: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    }; // Fetch worker list from server\n\n    this.state.fetchProduct = async () => {\n      const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\n      const jsonWorkerList = await responseWorkerList.json();\n      this.state.workerList = jsonWorkerList;\n    };\n\n    this.state.fetchProduct(); // Check existence of worker name\n\n    this.state.checkworker = () => {\n      try {\n        this.setState({\n          workerExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              workerExistMessage: \"* This worker name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.workerList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.validatePhone = () => {\n      this.setState({\n        workerContactValid: \"\" //responseMessage: \"\",\n\n      });\n      var phoneno = /^\\d{10}$/;\n      var wcontct = this.state.workerContact;\n      console.log(wcontct);\n\n      if (wcontct.match(phoneno)) {\n        console.log(\"true\");\n      } else {\n        this.setState({\n          workerContactValid: \"not valid phone no\"\n        }); //return false;\n      }\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/worker-registration/\", {\n        name: this.state.workerName,\n        contact: this.state.workerContact,\n        village: this.state.workerVillage,\n        salary: this.state.workerSalary,\n        advance: this.state.advance,\n        date: this.state.entryDate\n      }).then(res => {\n        this.state.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        console.log(error.response.request._response);\n      });\n      console.log(this.state.workerName);\n      console.log(this.state.workerContact);\n      console.log(this.state.workerVillage);\n      console.log(this.state.workerSalary);\n      console.log(this.state.entryDate);\n      console.log(this.state.advance);\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Machine Worker Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerName\",\n      placeholder: \"Worker Name\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"3\",\n      onChange: e => {\n        this.state.workerName = e.target.value;\n        this.state.checkworker();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.workerExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"tel\",\n      className: \"mb-2\",\n      name: \"workerContact\",\n      placeholder: \"Enter 10 digit Phone no\",\n      autoComplete: \"off\",\n      maxLength: \"10\",\n      minLength: \"10\",\n      onChange: e => {\n        this.state.workerContact = parseInt(e.target.value);\n        this.state.validatePhone();\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.workerContactValid), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"mb-2\",\n      name: \"workerVillage\",\n      placeholder: \"Worker Village\",\n      autoComplete: \"off\",\n      maxLength: \"30\",\n      minLength: \"5\",\n      onChange: e => {\n        this.state.workerVillage = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerSalary\",\n      placeholder: \"Worker Salary\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.workerSalary = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\",\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.state.entryDate = e.target.value;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"workerAdvance\",\n      placeholder: \"Worker Advance\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.state.advance = parseInt(e.target.value);\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/WorkerRegistration.js"],"names":["React","axios","WorkerRegistration","Component","constructor","props","state","workerName","workerContact","workerVillage","workerSalary","advance","entryDate","workerList","workerExistMessage","workerContactValid","responseMessage","buttonStatus","visibility","fetchProduct","responseWorkerList","fetch","jsonWorkerList","json","checkworker","setState","showList","item","index","toLowerCase","name","forEach","err","validatePhone","phoneno","wcontct","console","log","match","onSubmit","e","post","contact","village","salary","date","then","res","data","catch","error","response","request","_response","target","reset","preventDefault","render","value","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class WorkerRegistration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      entryDate: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      workerContactValid:\"\",\n      responseMessage: \"\",\n\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    };\n\n    // Fetch worker list from server\n    this.state.fetchProduct = async () => {\n      const responseWorkerList = await fetch(\n        \"http://127.0.0.1:8000/list-of-worker/\"\n      );\n      const jsonWorkerList = await responseWorkerList.json();\n      this.state.workerList = jsonWorkerList;\n    };\n\n    this.state.fetchProduct();\n\n    // Check existence of worker name\n    this.state.checkworker = () => {\n      try {\n        this.setState({\n          workerExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n        const showList = (item, index) => {\n          if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              workerExistMessage: \"* This worker name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {\n          }\n        };\n        this.state.workerList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.validatePhone = () =>{\n\n        this.setState({\n          workerContactValid: \"\",\n          //responseMessage: \"\",\n          \n        });\n      var phoneno = /^\\d{10}$/;\n      var wcontct= this.state.workerContact\n      console.log(wcontct)\n      if (wcontct.match(phoneno)){\n          console.log(\"true\");\n          \n            }\n          else\n            {\n              this.setState({workerContactValid:\"not valid phone no\"})\n            \n            //return false;\n            }\n\n    }\n    this.state.onSubmit = e => {\n      axios\n        .post(\"http://127.0.0.1:8000/worker-registration/\", {\n          name: this.state.workerName,\n          contact: this.state.workerContact,\n          village: this.state.workerVillage,\n          salary: this.state.workerSalary,\n          advance: this.state.advance,\n          date: this.state.entryDate\n        })\n        .then(res => {\n          this.state.fetchProduct();\n          this.setState({\n            responseMessage: res.data\n          });\n        })\n        .catch(error => {\n          console.log(error.response.request._response);\n        });\n      console.log(this.state.workerName);\n      console.log(this.state.workerContact);\n      console.log(this.state.workerVillage);\n      console.log(this.state.workerSalary);\n      console.log(this.state.entryDate);\n      console.log(this.state.advance);\n      e.target.reset();\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.state.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Machine Worker Registration</p>\n        <div className=\"pt-5\">\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"workerName\"\n            placeholder=\"Worker Name\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"3\"\n            onChange={e => {\n              this.state.workerName = e.target.value;\n\n              this.state.checkworker();\n            }}\n            required\n          />\n\n          <p>{this.state.workerExistMessage}</p>\n          <br />\n\n          <input\n            type=\"tel\"\n            className=\"mb-2\"\n            name=\"workerContact\"\n            placeholder=\"Enter 10 digit Phone no\"\n            autoComplete=\"off\"\n            maxLength=\"10\"\n            minLength=\"10\"\n            onChange={e => {\n\n              this.state.workerContact = parseInt(e.target.value);\n              this.state.validatePhone();\n            }}\n            required\n          />\n<p>{this.state.workerContactValid}</p>\n          <br />\n          <br />\n\n          <input\n            type=\"text\"\n            className=\"mb-2\"\n            name=\"workerVillage\"\n            placeholder=\"Worker Village\"\n            autoComplete=\"off\"\n            maxLength=\"30\"\n            minLength=\"5\"\n            onChange={e => {\n              this.state.workerVillage = e.target.value;\n            }}\n            required\n          />\n\n          <br />\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"workerSalary\"\n            placeholder=\"Worker Salary\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.workerSalary = parseInt(e.target.value);\n            }}\n            required\n          />\n\n          <br />\n          <br />\n\n          <input\n            type=\"date\"\n            data-date-format=\"YYYY-MM-DD\"\n            defaultValue={this.state.date}\n            name=\"date\"\n            onChange={e => {\n              this.state.entryDate = e.target.value;\n            }}\n            required\n          />\n\n          <br />\n          <br />\n\n          <input\n            type=\"number\"\n            className=\"mb-2\"\n            name=\"workerAdvance\"\n            placeholder=\"Worker Advance\"\n            autoComplete=\"off\"\n            onChange={e => {\n              this.state.advance = parseInt(e.target.value);\n            }}\n            required\n          />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}