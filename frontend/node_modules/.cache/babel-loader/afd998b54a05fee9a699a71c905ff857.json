{"ast":null,"code":"var _jsxFileName = \"E:\\\\registration\\\\frontend\\\\src\\\\components\\\\entry\\\\MachineSupplyEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nexport default class MachineSupplyEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myCallbackForSelectedParty = dataFromChild => {\n      this.state.selectedParty = dataFromChild;\n    };\n\n    this.myCallbackForselectedItem = dataFromChild => {\n      this.state.selectedItem = dataFromChild;\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      itemNamesFromApi: [],\n      date: null,\n      selectedParty: \"\",\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      }\n    };\n\n    this.state.fetchProduct = async () => {\n      fetch(\"http://127.0.0.1:8000/list-of-machineparty/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.partyNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n      fetch(\"http://127.0.0.1:8000/list-of-item/\").then(res => res.json()).then(out => {\n        out.map(item => this.state.itemNamesFromApi.push(item.name));\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    this.state.fetchProduct(); // Check existence of party name\n\n    this.state.checkparty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.checkitem = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.itemNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.state.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-machine-supply/\", {\n        party: this.state.selectedParty,\n        item: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity,\n        rate: this.state.rate,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n      this.setState({\n        selectedParty: \"\",\n        selectedItem: \"\"\n      });\n    };\n\n    this.state.getDate = () => {\n      var curr = new Date();\n      curr.setDate(curr.getDate());\n      var date = curr.toISOString().substr(0, 10);\n      this.state.date = date;\n    };\n\n    this.state.getDate();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.state.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Machine Supply Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: this.myCallbackForSelectedParty,\n      checkFromParent: this.state.checkparty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: this.state.itemNamesFromApi,\n      callbackFromParent: this.myCallbackForselectedItem,\n      placeholderfrom: \"Item name\",\n      checkFromParent: this.state.checkitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\" //data-date=\"\"\n      ,\n      \"data-date-format\": \"YYYY-MM-DD\",\n      defaultValue: this.state.date,\n      name: \"date\",\n      onChange: e => {\n        this.setState({\n          date: e.target.value\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"mb-2\",\n      name: \"quantity\",\n      placeholder: \"Quantity\",\n      autoComplete: \"off\",\n      onChange: e => {\n        this.setState({\n          quantity: parseInt(e.target.value)\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["E:/registration/frontend/src/components/entry/MachineSupplyEntry.js"],"names":["React","axios","Autocomplete","MachineSupplyEntry","Component","constructor","props","myCallbackForSelectedParty","dataFromChild","state","selectedParty","myCallbackForselectedItem","selectedItem","partyNamesFromApi","itemNamesFromApi","date","quantity","responseMessage","buttonStatus","visibility","fetchProduct","fetch","then","res","json","out","map","item","push","name","catch","err","checkparty","setState","showList","index","toLowerCase","forEach","checkitem","onSubmit","e","post","party","rate","remark","data","error","alert","response","request","_response","target","reset","preventDefault","getDate","curr","Date","setDate","toISOString","substr","render","partyExistMessage","value","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Autocomplete from \"./AutoComplete.jsx\";\r\nexport default class MachineSupplyEntry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      partyNamesFromApi: [],\r\n      itemNamesFromApi: [],\r\n      date: null,\r\n      selectedParty: \"\",\r\n      selectedItem: \"\",\r\n      quantity: 0,\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      }\r\n    };\r\n\r\n    this.state.fetchProduct = async () => {\r\n      fetch(\"http://127.0.0.1:8000/list-of-machineparty/\")\r\n        .then(res => res.json())\r\n        .then(out => {\r\n          out.map(item => this.state.partyNamesFromApi.push(item.name));\r\n        })\r\n        .catch(err => {\r\n          throw err;\r\n        });\r\n\r\n      fetch(\"http://127.0.0.1:8000/list-of-item/\")\r\n        .then(res => res.json())\r\n        .then(out => {\r\n          out.map(item => this.state.itemNamesFromApi.push(item.name));\r\n        })\r\n        .catch(err => {\r\n          throw err;\r\n        });\r\n    };\r\n\r\n    this.state.fetchProduct();\r\n    // Check existence of party name\r\n    this.state.checkparty = dataFromChild => {\r\n      try {\r\n        this.setState({\r\n          responseMessage: \"\",\r\n          buttonStatus: {\r\n            visibility: \"hidden\"\r\n          }\r\n        });\r\n        const showList = (item, index) => {\r\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n            this.setState({\r\n              buttonStatus: {\r\n                visibility: \"visible\"\r\n              }\r\n            });\r\n          } else {\r\n          }\r\n        };\r\n        this.state.partyNamesFromApi.forEach(showList);\r\n      } catch (err) {}\r\n    };\r\n\r\n    this.state.checkitem = dataFromChild => {\r\n      try {\r\n        this.setState({\r\n          responseMessage: \"\",\r\n          buttonStatus: {\r\n            visibility: \"hidden\"\r\n          }\r\n        });\r\n        const showList = (item, index) => {\r\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n            this.setState({\r\n              buttonStatus: {\r\n                visibility: \"visible\"\r\n              }\r\n            });\r\n          } else {\r\n          }\r\n        };\r\n        this.state.itemNamesFromApi.forEach(showList);\r\n      } catch (err) {}\r\n    };\r\n\r\n    this.state.onSubmit = e => {\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/enter-machine-supply/\", {\r\n          party: this.state.selectedParty,\r\n          item: this.state.selectedItem,\r\n          date: this.state.date,\r\n          quantity: this.state.quantity,\r\n          rate: this.state.rate,\r\n          remark: this.state.remark\r\n        })\r\n        .then(res => {\r\n          this.setState({\r\n            responseMessage: res.data\r\n          });\r\n        })\r\n        .catch(error => {\r\n          alert(error.response.request._response);\r\n        });\r\n\r\n      e.target.reset();\r\n      e.preventDefault();\r\n      this.setState({\r\n        selectedParty: \"\",\r\n      selectedItem: \"\"\r\n      })\r\n    };\r\n\r\n    this.state.getDate = () => {\r\n      var curr = new Date();\r\n      curr.setDate(curr.getDate());\r\n      var date = curr.toISOString().substr(0, 10);\r\n      this.state.date = date;\r\n    };\r\n\r\n    this.state.getDate();\r\n  }\r\n\r\n  myCallbackForSelectedParty = dataFromChild => {\r\n    this.state.selectedParty = dataFromChild;\r\n  };\r\n  myCallbackForselectedItem = dataFromChild => {\r\n    this.state.selectedItem = dataFromChild;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.state.onSubmit(e)}\r\n      >\r\n        <p className=\"headingViewPart\">Machine Supply Entry</p>\r\n        <div className=\"pt-5\">\r\n          <Autocomplete\r\n            suggestions={this.state.partyNamesFromApi}\r\n            callbackFromParent={this.myCallbackForSelectedParty}\r\n            checkFromParent={this.state.checkparty}\r\n            placeholderfrom={\"Party name\"}\r\n          />\r\n\r\n          <p>{this.state.partyExistMessage}</p>\r\n          <br />\r\n\r\n          <Autocomplete\r\n            suggestions={this.state.itemNamesFromApi}\r\n            callbackFromParent={this.myCallbackForselectedItem}\r\n            placeholderfrom={\"Item name\"}\r\n            checkFromParent={this.state.checkitem}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <input\r\n            type=\"date\"\r\n            //data-date=\"\"\r\n            data-date-format=\"YYYY-MM-DD\"\r\n            defaultValue={this.state.date}\r\n            name=\"date\"\r\n            onChange={e => {\r\n              this.setState({\r\n                date: e.target.value\r\n              });\r\n            }}\r\n            required\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <input\r\n            type=\"number\"\r\n            className=\"mb-2\"\r\n            name=\"quantity\"\r\n            placeholder=\"Quantity\"\r\n            autoComplete=\"off\"\r\n            onChange={e => {\r\n              this.setState({\r\n                quantity: parseInt(e.target.value)\r\n              });\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n        <p>{this.state.responseMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-dark\"\r\n          style={this.state.buttonStatus}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}