{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/RecorderRegistration.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nexport default function RecorderRegistration() {\n  const [recordername, userInput] = useState(\"\");\n  const [password, userPassword] = useState(\"\");\n  const {\n    register,\n    errors,\n    handleSubmit,\n    getValues\n  } = useForm();\n\n  const onSubmit = data => {\n    alert(\"recorder registered successfully \" + recordername);\n    axios.post(`http://127.0.0.1:8000/recorder-registration/`, {\n      username: recordername,\n      password: password\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n    window.location.reload(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Recorder Registration\")), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"recorderName\",\n    ref: register({\n      required: true,\n      maxLength: 30,\n      minLength: {\n        value: 5,\n        message: \"Min length is 5\"\n      }\n    }),\n    onChange: e => userInput(e.target.value),\n    placeholder: \"Enter Recorder Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: 'Password is required!'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, errors.password.message), React.createElement(\"input\", {\n    name: \"passwordConfirmation\",\n    ref: register({\n      required: 'Please confirm password!',\n      validate: {\n        matchesPreviousPassword: value => {\n          const {\n            password\n          } = getValues();\n          return password === value || 'Passwords should match!';\n        }\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), errors.passwordConfirmation && React.createElement(\"p\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, errors.passwordConfirmation.message), React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, Object.keys(errors).length > 0 && errors.password.message)), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/RecorderRegistration.js"],"names":["React","useState","axios","useForm","RecorderRegistration","recordername","userInput","password","userPassword","register","errors","handleSubmit","getValues","onSubmit","data","alert","post","username","then","res","console","log","window","location","reload","required","maxLength","minLength","value","message","e","target","color","validate","matchesPreviousPassword","passwordConfirmation","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function RecorderRegistration() {\n  const [recordername, userInput] = useState(\"\");\n  const [password, userPassword] = useState(\"\");\n\n  const { register, errors, handleSubmit, getValues } = useForm();\n\n  const onSubmit = data => {\n    alert(\"recorder registered successfully \" + recordername);\n    axios\n      .post(`http://127.0.0.1:8000/recorder-registration/`, {\n        username: recordername,\n        password: password\n      })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    window.location.reload(false);\n  };\n\n  return (\n    <div>\n      <center>\n        <h2>Recorder Registration</h2>\n      </center>\n      <div className=\"\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <input\n              type=\"text\"\n              name=\"recorderName\"\n              ref={register({\n                required: true,\n                maxLength: 30,\n                minLength: { value: 5, message: \"Min length is 5\" }\n              })}\n              onChange={e => userInput(e.target.value)}\n              placeholder=\"Enter Recorder Name\"\n            />\n            {/* <input\n              type=\"password\"\n              name=\"password\"\n              ref={register({\n                required: true,\n                maxLength: 30,\n                minLength: {\n                  value: 8,\n                  message: \"Min length is 8\",\n                  pattern: /^[A-Za-z]\\w{7,14}$/\n                }\n              })}\n              onChange={e => userPassword(e.target.value)}\n              placeholder=\"Enter Password\"\n            /> */}\n            \n            <input name=\"password\" ref={register({ required: 'Password is required!' })} />\n        {errors.password && <p style={{ color: 'white' }}>{errors.password.message}</p>}\n\n        \n        <input name=\"passwordConfirmation\" ref={register({\n          required: 'Please confirm password!',\n          validate: {\n            matchesPreviousPassword: (value) => {\n              const { password } = getValues();\n              return password === value || 'Passwords should match!';\n            },\n          }\n        })} />\n        {errors.passwordConfirmation && <p style={{ color: 'white' }}>{errors.passwordConfirmation.message}</p>}\n            <div style={{ color: \"red\" }}>\n              {Object.keys(errors).length > 0 && errors.password.message}\n            </div>\n          </div>\n\n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}