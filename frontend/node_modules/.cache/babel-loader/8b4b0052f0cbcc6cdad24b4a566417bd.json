{"ast":null,"code":"var _jsxFileName = \"E:\\\\registration\\\\frontend\\\\src\\\\components\\\\registration\\\\WorkerRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport InputContactField from \"../modular/InputContactField\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputCommonName from \"../modular/InputCommonName\";\nimport InputPartyVillageField from \"../modular/InputPartyVillageField\";\nimport InputRateField from \"../modular/InputRateField\";\nexport default class WorkerRegistration extends React.Component {\n  // Fetch vehicle list from server\n  // Check existence of vehicle name\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\n        const jsonWorkerList = await responseWorkerList.json();\n        this.state.workerList = jsonWorkerList;\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkWorker = () => {\n      try {\n        this.setState({\n          workerExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              workerExistMessage: \"* This worker name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.workerList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/worker-registration/\", {\n        name: this.state.workerName,\n        contact: this.state.workerContact,\n        village: this.state.workerVillage,\n        salary: this.state.workerSalary,\n        advance: this.state.advance,\n        date: this.state.date\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {//console.log(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      date: null,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkWorker = this.checkWorker.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Worker Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(InputCommonName, {\n      minLengthh: 3,\n      placeholderParent: \"Worker Name\",\n      callbackFromParent: dataFromChild => {\n        this.state.workerName = dataFromChild;\n        this.checkWorker();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.state.workerExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(InputContactField, {\n      callbackFromParent: dataFromChild => {\n        this.state.workerContact = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(InputPartyVillageField, {\n      callbackFromParent: dataFromChild => {\n        this.state.workerVillage = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Worker Salary\",\n      callbackFromParent: dataFromChild => {\n        this.state.workerSalary = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Worker Advance\",\n      callbackFromParent: dataFromChild => {\n        this.state.advance = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["E:/registration/frontend/src/components/registration/WorkerRegistration.js"],"names":["React","axios","InputContactField","InputDateField","InputCommonName","InputPartyVillageField","InputRateField","WorkerRegistration","Component","constructor","props","fetchProduct","responseWorkerList","fetch","jsonWorkerList","json","state","workerList","toggleLoadStatus","checkWorker","setState","workerExistMessage","responseMessage","buttonStatus","visibility","showList","item","index","workerName","toLowerCase","name","forEach","err","onSubmit","e","post","contact","workerContact","village","workerVillage","salary","workerSalary","advance","date","then","res","data","catch","error","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render","dataFromChild"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport InputContactField from \"../modular/InputContactField\";\r\nimport InputDateField from \"../modular/InputDateField\";\r\nimport InputCommonName from \"../modular/InputCommonName\";\r\nimport InputPartyVillageField from \"../modular/InputPartyVillageField\";\r\nimport InputRateField from \"../modular/InputRateField\";\r\nexport default class WorkerRegistration extends React.Component {\r\n  // Fetch vehicle list from server\r\n  fetchProduct = async () => {\r\n    try {\r\n      const responseWorkerList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-worker/\"\r\n      );\r\n      const jsonWorkerList = await responseWorkerList.json();\r\n      this.state.workerList = jsonWorkerList;\r\n    } catch {\r\n      this.toggleLoadStatus();\r\n    }\r\n  };\r\n\r\n  // Check existence of vehicle name\r\n  checkWorker = () => {\r\n    try {\r\n      this.setState({\r\n        workerExistMessage: \"\",\r\n        responseMessage: \"\",\r\n        buttonStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n      const showList = (item, index) => {\r\n        if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\r\n          this.setState({\r\n            workerExistMessage: \"* This worker name is already exist!!!\",\r\n            buttonStatus: {\r\n              visibility: \"hidden\"\r\n            }\r\n          });\r\n        } else {\r\n        }\r\n      };\r\n      this.state.workerList.forEach(showList);\r\n    } catch (err) {}\r\n  };\r\n\r\n  onSubmit = e => {\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/worker-registration/\", {\r\n        name: this.state.workerName,\r\n        contact: this.state.workerContact,\r\n        village: this.state.workerVillage,\r\n        salary: this.state.workerSalary,\r\n        advance: this.state.advance,\r\n        date: this.state.date\r\n      })\r\n      .then(res => {\r\n        this.fetchProduct();\r\n        this.setState({\r\n          responseMessage: res.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        //console.log(error.response.request._response);\r\n      });\r\n\r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  // toggle load status\r\n  toggleLoadStatus = async () => {\r\n    if (this.state.loadingStatus.visibility === \"visible\") {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"hidden\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"visible\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      workerName: \"\",\r\n      workerContact: \"\",\r\n      workerVillage: \"\",\r\n      workerSalary: 0,\r\n      advance: 0,\r\n      date: null,\r\n      workerList: {},\r\n      workerExistMessage: \"\",\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadingStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadedStatus: {\r\n        visibility: \"hidden\"\r\n      }\r\n    };\r\n\r\n    this.fetchProduct = this.fetchProduct.bind(this);\r\n    this.checkWorker = this.checkWorker.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\r\n    this.fetchProduct();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.toggleLoadStatus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.onSubmit(e)}\r\n      >\r\n        <p className=\"headingViewPart\">Worker Registration</p>\r\n        <div className=\"pt-5\">\r\n          <InputCommonName\r\n            minLengthh={3}\r\n            placeholderParent={\"Worker Name\"}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.workerName = dataFromChild;\r\n              this.checkWorker();\r\n            }}\r\n          />\r\n\r\n          <p>{this.state.workerExistMessage}</p>\r\n          <br />\r\n          \r\n          <InputContactField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.workerContact = dataFromChild;\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <InputPartyVillageField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.workerVillage = dataFromChild;\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <InputRateField\r\n            placeholderParent={\"Worker Salary\"}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.workerSalary = dataFromChild;\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <InputDateField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.date = dataFromChild;\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n          <InputRateField\r\n            placeholderParent={\"Worker Advance\"}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.advance = dataFromChild;\r\n            }}\r\n          />\r\n        </div>\r\n        <p>{this.state.responseMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-dark\"\r\n          style={this.state.buttonStatus}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}