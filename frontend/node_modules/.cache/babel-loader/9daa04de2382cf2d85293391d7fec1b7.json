{"ast":null,"code":"var _jsxFileName = \"E:\\\\registration\\\\frontend\\\\src\\\\components\\\\entry\\\\MachineWorkEntry.js\";\nimport React from \"react\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nexport default class MachineWorkEntry extends React.Component {\n  //Fetching Machines And Machine Parties from DataBase\n  // Check existence of party name\n  //Check Existance for MAchine name\n  //form Handler Submitting\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n        const jsonPartyList = await responsePartyList.json();\n        jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\n        const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n        const jsonMachineList = await responseMachineList.json();\n        jsonMachineList.map(item => this.state.machineNamesFromApi.push(item.name));\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkParty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = item => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.checkMachine = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = item => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.machineNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\n        party: this.state.selectedParty,\n        machine: this.state.selectedMachine,\n        date: this.state.date,\n        drilling_feet: this.state.drillingFeet,\n        diesel_amount: this.state.dieselAmount,\n        remark: this.state.remark\n      }).then(res => {\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      machineNamesFromApi: [],\n      date: null,\n      selectedMachine: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      dieselAmount: 0,\n      drillingFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      } // ,\n      // radioButtonStyle: {\n      //   float: \"left\"\n      // }\n      ,\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.checkMachine = this.checkMachine.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Machine Work Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      checkFromParent: this.checkParty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: this.state.machineNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedMachine = dataFromChild;\n      },\n      placeholderfrom: \"Machine name\",\n      checkFromParent: this.checkMachine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(InputRemarkField, {\n      callbackFromParent: dataFromChild => {\n        this.state.remark = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Diesel Amount\",\n      callbackFromParent: dataFromChild => {\n        this.state.dieselAmount = parseInt(dataFromChild);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Drilling Feet\",\n      callbackFromParent: dataFromChild => {\n        this.state.drillingFeet = parseInt(dataFromChild);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["E:/registration/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","Autocomplete","InputDateField","InputRemarkField","InputQuantityField","MachineWorkEntry","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","map","item","state","partyNamesFromApi","push","name","responseMachineList","jsonMachineList","machineNamesFromApi","toggleLoadStatus","checkParty","dataFromChild","setState","responseMessage","buttonStatus","visibility","showList","toLowerCase","forEach","err","checkMachine","onSubmit","e","axios","post","party","selectedParty","machine","selectedMachine","date","drilling_feet","drillingFeet","diesel_amount","dieselAmount","remark","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render","partyExistMessage","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport Autocomplete from \"./AutoComplete.jsx\";\r\nimport InputDateField from \"../modular/InputDateField\";\r\nimport InputRemarkField from \"../modular/InputRemarkField\";\r\nimport InputQuantityField from \"../modular/InputQuantityField\";\r\nexport default class MachineWorkEntry extends React.Component {\r\n  //Fetching Machines And Machine Parties from DataBase\r\n  fetchProduct = async () => {\r\n    try {\r\n      const responsePartyList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-machineparty/\"\r\n      );\r\n      const jsonPartyList = await responsePartyList.json();\r\n\r\n      jsonPartyList.map(item => this.state.partyNamesFromApi.push(item.name));\r\n\r\n      const responseMachineList = await fetch(\r\n        \"http://127.0.0.1:8000/list-of-machines/\"\r\n      );\r\n      const jsonMachineList = await responseMachineList.json();\r\n\r\n      jsonMachineList.map(item =>\r\n        this.state.machineNamesFromApi.push(item.name)\r\n      );\r\n    } catch {\r\n      this.toggleLoadStatus();\r\n    }\r\n  };\r\n\r\n  // Check existence of party name\r\n  checkParty = dataFromChild => {\r\n    try {\r\n      this.setState({\r\n        responseMessage: \"\",\r\n        buttonStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n      const showList = item => {\r\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n          this.setState({\r\n            buttonStatus: {\r\n              visibility: \"visible\"\r\n            }\r\n          });\r\n        } else {\r\n        }\r\n      };\r\n      this.state.partyNamesFromApi.forEach(showList);\r\n    } catch (err) {}\r\n  };\r\n\r\n  //Check Existance for MAchine name\r\n  checkMachine = dataFromChild => {\r\n    try {\r\n      this.setState({\r\n        responseMessage: \"\",\r\n        buttonStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n      const showList = item => {\r\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\r\n          this.setState({\r\n            buttonStatus: {\r\n              visibility: \"visible\"\r\n            }\r\n          });\r\n        } else {\r\n        }\r\n      };\r\n      this.state.machineNamesFromApi.forEach(showList);\r\n    } catch (err) {}\r\n  };\r\n\r\n  //form Handler Submitting\r\n  onSubmit = e => {\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\r\n        party: this.state.selectedParty,\r\n        machine: this.state.selectedMachine,\r\n        date: this.state.date,\r\n        drilling_feet: this.state.drillingFeet,\r\n        diesel_amount: this.state.dieselAmount,\r\n        remark: this.state.remark\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          responseMessage: res.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        alert(error.response.request._response);\r\n      });\r\n\r\n    e.target.reset();\r\n    e.preventDefault();\r\n  };\r\n\r\n  // toggle load status\r\n  toggleLoadStatus = async () => {\r\n    if (this.state.loadingStatus.visibility === \"visible\") {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"hidden\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"visible\"\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        loadingStatus: {\r\n          visibility: \"visible\"\r\n        },\r\n        loadedStatus: {\r\n          visibility: \"hidden\"\r\n        }\r\n      });\r\n    }\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      partyNamesFromApi: [],\r\n      machineNamesFromApi: [],\r\n\r\n      date: null,\r\n      selectedMachine: \"\",\r\n      selectedParty: \"\",\r\n      remark: \"\",\r\n      dieselAmount: 0,\r\n      drillingFeet: 0,\r\n      responseMessage: \"\",\r\n      buttonStatus: {\r\n        visibility: \"visible\"\r\n      }\r\n      // ,\r\n      // radioButtonStyle: {\r\n      //   float: \"left\"\r\n      // }\r\n      ,\r\n      loadingStatus: {\r\n        visibility: \"visible\"\r\n      },\r\n      loadedStatus: {\r\n        visibility: \"hidden\"\r\n      }\r\n    };\r\n\r\n    this.fetchProduct = this.fetchProduct.bind(this);\r\n    this.checkParty = this.checkParty.bind(this);\r\n    this.checkMachine = this.checkMachine.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\r\n    this.fetchProduct();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.toggleLoadStatus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-container form-group\"\r\n        onSubmit={e => this.onSubmit(e)}\r\n      >\r\n        <p className=\"headingViewPart\">Machine Work Entry</p>\r\n        <div className=\"pt-5\">\r\n          <Autocomplete\r\n            suggestions={this.state.partyNamesFromApi}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.selectedParty = dataFromChild;\r\n            }}\r\n            checkFromParent={this.checkParty}\r\n            placeholderfrom={\"Party name\"}\r\n          />\r\n\r\n          <p>{this.state.partyExistMessage}</p>\r\n          <br />\r\n\r\n          <Autocomplete\r\n            suggestions={this.state.machineNamesFromApi}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.selectedMachine = dataFromChild;\r\n            }}\r\n            placeholderfrom={\"Machine name\"}\r\n            checkFromParent={this.checkMachine}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <InputDateField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.date = dataFromChild;\r\n            }}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <InputRemarkField\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.remark = dataFromChild;\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n          <InputQuantityField\r\n            placeholder={\"Diesel Amount\"}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.dieselAmount = parseInt(dataFromChild);\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <InputQuantityField\r\n            placeholder={\"Drilling Feet\"}\r\n            callbackFromParent={dataFromChild => {\r\n              this.state.drillingFeet = parseInt(dataFromChild);\r\n            }}\r\n          />\r\n        </div>\r\n        <p>{this.state.responseMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-dark\"\r\n          style={this.state.buttonStatus}\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}