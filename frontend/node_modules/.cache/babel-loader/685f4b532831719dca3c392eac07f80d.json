{"ast":null,"code":"var _jsxFileName = \"/home/cog/Desktop/stawif/registration/frontend/src/components/tableDisplay/MachineWorkTable.js\";\nimport React from 'react';\nimport '../../tableDisplayCss.css';\nimport Popup from \"reactjs-popup\";\n\nclass MachineWorkTable extends React.Component {\n  //setDateRestriction \n  // Fetch data of machine work from party name came with props\n  //Push paid and unpaid work objects in different arrays \n  // Set final showing rows of table currentWork\n  //Handle selection of radio buttons and set paidStatus\n  //Set paidStatus to null so that tables show both paid and unpaid\n  //Prepare data for payment\n  //Form Handler\n  constructor(props) {\n    super(props);\n\n    this.setDateRestriction = (item, index) => {\n      if (item.paid == false) {\n        this.setState({\n          paymentData: {\n            minToDate: item.date,\n            maxToDate: this.state.maxDate\n          }\n        });\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.fetchProduct = async partyName => {\n      const responsWorkDetail = await fetch('http://127.0.0.1:8000/machine-work-detail/', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"party\": partyName\n        })\n      });\n      const jsonWorkDetail = await responsWorkDetail.json();\n      this.setState({\n        workDetail: jsonWorkDetail\n      });\n      this.setState({\n        minFilterDate: jsonWorkDetail.work[0].date\n      });\n      this.setState({\n        maxFilterDate: jsonWorkDetail.work.slice(-1)[0].date\n      }); //Set paymentData minToDate\n\n      jsonWorkDetail.work.every(this.setDateRestriction); //Set paymentData maxToDate\n\n      this.setState({\n        minToDate: this.state.minToDate,\n        maxToDate: jsonWorkDetail.work.slice(-1)[0].date\n      }); //this.state.paymentData.maxToDate = jsonWorkDetail.work.slice(-1)[0].date;\n    };\n\n    this.paidFilter = (item, index) => {\n      if (item.paid == true) {\n        this.state.paidWork.push(item);\n      } else {\n        this.state.unPaidWork.push(item);\n      }\n    };\n\n    this.setDateFilter = (item, index) => {\n      if (this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate) {\n        this.state.currentWork.push(item);\n      }\n    };\n\n    this.setPaidStatus = status => {\n      if (status === \"paid\") {\n        this.setState({\n          paidStatus: \"paid\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      } else if (status === \"unpaid\") {\n        this.setState({\n          paidStatus: \"unpaid\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        this.setState({\n          paidStatus: null\n        });\n      }\n    };\n\n    this.setPaidStatusNull = () => {\n      this.setState({\n        paidStatus: null,\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      document.getElementsByName('paidStatus')[0].checked = false;\n      document.getElementsByName('paidStatus')[1].checked = false;\n    };\n\n    this.preparePaymentData = (item, index) => {\n      this.state.drillingFeet = this.state.drillingFeet + item.drilling_feet;\n      this.state.dieselQuantity = this.state.dieselQuantity + item.diesel_amount;\n      this.state.payment = this.state.payment + item.payment;\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/machine-registration/\", {\n        name: this.state.machineName\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {});\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.state = {\n      workDetail: {\n        name: \"\",\n        contact: \"\",\n        village: \"\",\n        crasher: \"\",\n        work: []\n      },\n      paidWork: [],\n      unPaidWork: [],\n      paidStatus: null,\n      minDate: null,\n      maxDate: null,\n      minFilterDate: null,\n      maxFilterDate: null,\n      currentWork: [],\n      drillingFeet: 0,\n      dieselQuantity: 0,\n      payment: 0,\n      drillingRate: 0,\n      dieselRate: 0,\n      remark: \"\",\n      buttonStatus: {\n        visibility: \"hidden\"\n      },\n      paymentData: {\n        minToDate: null,\n        maxToDate: null\n      }\n    };\n    this.state.currentWork = null;\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.paidFilter = this.paidFilter.bind(this);\n    this.setPaidStatus = this.setPaidStatus.bind(this);\n    this.setDateFilter = this.setDateFilter.bind(this);\n    this.setPaidStatusNull = this.setPaidStatusNull.bind(this);\n    this.preparePaymentData = this.preparePaymentData.bind(this);\n    this.setDateRestriction = this.setDateRestriction.bind(this);\n    this.fetchProduct(this.props.partyName);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.partyName != nextProps.partyName) {\n      this.fetchProduct(nextProps.partyName);\n    }\n  }\n\n  render() {\n    console.log(\"Drilling rate : \", this.state.drillingRate);\n    console.log(\"Diesel rate : \", this.state.dieselRate); // Reset all list so that next time it don't carry same values\n\n    this.state.paidWork = [];\n    this.state.unPaidWork = [];\n    this.state.currentWork = []; //Reset total values of lower strip\n\n    this.state.drillingFeet = 0;\n    this.state.dieselQuantity = 0;\n    this.state.payment = 0; //Fill different lists\n\n    this.state.workDetail.work.forEach(this.paidFilter); //Set current work according to radio button choices\n\n    if (this.state.paidStatus === \"paid\") {\n      this.currentWorkFromRadio = this.state.paidWork;\n      this.state.minDate = Object(this.state.paidWork[0]).date;\n      this.state.maxDate = Object(this.state.paidWork.slice(-1)[0]).date;\n    } else if (this.state.paidStatus === \"unpaid\") {\n      this.currentWorkFromRadio = this.state.unPaidWork;\n      this.state.minDate = Object(this.state.unPaidWork[0]).date;\n      this.state.maxDate = Object(this.state.unPaidWork.slice(-1)[0]).date;\n    } else {\n      this.currentWorkFromRadio = this.state.workDetail.work;\n      this.state.minDate = Object(this.state.workDetail.work[0]).date;\n      this.state.maxDate = Object(this.state.workDetail.work.slice(-1)[0]).date;\n    } //Fill final list for show(Applying date filter)\n\n\n    this.currentWorkFromRadio.forEach(this.setDateFilter); //Prepare payment data\n\n    this.state.currentWork.forEach(this.preparePaymentData);\n    return React.createElement(\"div\", {\n      id: \"tableComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row upperTable bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      onClick: e => this.setPaidStatusNull(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, this.props.partyName)))), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, this.state.workDetail.contact))), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"paidStatus\",\n      value: \"paid\",\n      onChange: e => {\n        this.setPaidStatus(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), \"paid\")), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"commonFont blockquote text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"paidStatus\",\n      value: \"unpaid\",\n      onChange: e => {\n        this.setPaidStatus(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), \"Unpaid\")), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          minFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          maxFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"midTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \" table table-borderd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Paid\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Drilling Feet\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Holes\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Diesel Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Machine\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Payment\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Remark\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, this.state.currentWork.map(work => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: work.paid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, work.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, work.drilling_feet), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, work.holes), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, work.diesel_amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, work.machine), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, work.payment), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, work.remark)))))), React.createElement(\"div\", {\n      className: \"row lowerTable text-center bg-primary commonFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Drilling Feet =\")), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, this.state.drillingFeet)), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Diesel =\")), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, this.state.dieselQuantity)), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Payment =\")), React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, this.state.payment)), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      modal: true,\n      trigger: React.createElement(\"button\", {\n        className: \"btn btn-outline-dark\",\n        style: this.state.buttonStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Payment\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Payment\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), this.state.minDate, \" to \", this.state.maxFilterDate, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Total Drilling Feet : \", this.state.drillingFeet), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Drilling Feet Rate\",\n      className: \"paymentInput\",\n      onChange: e => this.setState({\n        drillingRate: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Total Diesel Quantity: \", this.state.dieselQuantity), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Diesel Rate\",\n      className: \"paymentInput\",\n      onChange: e => this.setState({\n        dieselRate: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Total Recieved Payment : \", this.state.payment), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Total Payment : \", this.state.drillingFeet * this.state.drillingRate - this.state.dieselQuantity * this.state.dieselRate - this.state.payment), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Remark\",\n      className: \"remark\",\n      onChange: e => this.setState({\n        remark: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Pay\"))))));\n  }\n\n}\n\nexport default MachineWorkTable;","map":{"version":3,"sources":["/home/cog/Desktop/stawif/registration/frontend/src/components/tableDisplay/MachineWorkTable.js"],"names":["React","Popup","MachineWorkTable","Component","constructor","props","setDateRestriction","item","index","paid","setState","paymentData","minToDate","date","maxToDate","state","maxDate","fetchProduct","partyName","responsWorkDetail","fetch","method","headers","body","JSON","stringify","jsonWorkDetail","json","workDetail","minFilterDate","work","maxFilterDate","slice","every","paidFilter","paidWork","push","unPaidWork","setDateFilter","currentWork","setPaidStatus","status","paidStatus","buttonStatus","visibility","setPaidStatusNull","document","getElementsByName","checked","preparePaymentData","drillingFeet","drilling_feet","dieselQuantity","diesel_amount","payment","onSubmit","e","axios","post","name","machineName","then","res","responseMessage","data","catch","error","target","reset","preventDefault","contact","village","crasher","minDate","drillingRate","dieselRate","remark","bind","componentWillReceiveProps","nextProps","render","console","log","forEach","currentWorkFromRadio","Object","value","map","holes","machine"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../tableDisplayCss.css';\nimport Popup from \"reactjs-popup\";\n\nclass MachineWorkTable extends React.Component{\n    //setDateRestriction \n    setDateRestriction = (item, index) =>{\n        if(item.paid == false){\n            this.setState({\n                paymentData: {\n                    minToDate: item.date,  \n                    maxToDate: this.state.maxDate\n                    }\n            });\n            return false;\n        }\n        else{\n            return true;\n        }\n    }\n    // Fetch data of machine work from party name came with props\n    fetchProduct = async (partyName) =>{\n        const responsWorkDetail = await fetch('http://127.0.0.1:8000/machine-work-detail/', {\n                method: 'post',\n                headers: {'Content-Type':'application/json'},\n                body: JSON.stringify({\n                \"party\": partyName\n                })\n            });        \n        const jsonWorkDetail = await responsWorkDetail.json();\n        this.setState({\n            workDetail: jsonWorkDetail\n        });    \n        this.setState({\n            minFilterDate: jsonWorkDetail.work[0].date\n        });\n        this.setState({\n            maxFilterDate: jsonWorkDetail.work.slice(-1)[0].date    \n        });\n\n        //Set paymentData minToDate\n        jsonWorkDetail.work.every(this.setDateRestriction);\n\n        //Set paymentData maxToDate\n        this.setState({\n            minToDate: this.state.minToDate,  \n            maxToDate: jsonWorkDetail.work.slice(-1)[0].date\n        });\n        //this.state.paymentData.maxToDate = jsonWorkDetail.work.slice(-1)[0].date;\n    }\n\n    //Push paid and unpaid work objects in different arrays \n    paidFilter = (item, index) =>{\n        if(item.paid == true){\n            this.state.paidWork.push(item);\n        }\n        else{\n            this.state.unPaidWork.push(item);\n        }\n    }\n\n    // Set final showing rows of table currentWork\n    setDateFilter = (item, index) => {\n        if(this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate){\n            this.state.currentWork.push(item);\n        }\n    }\n\n    //Handle selection of radio buttons and set paidStatus\n    setPaidStatus = (status) =>{\n        if(status===\"paid\"){\n            this.setState({\n                paidStatus: \"paid\",\n                buttonStatus: {\n                    visibility: \"hidden\"\n                }\n            });\n        }\n        else if(status===\"unpaid\"){\n            this.setState({\n                paidStatus: \"unpaid\",\n                buttonStatus: {\n                    visibility: \"visible\"\n                }\n            });\n        }\n        else{\n            this.setState({\n                paidStatus: null\n            }); \n        }\n    }\n\n    //Set paidStatus to null so that tables show both paid and unpaid\n    setPaidStatusNull = () =>{\n        this.setState({\n            paidStatus: null,\n            buttonStatus: {\n                visibility: \"hidden\"\n            }\n    }); \n        document.getElementsByName('paidStatus')[0].checked=false;\n        document.getElementsByName('paidStatus')[1].checked=false;\n    }\n\n    //Prepare data for payment\n    preparePaymentData = (item, index) =>{\n        this.state.drillingFeet= this.state.drillingFeet + item.drilling_feet;\n        this.state.dieselQuantity= this.state.dieselQuantity + item.diesel_amount;\n        this.state.payment= this.state.payment + item.payment;\n    }\n\n        //Form Handler\n    onSubmit = e => {\n        axios\n        .post(\"http://127.0.0.1:8000/machine-registration/\", {\n            name: this.state.machineName\n        })\n        .then(res => {\n            this.fetchProduct();\n            this.setState({\n            responseMessage: res.data\n            });\n        })\n        .catch(error => {});\n        e.target.reset();\n        e.preventDefault();\n    };\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            workDetail: {\n                name: \"\",\n                contact: \"\",\n                village: \"\",\n                crasher: \"\",\n                work: []\n            },\n            paidWork: [],\n            unPaidWork: [],\n            paidStatus: null,\n            minDate: null,\n            maxDate: null,\n            minFilterDate: null,\n            maxFilterDate: null,\n            currentWork: [],\n            drillingFeet: 0,\n            dieselQuantity: 0,\n            payment: 0,\n            drillingRate: 0,\n            dieselRate: 0,\n            remark: \"\",\n            buttonStatus: {\n                visibility: \"hidden\"\n            },\n            paymentData:{\n                minToDate: null,\n                maxToDate: null,\n            }\n        }\n        this.state.currentWork= null;\n        this.fetchProduct = this.fetchProduct.bind(this);\n        this.paidFilter = this.paidFilter.bind(this);\n        this.setPaidStatus = this.setPaidStatus.bind(this);\n        this.setDateFilter = this.setDateFilter.bind(this);\n        this.setPaidStatusNull = this.setPaidStatusNull.bind(this);\n        this.preparePaymentData = this.preparePaymentData.bind(this);\n        this.setDateRestriction = this.setDateRestriction.bind(this);\n        this.fetchProduct(this.props.partyName);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(this.props.partyName != nextProps.partyName){\n            this.fetchProduct(nextProps.partyName);\n        }\n    }\n\n    render(){\n        console.log(\"Drilling rate : \",this.state.drillingRate);\n        console.log(\"Diesel rate : \",this.state.dieselRate);\n        // Reset all list so that next time it don't carry same values\n        this.state.paidWork=[];\n        this.state.unPaidWork=[];\n        this.state.currentWork=[];\n\n        //Reset total values of lower strip\n        this.state.drillingFeet= 0;\n        this.state.dieselQuantity= 0;\n        this.state.payment= 0;\n\n        //Fill different lists\n        this.state.workDetail.work.forEach(this.paidFilter);\n\n        //Set current work according to radio button choices\n        if(this.state.paidStatus===\"paid\"){\n            this.currentWorkFromRadio= this.state.paidWork;\n            this.state.minDate = Object(this.state.paidWork[0]).date;\n            this.state.maxDate = Object(this.state.paidWork.slice(-1)[0]).date;\n        }\n        else if(this.state.paidStatus===\"unpaid\"){\n            this.currentWorkFromRadio= this.state.unPaidWork;\n            this.state.minDate = Object(this.state.unPaidWork[0]).date;\n            this.state.maxDate = Object(this.state.unPaidWork.slice(-1)[0]).date;\n        }\n        else{\n            this.currentWorkFromRadio= this.state.workDetail.work;\n            this.state.minDate = Object(this.state.workDetail.work[0]).date;\n            this.state.maxDate = Object(this.state.workDetail.work.slice(-1)[0]).date;\n        }\n\n        //Fill final list for show(Applying date filter)\n        this.currentWorkFromRadio.forEach(this.setDateFilter);\n\n        //Prepare payment data\n        this.state.currentWork.forEach(this.preparePaymentData);\n\n        return(\n            <div id=\"tableComponent\">\n                <div className=\"row upperTable bg-primary\">\n                    \n                    <div className=\"col-sm-2\">\n                        <blockquote className=\"commonFont blockquote text-center\">\n                            <p className=\"mb-0\" onClick={e => this.setPaidStatusNull()}><b>{this.props.partyName}</b></p>\n                            </blockquote>                        \n                    </div>\n\n                    <div className=\"col-sm-2\">\n                        <blockquote className=\"commonFont blockquote text-center\">\n                            <p className=\"mb-0\">{this.state.workDetail.contact}</p>\n                            {/*<footer className=\"blockquote-footer\"> 7742879818</footer>\n                        */}</blockquote>                        \n                    </div>\n                    \n                    <div className=\"col-sm-2\">\n                    <blockquote className=\"commonFont blockquote text-center\">\n                            <input type=\"radio\" name=\"paidStatus\" value=\"paid\" onChange={ e => {this.setPaidStatus(e.target.value)}}/>paid\n                    </blockquote>                        \n                    </div>\n                    \n                    <div className=\"col-sm-2\">\n                    <blockquote className=\"commonFont blockquote text-center\">\n                            <input type=\"radio\" name=\"paidStatus\" value=\"unpaid\" onChange={ e => {this.setPaidStatus(e.target.value)}} />Unpaid\n                    </blockquote>                        \n                    </div>\n                    \n                    <div className=\"col-sm-2\">\n                        <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                            this.setState({\n                                minFilterDate: e.target.value\n                            });\n                        }}/>\n                    </div>\n\n                    <div className=\"col-sm-2\">\n                        <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                            this.setState({\n                                maxFilterDate: e.target.value\n                            });\n                        }}/>\n                    </div>\n                </div>\n\n                <div id=\"midTable\">\n                        <table className=\" table table-borderd\">\n                            <thead className=\"thead-dark\">\n                                <tr>\n                                    <th>Paid</th>\n                                    <th>Date</th>\n                                    <th>Drilling Feet</th>\n                                    <th>Holes</th>\n                                    <th>Diesel Amount</th>\n                                    <th>Machine</th>\n                                    <th>Payment</th>\n                                    <th>Remark</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.currentWork.map((work) => (\n                                    <tr>\n                                        <td>{<input type=\"checkbox\" checked={work.paid}></input>}</td>\n                                        <td>{work.date}</td>\n                                        <td>{work.drilling_feet}</td>\n                                        <td>{work.holes}</td>\n                                        <td>{work.diesel_amount}</td>\n                                        <td>{work.machine}</td>\n                                        <td>{work.payment}</td>\n                                        <td>{work.remark}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                </div>\n\n                <div className=\"row lowerTable text-center bg-primary commonFont\">\n                        <div className=\"col-sm-2\">\n                            <p>Drilling Feet =</p>\n                        </div>\n                        <div className=\"col-sm-1\">\n                            <p>{this.state.drillingFeet}</p>\n                        </div>\n\n                        <div className=\"col-sm-2\">\n                            <p>Diesel =</p>\n                        </div>\n                        <div className=\"col-sm-1\">\n                                <p>{this.state.dieselQuantity}</p>\n                        </div>\n\n                        <div className=\"col-sm-2\">\n                            <p>Payment =</p>\n                        </div>\n                        <div className=\"col-sm-1\">\n                            <p>{this.state.payment}</p>\n                        </div>\n\n                        <div className=\"col-sm-3\">\n                            <Popup modal trigger={\n                                <button\n                                    className=\"btn btn-outline-dark\"\n                                    style={this.state.buttonStatus}>\n                                Payment\n                                </button>   \n                            }>\n                                <div>\n                                    <h3>Payment</h3>\n                                    <br/>\n                                    {this.state.minDate} to {this.state.maxFilterDate}\n                                    <p>Total Drilling Feet : {this.state.drillingFeet}</p>\n                                    <input type=\"text\" placeholder=\"Drilling Feet Rate\" className=\"paymentInput\" onChange={e => this.setState({ drillingRate: e.target.value })}/>\n                                    <hr/>\n                                    <p>Total Diesel Quantity: {this.state.dieselQuantity}</p>\n                                    <input type=\"text\" placeholder=\"Diesel Rate\" className=\"paymentInput\" onChange={e => this.setState({ dieselRate: e.target.value })}/>\n                                    <hr/>\n                                    <p>Total Recieved Payment : {this.state.payment}</p>\n                                    <hr />\n                                    <p>Total Payment : {(this.state.drillingFeet*this.state.drillingRate)-(this.state.dieselQuantity*this.state.dieselRate)-(this.state.payment)}</p>\n                                    <hr />\n                                    <input type=\"text\" placeholder=\"Remark\" className=\"remark\" onChange={e => this.setState({ remark: e.target.value })}/>\n                                    <hr />\n                                    <button>\n                                        Pay\n                                    </button>\n                                </div>\n                            </Popup>                            \n                        </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default MachineWorkTable;"]},"metadata":{},"sourceType":"module"}