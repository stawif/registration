{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/PartyReg.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport useInput from \"./InputField\";\nexport default function PartyReg() {\n  const [data, setData] = useState({});\n  const [party, setParty] = useState(\"\");\n  const [name, userName] = useInput({\n    type: \"text\",\n    placeholder: \"name\"\n  });\n  const [contact, userContact] = useInput({\n    type: \"text\",\n    placeholder: \"phone no\"\n  });\n  const [address, userAddress] = useInput({\n    type: \"text\",\n    placeholder: \"Address\"\n  });\n  useEffect(() => {\n    async function fetchProduct() {\n      const response = await fetch(\"http://127.0.0.1:8000/list-of-party/\");\n      const res = await response.json();\n      setData(res);\n    }\n\n    fetchProduct();\n    checkName();\n  }, [name]);\n  console.log(data); // below function is used to check typed machine name is already in database or not\n\n  function checkName() {\n    try {\n      const showList = (item, index) => {\n        console.log(\"Name is = \" + item.name);\n\n        if (name === item.name) {\n          alert(\"Chng machine name\");\n        }\n      };\n\n      data.forEach(showList);\n    } catch (err) {\n      console.log(\"Still loading...\");\n    }\n  }\n\n  function setRadio() {} // below function is used to submit the machine registration request\n\n\n  function handleClick() {\n    axios.post(\"http://127.0.0.1:8000/party-registration/\", {\n      name: name,\n      contact: contact,\n      village: address,\n      party_type: party\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n      setData(res);\n    });\n  }\n\n  console.log(party);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Party Registration\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, userName, userContact, userAddress, [\"machine_work\", \"vehicle_work\", \"daily_work\", \"purchase_party\"].map((option, i) => {\n    return React.createElement(\"label\", {\n      key: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      checked: party === option ? true : false,\n      key: i + 100,\n      onChange: () => setParty(option),\n      value: option,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), option);\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Register\"))));\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/PartyReg.js"],"names":["React","useState","useEffect","axios","useInput","PartyReg","data","setData","party","setParty","name","userName","type","placeholder","contact","userContact","address","userAddress","fetchProduct","response","fetch","res","json","checkName","console","log","showList","item","index","alert","forEach","err","setRadio","handleClick","post","village","party_type","then","map","option","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport useInput from \"./InputField\";\n\nexport default function PartyReg() {\n  const [data, setData] = useState({});\n\n  const [party, setParty] = useState(\"\");\n\n  const [name, userName] = useInput({ type: \"text\", placeholder: \"name\" });\n  const [contact, userContact] = useInput({type: \"text\", placeholder: \"phone no\"});\n  const [address, userAddress] = useInput({type: \"text\", placeholder: \"Address\"});\n\n  useEffect(() => {\n    async function fetchProduct() {\n      const response = await fetch(\"http://127.0.0.1:8000/list-of-party/\");\n\n      const res = await response.json();\n      setData(res);\n    }\n\n    fetchProduct();\n    checkName();\n  }, [name]);\n\n  console.log(data);\n  // below function is used to check typed machine name is already in database or not\n  function checkName() {\n    try {\n      const showList = (item, index) => {\n        console.log(\"Name is = \" + item.name);\n        if (name === item.name) {\n          alert(\"Chng machine name\");\n        }\n      };\n      data.forEach(showList);\n    } catch (err) {\n      console.log(\"Still loading...\");\n    }\n  }\n  function setRadio() {}\n\n  // below function is used to submit the machine registration request\n  function handleClick() {\n    axios\n      .post(\"http://127.0.0.1:8000/party-registration/\", {\n        name: name,\n        contact: contact,\n        village: address,\n        party_type: party\n      })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        setData(res);\n      });\n  }\n  console.log(party);\n\n  return (\n    <div>\n      <center>\n        <h2>Party Registration</h2>\n      </center>\n      <hr />\n      <br />\n      <div className=\"\">\n        <form onSubmit={handleClick}>\n          {userName}\n          {userContact}\n          {userAddress}\n\n          {[\"machine_work\", \"vehicle_work\", \"daily_work\", \"purchase_party\"].map(\n            (option, i) => {\n              return (\n                <label key={option}>\n                  <input\n                    type=\"radio\"\n                    checked={party === option ? true : false}\n                    key={i + 100}\n                    onChange={() => setParty(option)}\n                    value={option}\n                    required\n                  />\n                  {option}\n                </label>\n              );\n            }\n          )}\n\n          <button>Register</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}