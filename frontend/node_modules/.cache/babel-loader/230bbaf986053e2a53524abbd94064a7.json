{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/registration/frontend/src/components/registration/MachineRegistration.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nexport default function MachineRegistration() {\n  const [data, setData] = useState({});\n  const [machinename, userInput] = useState(\"\");\n  useEffect(() => {\n    async function fetchProduct() {\n      const response = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n      const res = await response.json();\n      setData(res);\n    }\n\n    fetchProduct();\n    checkMachine();\n  }, [machinename]);\n  console.log(machinename); // below function is used to check typed machine name is already in database or not\n\n  function checkMachine() {\n    try {\n      const showList = (item, index) => {\n        if (machinename === item.name) {\n          {\n            errors.name = \"please enter different machine name\";\n          } //userInput(\"\");\n\n          machinename = '';\n        } else {\n          {\n            errors.name = \"\";\n          }\n        }\n      };\n\n      data.forEach(showList);\n    } catch (err) {}\n  }\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    alert(JSON.stringify(data));\n    axios.post(`http://127.0.0.1:8000/machine-registration/`, {\n      name: machinename\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n      setData(res);\n    });\n    e.target.reset();\n  };\n\n  console.log(errors);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Machine Registration\")), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"First name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstname\",\n    ref: register({\n      required: true,\n      maxLength: 80,\n      minLength: {\n        value: 2,\n        message: 'Min length is 2'\n      }\n    }),\n    onChange: e => userInput(e.target.value),\n    placeholder: \"Enter Machine Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), errors.firstName && errors.firstName.message), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/ashokbatesar/registration/frontend/src/components/registration/MachineRegistration.js"],"names":["React","useState","useEffect","axios","useForm","MachineRegistration","data","setData","machinename","userInput","fetchProduct","response","fetch","res","json","checkMachine","console","log","showList","item","index","name","errors","forEach","err","register","handleSubmit","reset","onSubmit","e","alert","JSON","stringify","post","then","target","required","maxLength","minLength","value","message","firstName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function MachineRegistration() {\n  const [data, setData] = useState({});\n  const [machinename, userInput] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchProduct() {\n      const response = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n\n      const res = await response.json();\n      setData(res);\n    }\n\n    fetchProduct();\n    checkMachine();\n  }, [machinename]);\n\n  console.log(machinename);\n\n  // below function is used to check typed machine name is already in database or not\n  function checkMachine() {\n    try {\n      const showList = (item, index) => {\n        if (machinename === item.name) {\n          \n          {\n            errors.name = \"please enter different machine name\";\n          }\n          //userInput(\"\");\n          machinename=''\n        }\n        else {\n          {errors.name = \"\"}\n        }\n      };\n      data.forEach(showList);\n    } catch (err) {}\n  }\n\n  const { register, errors, handleSubmit, reset } = useForm();\n  const onSubmit = (data, e) => {\n    alert(JSON.stringify(data));\n    axios\n      .post(`http://127.0.0.1:8000/machine-registration/`, {\n        name: machinename\n      })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        setData(res);\n      });\n      e.target.reset();\n  };\n  console.log(errors);\n\n  return (\n    <div>\n      <center>\n        <h2>Machine Registration</h2>\n      </center>\n      <div className=\"\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label>First name</label>\n            <input\n              type=\"text\"\n              name=\"firstname\"\n              ref={register({ required: true, maxLength: 80, minLength: {value: 2, message: 'Min length is 2'} })}\n              onChange={e => userInput(e.target.value)}\n              placeholder=\"Enter Machine Name\"\n            />\n            {errors.firstName && errors.firstName.message}\n          </div>\n          \n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}